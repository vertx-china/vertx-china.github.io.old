{"pageProps":{"slug":"vertx-auth-htpasswd/java","title":".htpasswd 鉴权与授权的提供程序（.htpasswd鉴授权提供者）","fallbackGitHubStars":null,"toc":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_provider_internal_behavior\">提供程序的内部行为</a></li>\n<li><a href=\"#_authentication\">鉴权/身份验证</a></li>\n<li><a href=\"#_authorization\">授权</a></li>\n</ul>\n</div>","contents":"<h1>.htpasswd 鉴权与授权的提供程序（.htpasswd鉴授权提供者）</h1>\n\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x提供了 <code><a href=\"../../apidocs/io/vertx/ext/auth/authentication/AuthenticationProvider.html\">AuthenticationProvider</a></code> 的实现类， 它使用Apache htpasswd\n的文件格式来执行身份验证。提供程序加载后，将不会监视文件的更新。\n如果您需要动态的用户管理，使用动态提供程序（如jdbc或mongo提供程序）会更加的方便。</p>\n</div>\n<div class=\"paragraph\">\n<p>要使用此项目，\n在构建描述文件的 <em>dependencies</em> 部分添加以下依赖项：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Maven (在 <code>pom.xml</code> 文件中)：</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-xml\" data-lang=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-auth-htpasswd<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.1.5<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span></code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Gradle (在 <code>build.gradle</code> 文件中)：</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-groovy\" data-lang=\"groovy\">compile <span class=\"hljs-string\">&#x27;io.vertx:vertx-auth-htpasswd:4.1.5&#x27;</span></code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>要创建一个实例，您首先需要一份htpasswd文件。htpasswd文件可以使用apache htpasswd工具生成。</p>\n</div>\n<div class=\"paragraph\">\n<p>若您已拥有一个Vertx实例，那么您可按以下方式创建 <code><a href=\"../../apidocs/io/vertx/ext/auth/htpasswd/HtpasswdAuth.html\">HtpasswdAuth</a></code> 实例：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">HtpasswdAuth authProvider = HtpasswdAuth\n  .create(vertx, <span class=\"hljs-keyword\">new</span> HtpasswdAuthOptions());</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>获得HtpasswdAuth实例后， 您可以像使用任何的 <code><a href=\"../../apidocs/io/vertx/ext/auth/authentication/AuthenticationProvider.html\">AuthenticationProvider</a></code> 实例一样，使用它进行身份验证。</p>\n</div>\n<div class=\"paragraph\">\n<p>缺省配置默认 .htpasswd 文件存在于项目的根目录中。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_provider_internal_behavior\"><a class=\"anchor\" href=\"#_provider_internal_behavior\"></a>提供程序的内部行为</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>提供程序将在启动时加载指定的htpasswd文件，并且不会监视文件的修改。\n如果需要动态加载, 您需要重新启动程序。</p>\n</div>\n<div class=\"paragraph\">\n<p>除htpasswd文件本身之外，该实现是无状态的。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_authentication\"><a class=\"anchor\" href=\"#_authentication\"></a>鉴权/身份验证</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>使用此实现进行身份验证时，假定用户名和密码是被解析为JSON对象，\n那么我们将为其验证身份信息：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">JsonObject authInfo = <span class=\"hljs-keyword\">new</span> JsonObject()\n  .put(<span class=\"hljs-string\">&quot;username&quot;</span>, <span class=\"hljs-string\">&quot;someUser&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;password&quot;</span>, <span class=\"hljs-string\">&quot;somePassword&quot;</span>);\n\nauthProvider.authenticate(authInfo)\n  .onSuccess(user -&gt; {\n    <span class=\"hljs-comment\">// OK</span>\n  })\n  .onFailure(err -&gt; {\n    <span class=\"hljs-comment\">// Failed!</span>\n  });</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_authorization\"><a class=\"anchor\" href=\"#_authorization\"></a>授权</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Apache htpasswd文件是一个纯粹的身份验证机制，并非是授权。这意味着权限检查将始终默认为false。</p>\n</div>\n</div>\n</div>"},"__N_SSG":true}