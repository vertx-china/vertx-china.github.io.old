{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Eclipse Vert.x goes Native","category":"guides","authors":[{"name":"Johannes Sch√ºth","github_id":"jotschi"}],"summary":"This blog post introduces native image generation of Vert.x applications with GraalVM. Generated executables can be run without a JVM."},"date":"2018-06-04","slug":"eclipse-vert-x-goes-native","readingTime":{"text":"5 min read","minutes":4.235,"time":254100.00000000003,"words":847},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I this blog post, I would like to give you a pre\\xADview on na\\xADtive image gen\\xADer\\xADa\\xADtion of Vert.x ap\\xADpli\\xADca\\xADtions using GraalVM.\"), mdx(\"p\", null, \"With \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.graalvm.org/\"\n  }), \"GraalVM\"), \" it is pos\\xADsi\\xADble to gen\\xADer\\xADate na\\xADtive ex\\xADe\\xADcuta\\xADbles.\\nThese ex\\xADe\\xADcuta\\xADbles can be di\\xADrectly run with\\xADout the need of an in\\xADstalled JVM.\"), mdx(\"h2\", {\n    \"id\": \"benefits\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#benefits\"\n  })), \"Benefits\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The start up time is way faster. It is no longer re\\xADquired to wait for the start up of the JVM. The ap\\xADpli\\xADca\\xADtion is usu\\xADally up and run\\xADning in a mat\\xADter of mil\\xADlisec\\xADonds.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Re\\xADduced mem\\xADory foot\\xADprint. I mea\\xADsured 40 MB mem\\xADory usage (RSS) for the Vert.x Web ap\\xADpli\\xADca\\xADtion which I\\u2019m going to show\\xADcase.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Smaller Con\\xADtain\\xADers. No JVM means no over\\xADhead. All the needed parts are al\\xADready con\\xADtained within the ex\\xADe\\xADcutable. This can be very ben\\xADe\\xADfi\\xADcial when build\\xADing de\\xADploy\\xADable con\\xADtainer im\\xADages.\"))), mdx(\"h2\", {\n    \"id\": \"demo-project\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#demo-project\"\n  })), \"Demo Project\"), mdx(\"p\", null, \"For the demo ap\\xADpli\\xADca\\xADtion I choose a very basic hello world \", mdx(Link, {\n    href: \"/docs/vertx-web/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x Web\")), \" server.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"package\"), \" de.jotschi.examples;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" java.io.File;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.core.Vertx;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.core.logging.Logger;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.core.logging.LoggerFactory;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.core.logging.SLF4JLogDelegateFactory;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.ext.web.Router;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"Runner\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"main\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(String[] args)\"), \" \"), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Use logback for logging\"), \"\\n    File logbackFile = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" File(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"config\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"logback.xml\\\"\"), \");\\n    System.setProperty(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"logback.configurationFile\\\"\"), \", logbackFile.getAbsolutePath());\\n    System.setProperty(LoggerFactory.LOGGER_DELEGATE_FACTORY_CLASS_NAME, SLF4JLogDelegateFactory.class.getName());\\n    Logger log = LoggerFactory.getLogger(Runner.class);\\n\\n    // Setup the http server\\n    log.info(\\\"Starting server \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"for\"), \": http://localhost:\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8080\"), \"/hello\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\");\\n    Vertx vertx = Vertx.vertx();\\n    Router router = Router.router(vertx);\\n\\n    router.route(\\\"\"), \"/hello\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\").handler(rc -> {\\n      log.info(\\\"\"), \"Got hello request\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\");\\n      rc.response().end(\\\"\"), \"World\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\");\\n    });\\n\\n    vertx.createHttpServer()\\n      .requestHandler(router::accept)\\n      .listen(8080);\\n\\n  }\\n\\n}\\n\"))), mdx(\"h2\", {\n    \"id\": \"graalvm\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#graalvm\"\n  })), \"GraalVM\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.graalvm.org/\"\n  }), \"GraalVM\"), \" runs a sta\\xADtic analy\\xADsis on the gen\\xADer\\xADated ap\\xADpli\\xADca\\xADtion in order to find the reach\\xADable code.\\nThis process which is run within the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/oracle/graal/tree/master/substratevm\"\n  }), \"Sub\\xADstrate VM\"), \" will lead to the gen\\xADer\\xADa\\xADtion of the na\\xADtive image.\"), mdx(\"h3\", {\n    \"id\": \"limitations\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#limitations\"\n  })), \"Limitations\"), mdx(\"p\", null, \"Due to the na\\xADture of the sta\\xADtic analy\\xADsis Sub\\xADstrate VM also has some \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/oracle/graal/blob/master/substratevm/LIMITATIONS.md\"\n  }), \"lim\\xADi\\xADta\\xADtions\"), \".\"), mdx(\"p\", null, \"Dy\\xADnamic class load\\xADing and un\\xADload\\xADing for ex\\xADam\\xADple is not sup\\xADported be\\xADcause this would in essence alter the avail\\xADable code dur\\xADing run\\xADtime. \"), mdx(\"p\", null, \"Re\\xADflec\\xADtion is only par\\xADtially sup\\xADported and re\\xADquires some man\\xADual steps which we will cover later on.\"), mdx(\"h3\", {\n    \"id\": \"patches--workarounds\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#patches--workarounds\"\n  })), \"Patches / Workarounds\"), mdx(Alert, {\n    info: true,\n    title: \"Work in progress\",\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"Next we need to apply some patches / workarounds. Keep in mind that na\\xADtive image gen\\xADer\\xADa\\xADtion is a fairly new topic and the these workarounds will hope\\xADfully no longer be re\\xADquired once the Sub\\xADstrate VM and Netty have bet\\xADter sup\\xADport for each other.\")), mdx(\"p\", null, \"I did not man\\xADage to get na\\xADtive epoll, kqueue and SSL in\\xADte\\xADgra\\xADtion to work with na\\xADtive im\\xADages.\\nThese parts are heav\\xADily op\\xADti\\xADmized within Netty and use JNI to di\\xADrectly ac\\xADcess the OS fea\\xADtures.\\nSub\\xADstrate VM sup\\xADports JNI and could in the\\xADory in\\xADte\\xADgrate these na\\xADtive li\\xADbraries. \"), mdx(\"p\", null, \"I cre\\xADated a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Jotschi/vertx-graalvm-native-image-test/tree/netty-native-epoll\"\n  }), \"re\\xADpro\\xADducer\"), \"\\nand an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/oracle/graal/issues/442\"\n  }), \"issue\"), \" so hope\\xADfully these prob\\xADlems can be ad\\xADdressed soon.\"), mdx(\"h3\", {\n    \"id\": \"vertx-transport\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-transport\"\n  })), \"Vert.x Transport\"), mdx(\"p\", null, \"First I needed to patch the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"io.vertx.core.net.impl.transport.Transport\"), \" class in order to pre\\xADvent the load\\xADing of EPoll and KQueue na\\xADtive sup\\xADport. Oth\\xADer\\xADwise Sub\\xADstrate VM will try to load these classes and fail.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"Transport\"), \" \"), \"{\\n\\u2026\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"/**\\n   * The native transport, it may be {\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-doctag\"\n  }), \"@code\"), \" null} or failed.\\n   */\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" Transport \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"nativeTransport\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Patched: I remove the native transport discovery. \"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// The imports would be picked up by substrate \"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// and cause further issues. \"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"null\"), \";\\n  }\\n\\u2026\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"netty-ssl\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#netty-ssl\"\n  })), \"Netty SSL\"), mdx(\"p\", null, \"Na\\xADtive SSL sup\\xADport is an\\xADother prob\\xADlem\\xADatic area. I cre\\xADated a patched dummy \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"io.netty.handler.ssl.ReferenceCountedOpenSslEngine\"), \" class in order to pre\\xADvent Sub\\xADstrate VM from dig\\xADging deeper into the SSL code of Netty.\"), mdx(\"p\", null, \"Next we need to set up the re\\xADflec\\xADtion con\\xADfig\\xADu\\xADra\\xADtion within \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reflectconfigs/netty.json\"), \".\"), mdx(\"p\", null, \"Netty uses re\\xADflec\\xADtion to in\\xADstan\\xADti\\xADate the socket chan\\xADnels. This is done in the Re\\xADflec\\xADtiveChan\\xADnelFac\\xADtory. We need to tell Sub\\xADstrate VM how classes of type NioServer\\xADSock\\xADetChan\\xADnel  and NioSock\\xADetChan\\xADnel can be in\\xADstan\\xADti\\xADated. \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-json\"\n  }), \"[\\n  {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \" : \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"io.netty.channel.socket.nio.NioSocketChannel\\\"\"), \",\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"methods\\\"\"), \" : [\\n      { \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \" : \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<init>\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"parameterTypes\\\"\"), \" : [] }\\n    ]\\n  },\\n  {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \" : \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"io.netty.channel.socket.nio.NioServerSocketChannel\\\"\"), \",\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"methods\\\"\"), \" : [\\n      { \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \" : \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<init>\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"parameterTypes\\\"\"), \" : [] }\\n    ]\\n  }\\n]\\n\")), mdx(\"p\", null, \"If you want to learn more about the state of Netty and GraalVM I can rec\\xADom\\xADmend this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.com/graalvm/instant-netty-startup-using-graalvm-native-image-generation-ed6f14ff7692\"\n  }), \"GraalVM Blog\\xADpost\"), \" by Co\\xADdrut Stancu.\"), mdx(\"h2\", {\n    \"id\": \"building\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#building\"\n  })), \"Building\"), mdx(\"p\", null, \"Fi\\xADnally we can build our maven project to gen\\xADer\\xADate a shaded jar.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"mvn clean package\\n\")), mdx(\"p\", null, \"Next we need the GraalVM pack\\xADage. You can down\\xADload it from the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.graalvm.org/\"\n  }), \"GraalVM web\\xADsite\"), \".\"), mdx(\"p\", null, \"We use the shaded jar as the input source for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"native-image\"), \" com\\xADmand which will gen\\xADer\\xADate the ex\\xADe\\xADcutable.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-variable\"\n  }), \"$GRAALVMDIR\"), \"/bin/native-image \\\\\\n --verbose \\\\\\n --no-server \\\\\\n -Dio.netty.noUnsafe=\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-literal\"\n  }), \"true\"), \"  \\\\\\n -H:ReflectionConfigurationFiles=./reflectconfigs/netty.json \\\\\\n -H:+ReportUnsupportedElementsAtRuntime \\\\\\n -Dfile.encoding=UTF-8 \\\\\\n -jar target/vertx-graalvm-native-image-test-0.0.1-SNAPSHOT.jar\\n\")), mdx(\"h2\", {\n    \"id\": \"result\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#result\"\n  })), \"Result\"), mdx(\"p\", null, \"Fi\\xADnally we end up with an 27 MB \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-graalvm-native-image-test-0.0.1-SNAPSHOT\"), \" ex\\xADe\\xADcutable which we can run.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"$ ldd vertx-graalvm-native-image-test-0.0.1-SNAPSHOT \\n  linux-vdso.so.1 (0x00007ffc65be8000)\\n  libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8e892f0000)\\n  libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f8e890d3000)\\n  libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f8e88eb9000)\\n  librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f8e88cb1000)\\n  libcrypt.so.1 => /lib/x86_64-linux-gnu/libcrypt.so.1 (0x00007f8e88a79000)\\n  libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8e886da000)\\n  /lib64/ld-linux-x86-64.so.2 (0x00007f8e8afb7000)\\n\")), mdx(\"h3\", {\n    \"id\": \"memory\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#memory\"\n  })), \"Memory\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"/usr/bin/time -f \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"\\\\nmaxRSS\\\\t%MkB\\\"\"), \" java -jar target/vertx-graalvm-native-image-test-0.0.1-SNAPSHOT.jar \\n/usr/bin/time -f \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"\\\\nmaxRSS\\\\t%MkB\\\"\"), \" ./vertx-graalvm-native-image-test-0.0.1-SNAPSHOT \\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Na\\xADtive Image: 40 MB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Java 10: 125 MB\")), mdx(\"p\", null, \"The full project can be found on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Jotschi/vertx-graalvm-native-image-test\"\n  }), \"GitHub\"), \".\"), mdx(\"p\", null, \"If you want to read more on the topic I can also rec\\xADom\\xADmend \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://sites.google.com/a/athaydes.com/renato-athaydes/posts/a7mbnative-imagejavaappthatrunsin30msandusesonly4mbofram\"\n  }), \"this ar\\xADti\\xADcle\"), \" by Re\\xADnato Athay\\xADdes in which he demon\\xADstrates how to cre\\xADate a very small light weight low mem\\xADory ap\\xADpli\\xADca\\xADtion using GraalVM.\"), mdx(\"p\", null, \"Thanks for read\\xADing. If you have any fur\\xADther ques\\xADtions or feed\\xADback don\\u2019t hes\\xADi\\xADtate to send me a tweet to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/Jotschi/\"\n  }), \"@Jotschi\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>I this blog post, I would like to give you a pre¬≠view on na¬≠tive image gen¬≠er¬≠a¬≠tion of Vert.x ap¬≠pli¬≠ca¬≠tions using GraalVM.</p><p>With <a href=\"https://www.graalvm.org/\">GraalVM</a> it is pos¬≠si¬≠ble to gen¬≠er¬≠ate na¬≠tive ex¬≠e¬≠cuta¬≠bles.\nThese ex¬≠e¬≠cuta¬≠bles can be di¬≠rectly run with¬≠out the need of an in¬≠stalled JVM.</p><h2 id=\"benefits\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#benefits\"></a>Benefits</h2><ul><li><p>The start up time is way faster. It is no longer re¬≠quired to wait for the start up of the JVM. The ap¬≠pli¬≠ca¬≠tion is usu¬≠ally up and run¬≠ning in a mat¬≠ter of mil¬≠lisec¬≠onds.</p></li><li><p>Re¬≠duced mem¬≠ory foot¬≠print. I mea¬≠sured 40 MB mem¬≠ory usage (RSS) for the Vert.x Web ap¬≠pli¬≠ca¬≠tion which I‚Äôm going to show¬≠case.</p></li><li><p>Smaller Con¬≠tain¬≠ers. No JVM means no over¬≠head. All the needed parts are al¬≠ready con¬≠tained within the ex¬≠e¬≠cutable. This can be very ben¬≠e¬≠fi¬≠cial when build¬≠ing de¬≠ploy¬≠able con¬≠tainer im¬≠ages.</p></li></ul><h2 id=\"demo-project\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#demo-project\"></a>Demo Project</h2><p>For the demo ap¬≠pli¬≠ca¬≠tion I choose a very basic hello world <a href=\"/docs/vertx-web/java/\">Vert.x Web</a> server.</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">package</span> de.jotschi.examples;\n\n<span class=\"hljs-keyword\">import</span> java.io.File;\n\n<span class=\"hljs-keyword\">import</span> io.vertx.core.Vertx;\n<span class=\"hljs-keyword\">import</span> io.vertx.core.logging.Logger;\n<span class=\"hljs-keyword\">import</span> io.vertx.core.logging.LoggerFactory;\n<span class=\"hljs-keyword\">import</span> io.vertx.core.logging.SLF4JLogDelegateFactory;\n<span class=\"hljs-keyword\">import</span> io.vertx.ext.web.Router;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Runner</span> </span>{\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n    <span class=\"hljs-comment\">// Use logback for logging</span>\n    File logbackFile = <span class=\"hljs-keyword\">new</span> File(<span class=\"hljs-string\">&quot;config&quot;</span>, <span class=\"hljs-string\">&quot;logback.xml&quot;</span>);\n    System.setProperty(<span class=\"hljs-string\">&quot;logback.configurationFile&quot;</span>, logbackFile.getAbsolutePath());\n    System.setProperty(LoggerFactory.LOGGER_DELEGATE_FACTORY_CLASS_NAME, SLF4JLogDelegateFactory.class.getName());\n    Logger log = LoggerFactory.getLogger(Runner.class);\n\n    // Setup the http server\n    log.info(&quot;Starting server <span class=\"hljs-keyword\">for</span>: http://localhost:<span class=\"hljs-number\">8080</span>/hello<span class=\"hljs-string\">&quot;);\n    Vertx vertx = Vertx.vertx();\n    Router router = Router.router(vertx);\n\n    router.route(&quot;</span>/hello<span class=\"hljs-string\">&quot;).handler(rc -&gt; {\n      log.info(&quot;</span>Got hello request<span class=\"hljs-string\">&quot;);\n      rc.response().end(&quot;</span>World<span class=\"hljs-string\">&quot;);\n    });\n\n    vertx.createHttpServer()\n      .requestHandler(router::accept)\n      .listen(8080);\n\n  }\n\n}\n</span></code></pre><h2 id=\"graalvm\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#graalvm\"></a>GraalVM</h2><p><a href=\"https://www.graalvm.org/\">GraalVM</a> runs a sta¬≠tic analy¬≠sis on the gen¬≠er¬≠ated ap¬≠pli¬≠ca¬≠tion in order to find the reach¬≠able code.\nThis process which is run within the <a href=\"https://github.com/oracle/graal/tree/master/substratevm\">Sub¬≠strate VM</a> will lead to the gen¬≠er¬≠a¬≠tion of the na¬≠tive image.</p><h3 id=\"limitations\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#limitations\"></a>Limitations</h3><p>Due to the na¬≠ture of the sta¬≠tic analy¬≠sis Sub¬≠strate VM also has some <a href=\"https://github.com/oracle/graal/blob/master/substratevm/LIMITATIONS.md\">lim¬≠i¬≠ta¬≠tions</a>.</p><p>Dy¬≠namic class load¬≠ing and un¬≠load¬≠ing for ex¬≠am¬≠ple is not sup¬≠ported be¬≠cause this would in essence alter the avail¬≠able code dur¬≠ing run¬≠time. </p><p>Re¬≠flec¬≠tion is only par¬≠tially sup¬≠ported and re¬≠quires some man¬≠ual steps which we will cover later on.</p><h3 id=\"patches--workarounds\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#patches--workarounds\"></a>Patches / Workarounds</h3><div class=\"alert info\"><div class=\"alert-title\">Work in progress</div><p>Next we need to apply some patches / workarounds. Keep in mind that na¬≠tive image gen¬≠er¬≠a¬≠tion is a fairly new topic and the these workarounds will hope¬≠fully no longer be re¬≠quired once the Sub¬≠strate VM and Netty have bet¬≠ter sup¬≠port for each other.</p></div><p>I did not man¬≠age to get na¬≠tive epoll, kqueue and SSL in¬≠te¬≠gra¬≠tion to work with na¬≠tive im¬≠ages.\nThese parts are heav¬≠ily op¬≠ti¬≠mized within Netty and use JNI to di¬≠rectly ac¬≠cess the OS fea¬≠tures.\nSub¬≠strate VM sup¬≠ports JNI and could in the¬≠ory in¬≠te¬≠grate these na¬≠tive li¬≠braries. </p><p>I cre¬≠ated a <a href=\"https://github.com/Jotschi/vertx-graalvm-native-image-test/tree/netty-native-epoll\">re¬≠pro¬≠ducer</a>\nand an <a href=\"https://github.com/oracle/graal/issues/442\">issue</a> so hope¬≠fully these prob¬≠lems can be ad¬≠dressed soon.</p><h3 id=\"vertx-transport\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-transport\"></a>Vert.x Transport</h3><p>First I needed to patch the <code>io.vertx.core.net.impl.transport.Transport</code> class in order to pre¬≠vent the load¬≠ing of EPoll and KQueue na¬≠tive sup¬≠port. Oth¬≠er¬≠wise Sub¬≠strate VM will try to load these classes and fail.</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Transport</span> </span>{\n‚Ä¶\n  <span class=\"hljs-comment\">/**\n   * The native transport, it may be {<span class=\"hljs-doctag\">@code</span> null} or failed.\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Transport <span class=\"hljs-title\">nativeTransport</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-comment\">// Patched: I remove the native transport discovery. </span>\n    <span class=\"hljs-comment\">// The imports would be picked up by substrate </span>\n    <span class=\"hljs-comment\">// and cause further issues. </span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;\n  }\n‚Ä¶\n}\n</code></pre><h3 id=\"netty-ssl\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#netty-ssl\"></a>Netty SSL</h3><p>Na¬≠tive SSL sup¬≠port is an¬≠other prob¬≠lem¬≠atic area. I cre¬≠ated a patched dummy <code>io.netty.handler.ssl.ReferenceCountedOpenSslEngine</code> class in order to pre¬≠vent Sub¬≠strate VM from dig¬≠ging deeper into the SSL code of Netty.</p><p>Next we need to set up the re¬≠flec¬≠tion con¬≠fig¬≠u¬≠ra¬≠tion within <code>reflectconfigs/netty.json</code>.</p><p>Netty uses re¬≠flec¬≠tion to in¬≠stan¬≠ti¬≠ate the socket chan¬≠nels. This is done in the Re¬≠flec¬≠tiveChan¬≠nelFac¬≠tory. We need to tell Sub¬≠strate VM how classes of type NioServer¬≠Sock¬≠etChan¬≠nel  and NioSock¬≠etChan¬≠nel can be in¬≠stan¬≠ti¬≠ated. </p><pre><code class=\"hljs language-json\">[\n  {\n    <span class=\"hljs-attr\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;io.netty.channel.socket.nio.NioSocketChannel&quot;</span>,\n    <span class=\"hljs-attr\">&quot;methods&quot;</span> : [\n      { <span class=\"hljs-attr\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;&lt;init&gt;&quot;</span>, <span class=\"hljs-attr\">&quot;parameterTypes&quot;</span> : [] }\n    ]\n  },\n  {\n    <span class=\"hljs-attr\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;io.netty.channel.socket.nio.NioServerSocketChannel&quot;</span>,\n    <span class=\"hljs-attr\">&quot;methods&quot;</span> : [\n      { <span class=\"hljs-attr\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;&lt;init&gt;&quot;</span>, <span class=\"hljs-attr\">&quot;parameterTypes&quot;</span> : [] }\n    ]\n  }\n]\n</code></pre><p>If you want to learn more about the state of Netty and GraalVM I can rec¬≠om¬≠mend this <a href=\"https://medium.com/graalvm/instant-netty-startup-using-graalvm-native-image-generation-ed6f14ff7692\">GraalVM Blog¬≠post</a> by Co¬≠drut Stancu.</p><h2 id=\"building\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#building\"></a>Building</h2><p>Fi¬≠nally we can build our maven project to gen¬≠er¬≠ate a shaded jar.</p><pre><code class=\"hljs language-bash\">mvn clean package\n</code></pre><p>Next we need the GraalVM pack¬≠age. You can down¬≠load it from the <a href=\"https://www.graalvm.org/\">GraalVM web¬≠site</a>.</p><p>We use the shaded jar as the input source for the <code>native-image</code> com¬≠mand which will gen¬≠er¬≠ate the ex¬≠e¬≠cutable.</p><pre><code class=\"hljs language-bash\"><span class=\"hljs-variable\">$GRAALVMDIR</span>/bin/native-image \\\n --verbose \\\n --no-server \\\n -Dio.netty.noUnsafe=<span class=\"hljs-literal\">true</span>  \\\n -H:ReflectionConfigurationFiles=./reflectconfigs/netty.json \\\n -H:+ReportUnsupportedElementsAtRuntime \\\n -Dfile.encoding=UTF-8 \\\n -jar target/vertx-graalvm-native-image-test-0.0.1-SNAPSHOT.jar\n</code></pre><h2 id=\"result\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#result\"></a>Result</h2><p>Fi¬≠nally we end up with an 27 MB <code>vertx-graalvm-native-image-test-0.0.1-SNAPSHOT</code> ex¬≠e¬≠cutable which we can run.</p><pre><code class=\"hljs language-bash\">$ ldd vertx-graalvm-native-image-test-0.0.1-SNAPSHOT \n  linux-vdso.so.1 (0x00007ffc65be8000)\n  libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8e892f0000)\n  libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f8e890d3000)\n  libz.so.1 =&gt; /lib/x86_64-linux-gnu/libz.so.1 (0x00007f8e88eb9000)\n  librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007f8e88cb1000)\n  libcrypt.so.1 =&gt; /lib/x86_64-linux-gnu/libcrypt.so.1 (0x00007f8e88a79000)\n  libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8e886da000)\n  /lib64/ld-linux-x86-64.so.2 (0x00007f8e8afb7000)\n</code></pre><h3 id=\"memory\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#memory\"></a>Memory</h3><pre><code class=\"hljs language-bash\">/usr/bin/time -f <span class=\"hljs-string\">&quot;\\nmaxRSS\\t%MkB&quot;</span> java -jar target/vertx-graalvm-native-image-test-0.0.1-SNAPSHOT.jar \n/usr/bin/time -f <span class=\"hljs-string\">&quot;\\nmaxRSS\\t%MkB&quot;</span> ./vertx-graalvm-native-image-test-0.0.1-SNAPSHOT \n</code></pre><ul><li>Na¬≠tive Image: 40 MB</li><li>Java 10: 125 MB</li></ul><p>The full project can be found on <a href=\"https://github.com/Jotschi/vertx-graalvm-native-image-test\">GitHub</a>.</p><p>If you want to read more on the topic I can also rec¬≠om¬≠mend <a href=\"https://sites.google.com/a/athaydes.com/renato-athaydes/posts/a7mbnative-imagejavaappthatrunsin30msandusesonly4mbofram\">this ar¬≠ti¬≠cle</a> by Re¬≠nato Athay¬≠des in which he demon¬≠strates how to cre¬≠ate a very small light weight low mem¬≠ory ap¬≠pli¬≠ca¬≠tion using GraalVM.</p><p>Thanks for read¬≠ing. If you have any fur¬≠ther ques¬≠tions or feed¬≠back don‚Äôt hes¬≠i¬≠tate to send me a tweet to <a href=\"https://twitter.com/Jotschi/\">@Jotschi</a>.</p>","scope":{}}},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.5.2","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.5.2, a bug fix release of Vert.x 3.5.x."},"date":"2018-06-08","slug":"eclipse-vert-x-3-5-2"},"nextPost":{"meta":{"title":"Eclipse Vert.x RabbitMQ client gets a new consumer API!","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this blog post, we present the new consumer API of the RabbitMQ client that will be released with Eclipse Vert.x 3.6.0."},"date":"2018-04-23","slug":"eclipse-vert-x-rabbitmq-client-gets-a-new-consumer-api"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let‚Äôs refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn‚Äôt test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Vert.x featuring Continuous Delivery with Jenkins and Ansible","category":"guides","authors":[{"name":"Ricardo Hernandez","github_id":"ricardohmon"}],"summary":"This blog entry describes an approach to adopt Continuous Delivery for Vert.x applications using Jenkins and Ansible by taking advantage of the Jenkins Job DSL and Ansible plugins."},"date":"2016-09-28","slug":"vert-x-featuring-continuous-delivery-with-jenkins-and-ansible"},{"meta":{"title":"Checklist for Migrating from Vert.x 2.1.x to Vert.x 3 - Part One","category":"guides","authors":[{"name":"Mark Spritzler","github_id":"bytor99999"}],"summary":"So while upgrading our application, I thought I should note down all the changes that we had to do in the process. Since Vert.x 3 is a major upgrade from the previous version, with so many changes."},"date":"2015-07-06","slug":"checklist-for-migrating-from-vert-x-2-1-x-to-vert-x-3-part-one"}]},"__N_SSG":true}