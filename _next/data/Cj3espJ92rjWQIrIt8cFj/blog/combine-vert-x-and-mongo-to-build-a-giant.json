{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Combine vert.x and mongo to build a giant","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This blog post is part of the introduction to Vert.x series. We are now going to replace this JDBC client by the vertx-mongo-client, and thus connect to a Mongo database."},"date":"2015-11-30","slug":"combine-vert-x-and-mongo-to-build-a-giant","readingTime":{"text":"9 min read","minutes":8.995,"time":539700,"words":1799},"content":{"compiledSource":"var m=Object.defineProperty,d=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var l=(a,n,s)=>n in a?m(a,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[n]=s,e=(a,n)=>{for(var s in n||(n={}))o.call(n,s)&&l(a,s,n[s]);if(p)for(var s of p(n))r.call(n,s)&&l(a,s,n[s]);return a},i=(a,n)=>d(a,h(n));var c=(a,n)=>{var s={};for(var t in a)o.call(a,t)&&n.indexOf(t)<0&&(s[t]=a[t]);if(a!=null&&p)for(var t of p(a))n.indexOf(t)<0&&r.call(a,t)&&(s[t]=a[t]);return s};const makeShortcode=a=>function(s){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},s))},Link=makeShortcode(\"Link\"),Alert=makeShortcode(\"Alert\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:a}=t,n=c(t,[\"components\"]);return mdx(MDXLayout,i(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"This blog post is part of the \",mdx(\"em\",{parentName:\"p\"},\"in\\xADtro\\xADduc\\xADtion to vert.x\"),\" se\\xADries. Last time, we have seen how we can use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"vertx-jdbc-client\"),\" to con\\xADnect to a data\\xADbase using a JDBC dri\\xADver. In this post, we are going to re\\xADplace this JDBC client by the \",mdx(\"inlineCode\",{parentName:\"p\"},\"vertx-mongo-client\"),\", and thus con\\xADnect to a Mongo data\\xADbase.\"),mdx(\"p\",null,\"You don\\u2019t un\\xADder\\xADstand the title, check the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.mongodb.org\"}),\"mon\\xADgoDB\"),\" web\\xADsite.\"),mdx(\"p\",null,\"But be\\xADfore going fur\\xADther, let\\u2019s recap.\"),mdx(\"h2\",e({},{id:\"previously-in--introduction-to-vertx\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#previously-in--introduction-to-vertx\"})),\"Previously in  \\u2018introduction to vert.x\\u2019\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"The \",mdx(Link,{href:\"/blog/my-first-vert-x-3-application/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"li\"},{href:\"\"}),\"first post\")),\" has de\\xADscribed how to build a vert.x ap\\xADpli\\xADca\\xADtion with Maven and ex\\xADe\\xADcute unit tests.\"),mdx(\"li\",{parentName:\"ol\"},\"The \",mdx(Link,{href:\"/blog/vert-x-application-configuration/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"li\"},{href:\"\"}),\"sec\\xADond post\")),\" has de\\xADscribed how this ap\\xADpli\\xADca\\xADtion can be\\xADcome con\\xADfig\\xADurable.\"),mdx(\"li\",{parentName:\"ol\"},\"The \",mdx(Link,{href:\"/blog/some-rest-with-vert-x/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"li\"},{href:\"\"}),\"third post\")),\" has in\\xADtro\\xADduced \",mdx(Link,{href:\"/docs/vertx-web/java/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"li\"},{href:\"\"}),\"vertx-\\u200Bweb\")),\", and a small col\\xADlec\\xADtion man\\xADage\\xADment ap\\xADpli\\xADca\\xADtion has been de\\xADvel\\xADoped. This ap\\xADpli\\xADca\\xADtion of\\xADfers a REST API used by a HTML/JavaScript fron\\xADtend.\"),mdx(\"li\",{parentName:\"ol\"},\"The \",mdx(Link,{href:\"/blog/unit-and-integration-tests/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"li\"},{href:\"\"}),\"fourth post\")),\" has pre\\xADsented how you can run in\\xADte\\xADgra\\xADtion tests to en\\xADsure the be\\xADhav\\xADior of your ap\\xADpli\\xADca\\xADtion.\"),mdx(\"li\",{parentName:\"ol\"},\"The \",mdx(Link,{href:\"/blog/using-the-asynchronous-sql-client/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"li\"},{href:\"\"}),\"last post\")),\" has pre\\xADsented how you can in\\xADter\\xADact with a JDBC data\\xADbase using the vertx-\\u200Bjdbc-client.\")),mdx(\"p\",null,\"This post shows an\\xADother client that lets you use Mon\\xADgoDB in a vert.x ap\\xADpli\\xADca\\xADtion. This client pro\\xADvides an vert.x API to ac\\xADcess asyn\\xADchro\\xADnously to the Mongo data\\xADbase. We won\\u2019t com\\xADpare whether or not JDBC is su\\xADpe\\xADrior to Mongo, they have both pros and cons, and you should use the one that meet your re\\xADquire\\xADments. Vert.x lets you choose, that\\u2019s the point.\"),mdx(\"p\",null,\"The vertx-\\u200Bmongo-client doc\\xADu\\xADmen\\xADta\\xADtion is avail\\xADable \",mdx(Link,{href:\"/docs/vertx-mongo-client/java/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"here\")),\".\"),mdx(\"p\",null,\"The code de\\xADvel\\xADoped in this blog post is avail\\xADable in the branch \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/cescoffier/my-vertx-first-app/tree/post-6\"}),\"post-6\"),\". Our start\\xADing point is the code from the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/cescoffier/my-vertx-first-app/tree/post-5\"}),\"post-5 branch\"),\".\"),mdx(\"h2\",e({},{id:\"asynchronous-data-access\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#asynchronous-data-access\"})),\"Asynchronous data access\"),mdx(\"p\",null,\"One of the vert.x char\\xADac\\xADter\\xADis\\xADtics is being asyn\\xADchro\\xADnous. With an asyn\\xADchro\\xADnous API, you don\\u2019t wait for a re\\xADsult, but you are no\\xADti\\xADfied when this re\\xADsult is ready. Thanks to vert.x, this no\\xADti\\xADfi\\xADca\\xADtion hap\\xADpens in the same thread (un\\xADder\\xADstand event loop) as the ini\\xADtial re\\xADquest:\"),mdx(\"p\",null,mdx(\"img\",e({parentName:\"p\"},{src:\"/images/blog/intro-series/async-data.png\",alt:\"Asynchronous data access\"}))),mdx(\"p\",null,\"Your code (on the left) is going to in\\xADvoke the mongo client and pass a call\\xADback that will be in\\xADvoked when the re\\xADsult is avail\\xADable. The in\\xADvo\\xADca\\xADtion to the mongo client is non block\\xADing and re\\xADturns im\\xADme\\xADdi\\xADately. The client is deal\\xADing with the mongo data\\xADbase and when the re\\xADsult has been com\\xADputed / re\\xADtrieved, it in\\xADvokes the call\\xADback in the same event loop as the re\\xADquest.\"),mdx(\"p\",null,\"This model is par\\xADtic\\xADu\\xADlarly pow\\xADer\\xADful as it avoids the syn\\xADchro\\xADniza\\xADtion pit\\xADfalls. In\\xADdeed, your code is only called by a sin\\xADgle thread, no need to syn\\xADchro\\xADnize any\\xADthing.\"),mdx(\"h2\",e({},{id:\"as-with-every-maven-project\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#as-with-every-maven-project\"})),\"As with every Maven project\\u2026\"),mdx(\"p\",null,\"\\u2026 we need to up\\xADdate the \",mdx(\"inlineCode\",{parentName:\"p\"},\"pom.xml\"),\" file first.\"),mdx(\"p\",null,\"In the \",mdx(\"inlineCode\",{parentName:\"p\"},\"pom.xml\"),\" file, re\\xADplace the \",mdx(\"inlineCode\",{parentName:\"p\"},\"vertx-jdbc-client\"),\" by the \",mdx(\"inlineCode\",{parentName:\"p\"},\"vertx-mongo-client\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-xml\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"dependency\"),\">\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"groupId\"),\">\"),\"io.vertx\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"groupId\"),\">\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"artifactId\"),\">\"),\"vertx-mongo-client\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"artifactId\"),\">\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"version\"),\">\"),\"3.1.0\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"version\"),\">\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"dependency\"),\">\"),`\n`)),mdx(\"p\",null,\"Un\\xADlike JDBC where we were in\\xADstan\\xADti\\xADat\\xADing a data\\xADbase on the fly, here we need to ex\\xADplic\\xADitly starts a Mon\\xADgoDB server. In order to launch a Mongo server in our test, we are going to add an\\xADother de\\xADpen\\xADdency:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-xml\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"dependency\"),\">\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"groupId\"),\">\"),\"de.flapdoodle.embed\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"groupId\"),\">\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"artifactId\"),\">\"),\"de.flapdoodle.embed.mongo\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"artifactId\"),\">\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"version\"),\">\"),\"1.50.0\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"version\"),\">\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"scope\"),\">\"),\"test\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"scope\"),\">\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"dependency\"),\">\"),`\n`)),mdx(\"p\",null,\"This de\\xADpen\\xADdency will be used in our unit tests, as it lets us start a mongo server pro\\xADgram\\xADmat\\xADi\\xADcally. For our in\\xADte\\xADgra\\xADtion tests, we are going to use a Maven plug\\xADin start\\xADing and stop\\xADping the mongo server be\\xADfore and after our in\\xADte\\xADgra\\xADtion tests. Add this plug\\xADin to the \",mdx(\"inlineCode\",{parentName:\"p\"},\"<plugins/>\"),\" sec\\xADtion of your \",mdx(\"inlineCode\",{parentName:\"p\"},\"pom.xml\"),\" file.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-xml\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"plugin\"),\">\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"groupId\"),\">\"),\"com.github.joelittlejohn.embedmongo\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"groupId\"),\">\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"artifactId\"),\">\"),\"embedmongo-maven-plugin\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"artifactId\"),\">\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"version\"),\">\"),\"0.2.0\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"version\"),\">\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"executions\"),\">\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"execution\"),\">\"),`\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"id\"),\">\"),\"start\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"id\"),\">\"),`\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"goals\"),\">\"),`\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"goal\"),\">\"),\"start\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"goal\"),\">\"),`\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"goals\"),\">\"),`\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"configuration\"),\">\"),`\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"port\"),\">\"),\"37017\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"port\"),\">\"),`\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"configuration\"),\">\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"execution\"),\">\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"execution\"),\">\"),`\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"id\"),\">\"),\"stop\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"id\"),\">\"),`\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"goals\"),\">\"),`\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"goal\"),\">\"),\"stop\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"goal\"),\">\"),`\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"goals\"),\">\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"execution\"),\">\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"executions\"),\">\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"plugin\"),\">\"),`\n`)),mdx(\"p\",null,\"No\\xADtice the port we use here (37017), we will use this port later.\"),mdx(\"h2\",e({},{id:\"enough-xml-for-today\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#enough-xml-for-today\"})),\"Enough XML for today\"),mdx(\"p\",null,\"Now that we have up\\xADdated our \",mdx(\"inlineCode\",{parentName:\"p\"},\"pom.xml\"),\" file, it\\u2019s time to change our ver\\xADti\\xADcle. The first thing to do is to re\\xADplace the jdbc client by the mongo client:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),`mongo = MongoClient.createShared(vertx, config());\n`)),mdx(\"p\",null,\"This client is con\\xADfig\\xADured with the con\\xADfig\\xADu\\xADra\\xADtion given to the ver\\xADti\\xADcle (more on this below).\"),mdx(\"p\",null,\"Once done, we need to change how we start the ap\\xADpli\\xADca\\xADtion. With the mongo client, no need to ac\\xADquire a con\\xADnec\\xADtion, it han\\xADdles this in\\xADter\\xADnally. So our startup se\\xADquence is a bit more sim\\xADple:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),`createSomeData(\n    (nothing) -> startWebApp(\n        (http) -> completeStartup(http, fut)\n    ), fut);\n`)),mdx(\"p\",null,\"As in the pre\\xADvi\\xADous post, we need to in\\xADsert some pre\\xADde\\xADfined data if the data\\xADbase is empty:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"createSomeData\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(Handler<AsyncResult<Void>> next, Future<Void> fut)\"),\" \"),`{\n  Whisky bowmore = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" Whisky(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Bowmore 15 Years Laimrig\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Scotland, Islay\"'),`);\n  Whisky talisker = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" Whisky(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Talisker 57\\xB0 North\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Scotland, Island\"'),`);\n  System.out.println(bowmore.toJson());\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Do we have data in the collection ?\"),`\n  mongo.count(COLLECTION, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` JsonObject(), count -> {\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),` (count.succeeded()) {\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),\" (count.result() == \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"0\"),`) {\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// no whiskies, insert data\"),`\n        mongo.insert(COLLECTION, bowmore.toJson(), ar -> {\n          `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),` (ar.failed()) {\n            fut.fail(ar.cause());\n          } `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"else\"),` {\n            mongo.insert(COLLECTION, talisker.toJson(), ar2 -> {\n              `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),` (ar2.failed()) {\n                fut.failed();\n              } `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"else\"),` {\n                next.handle(Future.<Void>succeededFuture());\n              }\n            });\n          }\n        });\n      } `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"else\"),` {\n        next.handle(Future.<Void>succeededFuture());\n      }\n    } `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"else\"),` {\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// report the error\"),`\n      fut.fail(count.cause());\n    }\n  });\n}\n`)),mdx(\"p\",null,\"To de\\xADtect whether or not the data\\xADbase al\\xADready con\\xADtains some data, we re\\xADtrieve the num\\xADber of \",mdx(\"em\",{parentName:\"p\"},\"doc\\xADu\\xADments\"),\" from the \",mdx(\"inlineCode\",{parentName:\"p\"},\"whiskies\"),\" col\\xADlec\\xADtion. This is done with : \",mdx(\"inlineCode\",{parentName:\"p\"},\"mongo.count(COLLECTION, new JsonObject(), count -> {})\"),\". The sec\\xADond pa\\xADra\\xADme\\xADter is the query. In our case, we want to count all doc\\xADu\\xADments. This is done using \",mdx(\"inlineCode\",{parentName:\"p\"},\"new JsonObject()\"),\" that would cre\\xADate a query ac\\xADcept\\xADing all doc\\xADu\\xADments from the col\\xADlec\\xADtion (it\\u2019s equiv\\xADa\\xADlent to a \",mdx(\"inlineCode\",{parentName:\"p\"},\"SELECT * FROM ...\"),\").\"),mdx(\"p\",null,\"Also no\\xADtice the \",mdx(\"inlineCode\",{parentName:\"p\"},\"insert\"),\" calls. Doc\\xADu\\xADments are passed as JSON ob\\xADject, so to in\\xADsert an ob\\xADject, just se\\xADri\\xADal\\xADize it to JSON and use \",mdx(\"inlineCode\",{parentName:\"p\"},\"mongo.insert(COLLECTION, json, completion handler)\"),\".\"),mdx(\"h2\",e({},{id:\"mongo-ize-the-rest-handlers\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#mongo-ize-the-rest-handlers\"})),\"Mongo-ize the REST handlers\"),mdx(\"p\",null,\"Now that the ap\\xADpli\\xADca\\xADtion boot se\\xADquence has been mi\\xADgrated to mongo, it\\u2019s time to up\\xADdate the code han\\xADdling the REST re\\xADquests.\"),mdx(\"p\",null,\"Let\\u2019s start by the \",mdx(\"inlineCode\",{parentName:\"p\"},\"getAll\"),\" method that re\\xADturns all stored prod\\xADucts. To im\\xADple\\xADment this, we use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"find\"),\" method. As we saw for the \",mdx(\"inlineCode\",{parentName:\"p\"},\"count\"),\" method, we pass an empty json ob\\xADject to de\\xADscribe a query ac\\xADcept\\xADing all doc\\xADu\\xADments:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"getAll\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(RoutingContext routingContext)\"),\" \"),`{\n  mongo.find(COLLECTION, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` JsonObject(), results -> {\n    List<JsonObject> objects = results.result();\n    List<Whisky> whiskies = objects.stream().map(Whisky::`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),`).collect(Collectors.toList());\n    routingContext.response()\n        .putHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"content-type\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"application/json; charset=utf-8\"'),`)\n        .end(Json.encodePrettily(whiskies));\n  });\n}\n`)),mdx(\"p\",null,\"The query re\\xADsults are passed as a list of JSON ob\\xADjects. From this list we can cre\\xADate our prod\\xADuct in\\xADstances, and fill the HTTP re\\xADsponse with this set.\"),mdx(\"p\",null,\"To delete a spe\\xADcific doc\\xADu\\xADment we need to se\\xADlect the doc\\xADu\\xADment using its \",mdx(\"inlineCode\",{parentName:\"p\"},\"id\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"deleteOne\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(RoutingContext routingContext)\"),\" \"),`{\n  String id = routingContext.request().getParam(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"id\"'),`);\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),\" (id == \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"null\"),`) {\n    routingContext.response().setStatusCode(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"400\"),`).end();\n  } `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"else\"),` {\n    mongo.removeOne(COLLECTION, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" JsonObject().put(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"_id\"'),`, id),\n        ar -> routingContext.response().setStatusCode(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"204\"),`).end());\n  }\n}\n`)),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},'new JsonObject().put(\"_id\", id)'),\" de\\xADscribes a query se\\xADlect\\xADing a sin\\xADgle doc\\xADu\\xADment (se\\xADlected by its unique \",mdx(\"inlineCode\",{parentName:\"p\"},\"id\"),\", so it\\u2019s the equiv\\xADa\\xADlent to \",mdx(\"inlineCode\",{parentName:\"p\"},\"SELECT * WHERE id=...\"),\"). No\\xADtice the \",mdx(\"inlineCode\",{parentName:\"p\"},\"_id\"),\" which is a mongo trick to se\\xADlect a doc\\xADu\\xADment by id.\"),mdx(\"p\",null,\"Up\\xADdat\\xADing a doc\\xADu\\xADment is a less triv\\xADial:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"updateOne\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(RoutingContext routingContext)\"),\" \"),`{\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"final\"),\" String id = routingContext.request().getParam(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"id\"'),`);\n  JsonObject json = routingContext.getBodyAsJson();\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),\" (id == \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"null\"),\" || json == \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"null\"),`) {\n    routingContext.response().setStatusCode(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"400\"),`).end();\n  } `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"else\"),` {\n    mongo.update(COLLECTION,\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" JsonObject().put(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"_id\"'),\", id), \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Select a unique document\"),`\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// The update syntax: {$set, the json object containing the fields to update}\"),`\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` JsonObject()\n            .put(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"$set\"'),`, json),\n        v -> {\n          `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),` (v.failed()) {\n            routingContext.response().setStatusCode(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"404\"),`).end();\n          } `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"else\"),` {\n            routingContext.response()\n                .putHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"content-type\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"application/json; charset=utf-8\"'),`)\n                .end(Json.encodePrettily(\n                  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" Whisky(id, json.getString(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"name\"'),`),\n                    json.getString(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"origin\"'),`))));\n          }\n        });\n  }\n}\n`)),mdx(\"p\",null,\"As we can see, the \",mdx(\"inlineCode\",{parentName:\"p\"},\"update\"),\" method takes two JSON ob\\xADjects as pa\\xADra\\xADme\\xADter:\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"The first one de\\xADnotes the query (here we se\\xADlect a sin\\xADgle doc\\xADu\\xADment using its id).\"),mdx(\"li\",{parentName:\"ol\"},\"The sec\\xADond ob\\xADject ex\\xADpresses the change to apply to the se\\xADlected doc\\xADu\\xADment. It uses a mongo syn\\xADtax. In our case, we up\\xADdate the doc\\xADu\\xADment using the \",mdx(\"inlineCode\",{parentName:\"li\"},\"$set\"),\" op\\xADer\\xADa\\xADtor.\")),mdx(Alert,{info:!0,mdxType:\"Alert\"},mdx(\"p\",null,\"In this code we up\\xADdate the doc\\xADu\\xADment and re\\xADplace only a set of fields. You can also re\\xADplace the whole doc\\xADu\\xADment using \",mdx(\"inlineCode\",{parentName:\"p\"},\"mongo.replace(...)\"),\".\")),mdx(\"p\",null,\"I def\\xADi\\xADnitely rec\\xADom\\xADmend to have a look to the Mon\\xADgoDB doc\\xADu\\xADmen\\xADta\\xADtion, es\\xADpe\\xADcially:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"https://docs.mongodb.org/manual/tutorial/query-documents/\",title:\"MongoDB Query Documentation\"}),\"Query syn\\xADtax doc\\xADu\\xADmen\\xADta\\xADtion\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"https://docs.mongodb.org/manual/tutorial/modify-documents/\",title:\"MongoDB Update Documentation\"}),\"Up\\xADdate syn\\xADtax doc\\xADu\\xADmen\\xADta\\xADtion\"))),mdx(\"h2\",e({},{id:\"time-for-configuration\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#time-for-configuration\"})),\"Time for configuration\"),mdx(\"p\",null,\"Well, the code is mi\\xADgrated, but we still need to up\\xADdate the con\\xADfig\\xADu\\xADra\\xADtion. With JDBC we passed the JDBC url and the dri\\xADver class in the con\\xADfig\\xADu\\xADra\\xADtion. With mongo, we need to con\\xADfig\\xADure the \",mdx(\"inlineCode\",{parentName:\"p\"},\"connection_string\"),\" - the \",mdx(\"inlineCode\",{parentName:\"p\"},\"mongo://\"),\" url on which the ap\\xADpli\\xADca\\xADtion is con\\xADnected, and \",mdx(\"inlineCode\",{parentName:\"p\"},\"db_name\"),\" - a name for the data source.\"),mdx(\"p\",null,\"Let\\u2019s start by the unit test. Edit the \",mdx(\"inlineCode\",{parentName:\"p\"},\"MyFirstVerticleTest\"),\" file and add the fol\\xADlow\\xADing code:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"static\"),` MongodProcess MONGO;\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"static\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"int\"),\" MONGO_PORT = \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"12345\"),`;\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-meta\"}),\"@BeforeClass\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"static\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"initialize\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"()\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"throws\"),\" IOException \"),`{\n  MongodStarter starter = MongodStarter.getDefaultInstance();\n  IMongodConfig mongodConfig = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` MongodConfigBuilder()\n      .version(Version.Main.PRODUCTION)\n      .net(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` Net(MONGO_PORT, Network.localhostIsIPv6()))\n      .build();\n  MongodExecutable mongodExecutable =\n      starter.prepare(mongodConfig);\n  MONGO = mongodExecutable.start();\n}\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-meta\"}),\"@AfterClass\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"static\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"shutdown\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"()\"),\" \"),`{  MONGO.stop(); }\n`)),mdx(\"p\",null,\"Be\\xADfore our tests, we start (pro\\xADgram\\xADmat\\xADi\\xADcally) a mongo data\\xADbase on the port 12345. When all our tests have been ex\\xADe\\xADcuted, we shut\\xADdown the data\\xADbase.\"),mdx(\"p\",null,\"So now that the mongo server is man\\xADaged, we need to to give the right con\\xADfig\\xADu\\xADra\\xADtion to our ver\\xADti\\xADcle. Up\\xADdate the \",mdx(\"inlineCode\",{parentName:\"p\"},\"DeploymentOption\"),\" in\\xADstance with:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),\"DeploymentOptions options = \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` DeploymentOptions()\n    .setConfig(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` JsonObject()\n        .put(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"http.port\"'),`, port)\n        .put(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"db_name\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"whiskies-test\"'),`)\n        .put(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"connection_string\"'),`,\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"mongodb://localhost:\"'),` + MONGO_PORT)\n);\n`)),mdx(\"p\",null,\"That\\u2019s all for the unit tests.\"),mdx(\"p\",null,\"For the integration-\\u200Btest, we are using an ex\\xADter\\xADnal\\xADized json file. Edit the \",mdx(\"inlineCode\",{parentName:\"p\"},\"src/test/resources/my-it-config.json\"),\" with the fol\\xADlow\\xADing con\\xADtent:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-json\"}),`{\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"http.port\"'),\": ${http.port},\\n  \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"db_name\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"whiskies-it\"'),`,\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"connection_string\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"mongodb://localhost:37017\"'),`\n}\n`)),mdx(\"p\",null,\"No\\xADtice the port we are using for the mongo server. This port was con\\xADfig\\xADured in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"pom.xml\"),\" file.\"),mdx(\"p\",null,\"Last but not least, we still have a con\\xADfig\\xADu\\xADra\\xADtion file to edit: the con\\xADfig\\xADu\\xADra\\xADtion you use to launch the ap\\xADpli\\xADca\\xADtion in \",mdx(\"inlineCode\",{parentName:\"p\"},\"production\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-json\"}),`{\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"http.port\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"8082\"),`,\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"db_name\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"whiskies\"'),`,\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"connection_string\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"mongodb://localhost:27017\"'),`\n}\n`)),mdx(\"p\",null,\"Here you would need to edit the \",mdx(\"inlineCode\",{parentName:\"p\"},\"localhost:27017\"),\" with the right url for your mongo server.\"),mdx(Alert,{info:!0,title:\"Some changes in the integration tests\",mdxType:\"Alert\"},mdx(\"p\",null,\"Be\\xADcause mongo doc\\xADu\\xADment id are String and not in\\xADte\\xADger, we have to slightly change doc\\xADu\\xADment se\\xADlec\\xADtion in the in\\xADte\\xADgra\\xADtion test.\")),mdx(\"h2\",e({},{id:\"time-for-a-run\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#time-for-a-run\"})),\"Time for a run\"),mdx(\"p\",null,\"It\\u2019s time to pack\\xADage and run the ap\\xADpli\\xADca\\xADtion and check that every\\xADthing works as ex\\xADpected. Let\\u2019s pack\\xADage the ap\\xADpli\\xADca\\xADtion using:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-text\"}),`mvn clean verify\n`)),mdx(\"p\",null,\"And then to launch it, start your mongo server and launch:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-text\"}),`java -jar target/my-first-app-1.0-SNAPSHOT-fat.jar \\\\\n  -conf src/main/conf/my-application-conf.json\n`)),mdx(\"p\",null,\"If you are, like me, using docker / docker-\\u200Bmachine for al\\xADmost every\\xADthing, edit the con\\xADfig\\xADu\\xADra\\xADtion file to refer to the right host (lo\\xADcal\\xADhost for docker, the docker-\\u200Bmachine ip if you use docker-\\u200Bmachine) and then launch:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),`docker run -d -p 27017:27017 mongo\njava -jar target/my-first-app-1.0-SNAPSHOT-fat.jar \\\\\n  -conf src/main/conf/my-application-conf.json\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"# or\"),`\njava -jar target/my-first-app-1.0-SNAPSHOT-fat.jar \\\\\n  -conf src/main/conf/my-application-conf-docker-machine.json\n`)),mdx(\"p\",null,mdx(\"img\",e({parentName:\"p\"},{src:\"/images/blog/intro-series/whisky-mongo.png\",alt:\"The application live and running\"}))),mdx(\"h2\",e({},{id:\"thats-all-folks\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#thats-all-folks\"})),\"That\\u2019s all folks!\"),mdx(\"p\",null,\"We are reach\\xADing the end of this post. We saw how you can use the vert-\\u200Bmongo-client to ac\\xADcess asyn\\xADchro\\xADnously data stored in\\xADside a mongo data\\xADbase as well as in\\xADsert\\xADing/up\\xADdat\\xADing this data. Now you have the choice be\\xADtween JDBC or Mongo. In ad\\xADdi\\xADtion, vert.x pro\\xADvides a client for Redis.\"),mdx(\"p\",null,\"Next time, we will see how the ver\\xADti\\xADcle class can be split in two ver\\xADti\\xADcles in order to bet\\xADter or\\xADga\\xADnize your code. The in\\xADter\\xADac\\xADtion be\\xADtween the two ver\\xADti\\xADcles will uses \",mdx(\"em\",{parentName:\"p\"},\"ser\\xADvices\"),\".\"),mdx(\"p\",null,\"Stay tuned & Happy cod\\xADing!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"prevPost":{"meta":{"title":"Vert.x 3.2.0 is released!","category":"releases","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"We are pleased to announce the release of Vert.x 3.2.0!"},"date":"2015-12-15","slug":"vert-x-3-2-0-is-released"},"nextPost":{"meta":{"title":"Vert.x ES6 back to the future","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"On October 21th, 2015 we all rejoiced with the return from the past of Marty McFly with his flying car and so on, however in the Vert.x world we were quite sad about our rather old JavaScript support."},"date":"2015-11-25","slug":"vert-x-es6-back-to-the-future"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Using the asynchronous SQL client","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Finally, back... This post is the fifth post of the introduction to vert.x blog series, after a not-that-small break. In this post we are going to see how we can use JDBC in a vert.x application."},"date":"2015-10-19","slug":"using-the-asynchronous-sql-client"},{"meta":{"title":"My first Vert.x 3 Application","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let's say, you heard someone saying that Vert.x is awesome. Ok great, but you may want to try it by yourself. Well, the next natural question is “where do I start ?”"},"date":"2015-07-14","slug":"my-first-vert-x-3-application"}]},"__N_SSG":true}