{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Vert.x Application Configuration","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"In our previous post, we developed a very simple Vert.x 3 application, and saw how this application can be tested, packaged and executed. That was nice, wasn’t it?"},"date":"2015-07-20","slug":"vert-x-application-configuration","readingTime":{"text":"5 min read","minutes":4.165,"time":249900,"words":833},"content":{"compiledSource":"var h=Object.defineProperty,d=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var i=(a,t,n)=>t in a?h(a,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[t]=n,e=(a,t)=>{for(var n in t||(t={}))r.call(t,n)&&i(a,n,t[n]);if(s)for(var n of s(t))p.call(t,n)&&i(a,n,t[n]);return a},c=(a,t)=>d(a,m(t));var l=(a,t)=>{var n={};for(var o in a)r.call(a,o)&&t.indexOf(o)<0&&(n[o]=a[o]);if(a!=null&&s)for(var o of s(a))t.indexOf(o)<0&&p.call(a,o)&&(n[o]=a[o]);return n};const makeShortcode=a=>function(n){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},n))},Link=makeShortcode(\"Link\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var o=n,{components:a}=o,t=l(o,[\"components\"]);return mdx(MDXLayout,c(e(e({},layoutProps),t),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"In \",mdx(Link,{href:\"/blog/my-first-vert-x-3-application/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"our pre\\xADvi\\xADous post\")),\", we de\\xADvel\\xADoped a very sim\\xADple Vert.x 3 ap\\xADpli\\xADca\\xADtion, and saw how this ap\\xADpli\\xADca\\xADtion can be tested, pack\\xADaged and ex\\xADe\\xADcuted. That was nice, wasn\\u2019t it? Well, ok, that was only the be\\xADgin\\xADning. In this post, we are going to en\\xADhance our ap\\xADpli\\xADca\\xADtion to sup\\xADport \",mdx(\"em\",{parentName:\"p\"},\"ex\\xADter\\xADnal\"),\" con\\xADfig\\xADu\\xADra\\xADtion.\"),mdx(\"p\",null,\"So just to re\\xADmind you, we have an ap\\xADpli\\xADca\\xADtion start\\xADing a HTTP server on the port 8080 and re\\xADply\\xADing a po\\xADlite \\u201CHello\\u201D mes\\xADsage to all HTTP re\\xADquests. The pre\\xADvi\\xADous code is avail\\xADable \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/cescoffier/my-vertx-first-app/tree/post-1\"}),\"here\"),\". The code de\\xADvel\\xADoped in this post is in the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/cescoffier/my-vertx-first-app/tree/post-2\"}),\"post-2 branch\"),\".\"),mdx(\"h2\",e({},{id:\"so-why-do-we-need-configuration\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#so-why-do-we-need-configuration\"})),\"So, why do we need configuration?\"),mdx(\"p\",null,\"That\\u2019s a good ques\\xADtion. The ap\\xADpli\\xADca\\xADtion works right now, but well, let\\u2019s say you want to de\\xADploy it on a ma\\xADchine where the port 8080 is al\\xADready taken. We would need to change the port in the ap\\xADpli\\xADca\\xADtion code and in the test, just for this ma\\xADchine. That would be sad. For\\xADtu\\xADnately, Vert.x ap\\xADpli\\xADca\\xADtions are con\\xADfig\\xADurable.\"),mdx(\"p\",null,\"Vert.x con\\xADfig\\xADu\\xADra\\xADtions are using the JSON for\\xADmat, so don\\u2019t ex\\xADpect any\\xADthing com\\xADpli\\xADcated. They can be passed to ver\\xADti\\xADcle ei\\xADther from the com\\xADmand line, or using an API. Let\\u2019s have a look.\"),mdx(\"h2\",e({},{id:\"no-8080-anymore\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#no-8080-anymore\"})),\"No \\u20188080\\u2019 anymore\"),mdx(\"p\",null,\"The first step is to mod\\xADify the \",mdx(\"inlineCode\",{parentName:\"p\"},\"io.vertx.blog.first.MyFirstVerticle\"),\" class to not bind to the port 8080, but to read it from the con\\xADfig\\xADu\\xADra\\xADtion:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"start\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(Future<Void> fut)\"),\" \"),`{\n  vertx\n      .createHttpServer()\n      .requestHandler(r -> {\n        r.response().end(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<h1>Hello from my first \"'),` +\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Vert.x 3 application</h1>\"'),`);\n      })\n      .listen(\n          `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Retrieve the port from the configuration,\"),`\n          `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// default to 8080.\"),`\n          config().getInteger(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"http.port\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"8080\"),`),\n          result -> {\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),` (result.succeeded()) {\n              fut.complete();\n            } `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"else\"),` {\n              fut.fail(result.cause());\n            }\n          }\n      );\n}\n`)),mdx(\"p\",null,\"So, the only dif\\xADfer\\xADence with the pre\\xADvi\\xADous ver\\xADsion is \",mdx(\"inlineCode\",{parentName:\"p\"},'config().getInteger(\"http.port\", 8080)'),\". Here, our code is now re\\xADquest\\xADing the con\\xADfig\\xADu\\xADra\\xADtion and check whether the \",mdx(\"em\",{parentName:\"p\"},\"http.port\"),\" prop\\xADerty is set. If not, the port 8080 is used as fall-\\u200Bback. The re\\xADtrieved con\\xADfig\\xADu\\xADra\\xADtion is a \",mdx(\"inlineCode\",{parentName:\"p\"},\"JsonObject\"),\".\"),mdx(\"p\",null,\"As we are using the port 8080 by de\\xADfault, you can still pack\\xADage our ap\\xADpli\\xADca\\xADtion and run it as be\\xADfore:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),`mvn clean package\njava -jar target/my-first-app-1.0-SNAPSHOT-fat.jar\n`)),mdx(\"p\",null,\"Sim\\xADple right ?\"),mdx(\"h2\",e({},{id:\"api-based-configuration---random-port-for-the-tests\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#api-based-configuration---random-port-for-the-tests\"})),\"API-based configuration - Random port for the tests\"),mdx(\"p\",null,\"Now that the ap\\xADpli\\xADca\\xADtion is con\\xADfig\\xADurable, let\\u2019s try to pro\\xADvide a con\\xADfig\\xADu\\xADra\\xADtion. In our test, we are going to con\\xADfig\\xADure our ap\\xADpli\\xADca\\xADtion to use the port 8081. So, pre\\xADvi\\xADously we were de\\xADploy\\xADing our ver\\xADti\\xADcle with:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),`vertx.deployVerticle(MyFirstVerticle.class.getName(), context.asyncAssertSuccess());\n`)),mdx(\"p\",null,\"Let\\u2019s now pass some \",mdx(\"em\",{parentName:\"p\"},\"de\\xADploy\\xADment op\\xADtions\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),\"port = \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"8081\"),`;\nDeploymentOptions options = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` DeploymentOptions()\n    .setConfig(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" JsonObject().put(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"http.port\"'),`, port));\nvertx.deployVerticle(MyFirstVerticle.class.getName(), options, context.asyncAssertSuccess());\n`)),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"DeploymentOptions\"),\" ob\\xADject lets us cus\\xADtomize var\\xADi\\xADous pa\\xADra\\xADme\\xADters. In par\\xADtic\\xADu\\xADlar, it lets us in\\xADject the \",mdx(\"inlineCode\",{parentName:\"p\"},\"JsonObject\"),\" re\\xADtrieved by the ver\\xADti\\xADcle when using the \",mdx(\"inlineCode\",{parentName:\"p\"},\"config()\"),\" method.\"),mdx(\"p\",null,\"Ob\\xADvi\\xADously, the test con\\xADnect\\xADing to the server needs to be slightly mod\\xADi\\xADfied to use the right port (\",mdx(\"inlineCode\",{parentName:\"p\"},\"port\"),\" is a field):\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),\"vertx.createHttpClient().getNow(port, \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"localhost\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/\"'),`, response -> {\n  response.handler(body -> {\n    context.assertTrue(body.toString().contains(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Hello\"'),`));\n    async.complete();\n  });\n});\n`)),mdx(\"p\",null,\"Ok, well, this does not re\\xADally fix our issue. What hap\\xADpens when the port 8081 is used too. Let\\u2019s now pick a ran\\xADdom port:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),\"ServerSocket socket = \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" ServerSocket(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"0\"),`);\nport = socket.getLocalPort();\nsocket.close();\n\nDeploymentOptions options = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` DeploymentOptions()\n    .setConfig(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" JsonObject().put(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"http.port\"'),`, port));\n\nvertx.deployVerticle(MyFirstVerticle.class.getName(), options, context.asyncAssertSuccess());\n`)),mdx(\"p\",null,\"So, the idea is very sim\\xADple. We open a \",mdx(\"em\",{parentName:\"p\"},\"server socket\"),\" that would pick a ran\\xADdom port (that\\u2019s why we put 0 as pa\\xADra\\xADme\\xADter). We re\\xADtrieve the used port and close the socket. Be aware that this method is \",mdx(\"strong\",{parentName:\"p\"},\"not\"),\" per\\xADfect and may fail if the picked port be\\xADcomes used be\\xADtween the \",mdx(\"inlineCode\",{parentName:\"p\"},\"close\"),\" method and the start of our HTTP server. How\\xADever, it would work fine in the very high ma\\xADjor\\xADity of the case.\"),mdx(\"p\",null,\"With this in place, our test is now using a ran\\xADdom port. Ex\\xADe\\xADcute them with:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),\"mvn clean \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-built_in\"}),\"test\"),`\n`)),mdx(\"h2\",e({},{id:\"external-configuration---lets-run-on-another-port\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#external-configuration---lets-run-on-another-port\"})),\"External configuration - Let\\u2019s run on another port\"),mdx(\"p\",null,\"Ok, well ran\\xADdom port is not what we want in \",mdx(\"em\",{parentName:\"p\"},\"pro\\xADduc\\xADtion\"),\". Could you imag\\xADine the face of your pro\\xADduc\\xADtion team if you tell them that your ap\\xADpli\\xADca\\xADtion is pick\\xADing a ran\\xADdom port. It can ac\\xADtu\\xADally be funny, but we should never mess with the pro\\xADduc\\xADtion team.\"),mdx(\"p\",null,\"So for the ac\\xADtual ex\\xADe\\xADcu\\xADtion of your ap\\xADpli\\xADca\\xADtion, let\\u2019s pass the con\\xADfig\\xADu\\xADra\\xADtion in an ex\\xADter\\xADnal file. The con\\xADfig\\xADu\\xADra\\xADtion is stored in a \",mdx(\"em\",{parentName:\"p\"},\"json\"),\" file.\"),mdx(\"p\",null,\"Cre\\xADate the \",mdx(\"inlineCode\",{parentName:\"p\"},\"src/main/conf/my-application-conf.json\"),\" with the fol\\xADlow\\xADing con\\xADtent:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-javascript\"}),`{\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"http.port\"'),\" : \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"8082\"),`\n}\n`)),mdx(\"p\",null,\"And now, to use this con\\xADfig\\xADu\\xADra\\xADtion just launch your ap\\xADpli\\xADca\\xADtion with:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),`java -jar target/my-first-app-1.0-SNAPSHOT-fat.jar -conf src/main/conf/my-application-conf.json\n`)),mdx(\"p\",null,\"Open a browser on http://lo\\xADcal\\xADhost:8082, here it is !\"),mdx(\"p\",null,\"How does that work ? Re\\xADmem\\xADber, our \",mdx(\"em\",{parentName:\"p\"},\"fat jar\"),\" is using the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Starter\"),\" class (pro\\xADvided by Vert.x) to launch our ap\\xADpli\\xADca\\xADtion. This class is read\\xADing the \",mdx(\"inlineCode\",{parentName:\"p\"},\"-conf\"),\" pa\\xADra\\xADme\\xADter and cre\\xADate the cor\\xADre\\xADspond\\xADing de\\xADploy\\xADment op\\xADtions when de\\xADploy\\xADing our ver\\xADti\\xADcle.\"),mdx(\"h2\",e({},{id:\"conclusion\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#conclusion\"})),\"Conclusion\"),mdx(\"p\",null,\"After hav\\xADing de\\xADvel\\xADoped your first Vert.x ap\\xADpli\\xADca\\xADtion, we have seen how this ap\\xADpli\\xADca\\xADtion is con\\xADfig\\xADurable, and this with\\xADout adding any com\\xADplex\\xADity to our ap\\xADpli\\xADca\\xADtion. \",mdx(Link,{href:\"/blog/some-rest-with-vert-x/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"In the next post\")),\", we are going to see how we can use vertx-\\u200Bweb to de\\xADvelop a small ap\\xADpli\\xADca\\xADtion serv\\xADing sta\\xADtic pages and a REST API. A bit more fancy, but still very sim\\xADple.\"),mdx(\"p\",null,\"Happy Cod\\xADing and \",\"&\",\" Stay Tuned!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"prevPost":{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"},"nextPost":{"meta":{"title":"My first Vert.x 3 Application","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let's say, you heard someone saying that Vert.x is awesome. Ok great, but you may want to try it by yourself. Well, the next natural question is “where do I start ?”"},"date":"2015-07-14","slug":"my-first-vert-x-3-application"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Combine vert.x and mongo to build a giant","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This blog post is part of the introduction to Vert.x series. We are now going to replace this JDBC client by the vertx-mongo-client, and thus connect to a Mongo database."},"date":"2015-11-30","slug":"combine-vert-x-and-mongo-to-build-a-giant"}]},"__N_SSG":true}