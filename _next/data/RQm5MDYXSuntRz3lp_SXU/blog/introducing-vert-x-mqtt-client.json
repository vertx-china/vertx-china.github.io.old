{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Introducing Vert.x MQTT client","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this article, we will see how to set up the new Vert.x MQTT client. An example project is available on GitHub."},"date":"2017-08-21","slug":"introducing-vert-x-mqtt-client","readingTime":{"text":"2 min read","minutes":1.72,"time":103200,"words":344},"content":{"compiledSource":"var i=Object.defineProperty,h=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var l=(a,s,t)=>s in a?i(a,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[s]=t,e=(a,s)=>{for(var t in s||(s={}))r.call(s,t)&&l(a,t,s[t]);if(p)for(var t of p(s))o.call(s,t)&&l(a,t,s[t]);return a},c=(a,s)=>h(a,d(s));var m=(a,s)=>{var t={};for(var n in a)r.call(a,n)&&s.indexOf(n)<0&&(t[n]=a[n]);if(a!=null&&p)for(var n of p(a))s.indexOf(n)<0&&o.call(a,n)&&(t[n]=a[n]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var n=t,{components:a}=n,s=m(n,[\"components\"]);return mdx(MDXLayout,c(e(e({},layoutProps),s),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"In this ar\\xADti\\xADcle, we will see how to set up the new Vert.x MQTT client. Ac\\xADtu\\xADally, I have a \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/Sammers21/vertx-mqtt-client-example\"}),\"real ex\\xADam\\xADple\"),\" so you can try it quickly.\"),mdx(\"p\",null,\"If you are using Maven or Gra\\xADdle, add the fol\\xADlow\\xADing de\\xADpen\\xADdency to the de\\xADpen\\xADden\\xADcies sec\\xADtion of your project de\\xADscrip\\xADtor to ac\\xADcess the Vert.x MQTT client:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Maven (in your pom.xml):\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-xml\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"dependency\"),\">\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"groupId\"),\">\"),\"io.vertx\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"groupId\"),\">\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"artifactId\"),\">\"),\"vertx-mqtt\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"artifactId\"),\">\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"<\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"version\"),\">\"),\"3.5.0.Beta1\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"version\"),\">\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-tag\"}),\"</\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-name\"}),\"dependency\"),\">\"),`\n`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Gra\\xADdle (in your build.gra\\xADdle file):\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-groovy\"}),`dependencies {\n  compile `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),\"'io.vertx:vertx-mqtt:3.5.0.Beta1'\"),`\n}\n`)),mdx(\"p\",null,\"Now that you\\u2019ve set up your project, you can cre\\xADate a sim\\xADple ap\\xADpli\\xADca\\xADtion which will re\\xADceive all mes\\xADsages from all bro\\xADker chan\\xADnels:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),` io.vertx.core.AbstractVerticle;\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),` io.vertx.mqtt.MqttClient;\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),` io.vertx.mqtt.MqttClientOptions;\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),` java.io.UnsupportedEncodingException;\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-class\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"class\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"MainVerticle\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"extends\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"AbstractVerticle\"),\" \"),`{\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-meta\"}),\"@Override\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"start\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"()\"),\" \"),`{\n     MqttClientOptions options = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` MqttClientOptions();\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// specify broker host\"),`\n      options.setHost(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"iot.eclipse.org\"'),`);\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// specify max size of message in bytes\"),`\n      options.setMaxMessageSize(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"100_000_000\"),`);\n\n    MqttClient client = MqttClient.create(vertx, options);\n\n    client.publishHandler(s -> {\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"try\"),` {\n        String message = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" String(s.payload().getBytes(), \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"UTF-8\"'),`);\n        System.out.println(String.format(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Receive message with content: \\\\\"%s\\\\\" from topic \\\\\"%s\\\\\"\"'),`, message, s.topicName()));\n      } `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"catch\"),` (UnsupportedEncodingException e) {\n        e.printStackTrace();\n      }\n    });\n\n    client.connect(s -> {\n      `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// subscribe to all subtopics\"),`\n      client.subscribe(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"#\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"0\"),`);\n    });\n  }\n}\n`)),mdx(\"p\",null,\"The \",mdx(\"strong\",{parentName:\"p\"},\"pub\\xADlish\\xADHan\\xADdler\"),\" is the han\\xADdler called each time the bro\\xADker, lo\\xADcated at \",mdx(\"inlineCode\",{parentName:\"p\"},\"iot.eclipse.org:1883\"),\", sends a mes\\xADsage to you, from the top\\xADics you are sub\\xADscrib\\xADing for.\"),mdx(\"p\",null,\"But only pro\\xADvid\\xADing a han\\xADdler is not enough, you should also con\\xADnect to the bro\\xADker and sub\\xADscribe to some top\\xADics. For this rea\\xADson, you should use the \",mdx(\"strong\",{parentName:\"p\"},\"con\\xADnect\"),\" method and then call \",mdx(\"strong\",{parentName:\"p\"},\"sub\\xADscribe\"),\" when the con\\xADnec\\xADtion es\\xADtab\\xADlished. \"),mdx(\"p\",null,\"To de\\xADploy this ver\\xADti\\xADcle from an ap\\xADpli\\xADca\\xADtion you should have in your \",mdx(\"strong\",{parentName:\"p\"},\"main\"),\" method some\\xADthing like that:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),`Vertx vertx = Vertx.vertx();\nvertx.deployVerticle(MainVerticle.class.getCanonicalName());\n`)),mdx(\"p\",null,\"When you have com\\xADpleted all steps cor\\xADrectly the re\\xADsult should look like that:\"),mdx(\"p\",null,mdx(\"img\",e({parentName:\"p\"},{src:\"http://i.imgur.com/b4yYQJE.gif\",alt:null}))),mdx(\"p\",null,\"As the al\\xADter\\xADna\\xADtive and rec\\xADom\\xADmended way to boot\\xADstrap Vert.x ap\\xADpli\\xADca\\xADtions you can use \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/vert-x3/vertx-maven-starter\"}),\"vertx-\\u200Bmaven-starter\"),\" or \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/vert-x3/vertx-gradle-starter\"}),\"vertx-\\u200Bgradle-starter\"),\". For com\\xADplet\\xADing this guide I have used the first one. The final source code avail\\xADable \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/Sammers21/vertx-mqtt-client-example\"}),\"here\"),\". If you would like to learn more about Vert.x MQTT client API then check out the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/vert-x3/vertx-mqtt-client/blob/initial-work/src/main/asciidoc/java/index.adoc\"}),\"full doc\\xADu\\xADmen\\xADta\\xADtion\"),\" and \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/mqtt-examples\"}),\"more ex\\xADam\\xADples\"),\". \"),mdx(\"p\",null,\"Thank you for read\\xADing!\"),mdx(\"p\",null,\"Cheers!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"prevPost":{"meta":{"title":"An Eclipse Vert.x Gradle Plugin","category":"news","authors":[{"name":"Julien Ponge","github_id":"jponge"}],"summary":"The new Vert.x Gradle plugin offers an opinionated plugin for building Vert.x applications with Gradle."},"date":"2017-09-28","slug":"an-eclipse-vert-x-gradle-plugin"},"nextPost":{"meta":{"title":"Vert.x 3.5.0.Beta1","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"It's summer time and we have just released Vert.x 3.5.0.Beta1!"},"date":"2017-08-10","slug":"vert-x-3-5-0-beta1"},"relatedPosts":[{"meta":{"title":"TCP Client using Eclipse Vert.x, Kotlin and Gradle build","category":"guides","authors":[{"name":"Usman Saleem","github_id":"usmansaleem"}],"summary":"In this blog post, I demonstrate how to write a very simple TCP client that keeps a connection open to a custom-written server in cloud."},"date":"2017-12-20","slug":"tcp-client-using-eclipse-vert-x-kotlin-and-gradle-build"},{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"},{"meta":{"title":"Checklist for Migrating from Vert.x 2.1.x to Vert.x 3 - Part One","category":"guides","authors":[{"name":"Mark Spritzler","github_id":"bytor99999"}],"summary":"So while upgrading our application, I thought I should note down all the changes that we had to do in the process. Since Vert.x 3 is a major upgrade from the previous version, with so many changes."},"date":"2015-07-06","slug":"checklist-for-migrating-from-vert-x-2-1-x-to-vert-x-3-part-one"}]},"__N_SSG":true}