{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Eclipse Vert.x 3.5.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The Vert.x team is pleased to announce the release of Eclipse Vert.x 3.5.0."},"date":"2017-10-20","slug":"eclipse-vert-x-3-5-0-released","readingTime":{"text":"6 min read","minutes":5.15,"time":309000,"words":1030},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Vert.x team is pleased to an\\xADnounce the re\\xADlease of Eclipse Vert.x 3.5.0.\"), mdx(\"p\", null, \"As usual it de\\xADliv\\xADers an im\\xADpres\\xADsive num\\xADber of high qual\\xADity fea\\xADtures.\"), mdx(\"h2\", {\n    \"id\": \"lets-go-rxjava2\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#lets-go-rxjava2\"\n  })), \"Let\\u2019s go RxJava2\"), mdx(\"p\", null, \"First and fore\\xADmost this re\\xADlease de\\xADliv\\xADers the Rx\\xADJava2 API with sup\\xADport of its full range of types.\"), mdx(\"p\", null, \"In ad\\xADdi\\xADtion of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Single\"), \", Rx\\xADi\\xADfied APIs also ex\\xADpose the\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Completable\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Maybe\"), \" types:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// expose Handler<AsyncResult<Void>>\"), \"\\nCompletable completable = server.rxClose();\\n\\ncompletable.subscribe(() -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"closed\\\"\"), \"));\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// expose Handler<AsyncResult<String>> where the result can be null\"), \"\\nMaybe<String> ipAddress = dnsClient.rxLookup(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"www.google.com\\\"\"), \");\\nipAddress.subscribe(\\n  value -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"resolved to \\\"\"), \" + value),\\n  err -> err.printStackTrace(),\\n  () -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"does not resolve\\\"\"), \"));\\n\")), mdx(\"p\", null, \"Rx\\xADJava aug\\xADments Vert.x streams with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"toObservable()\"), \" method, like\\xADwise Rx\\xADJava2 adds the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"toFlowable()\"), \" method:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Flowable<Buffer> maps to a ReadStream<Buffer>\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// back-pressured stream\"), \"\\nFlowable<Buffer> flowable = asyncFile.toFlowable();\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// but we still can get an Observable<Buffer>\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// non back-pressured stream\"), \"\\nObservable<Buffer> flowable = asyncFile.toObservable();\\n\")), mdx(\"p\", null, \"What\\u2019s so dif\\xADfer\\xADent be\\xADtween \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Flowable\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Observable\"), \"? the for\\xADmer han\\xADdles back-\\u200Bpressure, i.e the\\nsub\\xADscriber can con\\xADtrol the flow of items and the later can not!!!\"), mdx(\"p\", null, \"You can read the doc\\xADu\\xADmen\\xADta\\xADtion in the sec\\xADtion of the \", mdx(Link, {\n    href: \"/docs/vertx-rx/java2/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"docs\")), \"\\nor go straight to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/master/rxjava2-examples\"\n  }), \"ex\\xADam\\xADples\")), mdx(\"h2\", {\n    \"id\": \"kotlin-coroutines\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#kotlin-coroutines\"\n  })), \"Kotlin coroutines\"), mdx(\"p\", null, \"Sup\\xADport for \", mdx(Link, {\n    href: \"/docs/vertx-lang-kotlin-coroutines/kotlin/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Kotlin Corou\\xADtines\")), \" is one of my favourite 3.5 fea\\xADtures (by the way I\\u2019ll present a talk about Vert.x\\nand corou\\xADtines at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.kotlinconf.com/sessions/\"\n  }), \"Kotlin\\xADConf\"), \").\"), mdx(\"p\", null, \"Corou\\xADtines al\\xADlows you to rea\\xADson about asyn\\xADchro\\xADnous flow the same way you do with tra\\xADdi\\xADtional se\\xADquen\\xADtial flow with\\nthe extra bonus to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"catch\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"finally\"), \" super combo:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" movie = ctx.pathParam(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"id\\\"\"), \")\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" rating = Integer.parseInt(ctx.queryParam(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"getRating\\\"\"), \")[\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"0\"), \"])\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" connection = awaitResult<SQLConnection> { client.getConnection(it) }\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"try\"), \" {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" result = awaitResult<ResultSet> { connection.queryWithParams(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT TITLE FROM MOVIE WHERE ID=?\\\"\"), \", json { array(movie) }, it) }\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (result.rows.size == \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"1\"), \") {\\n    awaitResult<UpdateResult> { connection.updateWithParams(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"INSERT INTO RATING (VALUE, MOVIE_ID) VALUES ?, ?\\\"\"), \", json { array(rating, movie) }, it) }\\n    ctx.response().setStatusCode(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"200\"), \").end()\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    ctx.response().setStatusCode(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"404\"), \").end()\\n  }\\n} \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"finally\"), \" {\\n  connection.close()\\n}\\n\")), mdx(\"p\", null, \"This ex\\xADam\\xADple is bor\\xADrowed from our \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/master/kotlin-examples/coroutines\"\n  }), \"ex\\xADam\\xADples\"), \".\"), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"I\\u2019ve used \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"finally\"), \" pur\\xADposely in\\xADstead of Kotlin\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"use\"), \" ex\\xADten\\xADsion method\")), mdx(\"h2\", {\n    \"id\": \"mqtt-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#mqtt-client\"\n  })), \"MQTT Client\"), mdx(\"p\", null, \"In Vert.x 3.4 we added the \", mdx(Link, {\n    href: \"/docs/vertx-mqtt/java/#_vert_x_mqtt_server\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"MQTT server\")), \", 3.5 com\\xADpletes the\\nMQTT story with the \", mdx(Link, {\n    href: \"/docs/vertx-mqtt/java/#_vert_x_mqtt_client\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"MQTT client\")), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"MqttClient mqttClient = MqttClient.create(vertx,\\n   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" MqttClientOptions()\\n     .setPort(BROKER_PORT)\\n     .setHost(BROKER_HOST)).connect(ar ->\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Connected to a server\\\"\"), \");\\n\\n    mqttClient.publish(\\n      MQTT_TOPIC,\\n      Buffer.buffer(MQTT_MESSAGE),\\n      MqttQoS.AT_MOST_ONCE,\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"false\"), \",\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"false\"), \",\\n      s -> mqttClient.disconnect(d -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Disconnected from server\\\"\"), \")));\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Failed to connect to a server\\\"\"), \");\\n    ar.cause().printStackTrace();\\n  }\\n});\\n\")), mdx(\"p\", null, \"You can find MQTT client and server ex\\xADam\\xADples \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/master/mqtt-examples\"\n  }), \"here\")), mdx(\"h2\", {\n    \"id\": \"web-api-contracts\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#web-api-contracts\"\n  })), \"Web API contracts\"), mdx(\"p\", null, \"With the new \", mdx(Link, {\n    href: \"/docs/vertx-web-api-contract/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Ope\\xADnAPI\")), \" router fac\\xADtory we can focus on the API im\\xADple\\xADmen\\xADta\\xADtion and not on the val\\xADi\\xADda\\xADtion\\nof the input. The usage is quite sim\\xADple:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"OpenAPI3RouterFactory.createRouterFactoryFromFile(vertx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"petstore.yaml\\\"\"), \", ar -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Spec loaded with success\"), \"\\n    OpenAPI3RouterFactory routerFactory = ar.result();\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// add your API and security handlers to the factory\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// add it to a server\"), \"\\n    vertx.createHttpServer()\\n      .requestHandler(routerFactory.getRouter()::accept)\\n      .listen();\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Something went wrong during router factory initialization\"), \"\\n  }\\n});\\n\")), mdx(\"p\", null, \"Now as a de\\xADvel\\xADoper you only need to care about the API and not on the val\\xADi\\xADda\\xADtion. The Ope\\xADnAPI router will en\\xADsure that a\\nre\\xADquest to an API will first to the con\\xADtract be\\xADfore your han\\xADdler is in\\xADvoked.\"), mdx(\"h2\", {\n    \"id\": \"java-9-support\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#java-9-support\"\n  })), \"Java 9 support\"), mdx(\"p\", null, \"Java 9 was re\\xADleased a few days ago and the Vert.x stack has been care\\xADfully tested on Java 9 and most of our com\\xADpo\\xADnents\\nrun on Java 9 (Groovy does not run well on Java 9, please see the sup\\xADport \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/Java-9-Support\"\n  }), \"ma\\xADtrix\"), \")\"), mdx(\"p\", null, \"As a bonus you can now use HTTP/2 out of the box with JDK SSL!\"), mdx(\"p\", null, \"You can also use Vert.x jars as anony\\xADmous mod\\xADules.\"), mdx(\"h2\", {\n    \"id\": \"event-driven-json-parsing\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#event-driven-json-parsing\"\n  })), \"Event driven JSON Parsing\"), mdx(\"p\", null, \"We pro\\xADvide now an event dri\\xADven \", mdx(Link, {\n    href: \"/docs/apidocs/io/vertx/core/parsetools/JsonParser.html\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"JSON Parser\")), \" emit\\xADting parse events that is very handy when you need to han\\xADdle very large\\nJSON struc\\xADtures and you don\\u2019t want to buffer it which in\\xADtro\\xADduce extra la\\xADtency and in\\xADcrease the mem\\xADory con\\xADsump\\xADtion.\"), mdx(\"p\", null, \"The parser al\\xADlows you to switch be\\xADtween fine grained JSON parse events or full struc\\xADtures, for in\\xADstance\\nyou can parse an array of ob\\xADject very ef\\xADfi\\xADciently:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"JsonParser parser = JsonParser.newParser();\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// The parser will handle JSON objects as values\"), \"\\nparser.objectValueMode();\\n\\nparser.handler(event -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"switch\"), \" (event.type()) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"case\"), \" START_ARRAY:\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Start the array\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"break\"), \";\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"case\"), \" END_ARRAY:\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// End the array\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"break\"), \";\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"case\"), \" VALUE:\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle each object\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"break\"), \";\\n  }\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"single-sql-operations\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#single-sql-operations\"\n  })), \"Single SQL operations\"), mdx(\"p\", null, \"Sin\\xADgle SQL op\\xADer\\xADa\\xADtions (aka \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"one-\\u200Bshot\"), \") have been dras\\xADti\\xADcally sim\\xADpli\\xADfied: most of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SQLOperations\"), \" op\\xADer\\xADa\\xADtions can now be\\nper\\xADformed di\\xADrectly on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SQLClient\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"client.queryWithParams(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT AVG(VALUE) AS VALUE FROM RATING WHERE MOVIE_ID=?\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonArray().add(id), ar2 -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" value = ar.result().get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"0\"), \").getInteger(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"VALUE\\\"\"), \");\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Continue\"), \"\\n  }\\n});\\n\")), mdx(\"p\", null, \"Under the hood, the client takes care of the pool ac\\xADquire/re\\xADlease in\\xADter\\xADac\\xADtion for you.\"), mdx(\"h2\", {\n    \"id\": \"native-transport-and-domain-sockets\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#native-transport-and-domain-sockets\"\n  })), \"Native transport and domain sockets\"), mdx(\"p\", null, \"We now sup\\xADport \", mdx(Link, {\n    href: \"/docs/vertx-core/java/#_native_transports\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"na\\xADtive trans\\xADports\")), \" on Linux (Epoll) and MacOS (KQueue), as well as \", mdx(Link, {\n    href: \"/docs/vertx-core/java/#_domain_sockets\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"UNIX do\\xADmain sock\\xADets\")), \" for\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NetServer/NetClient\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HttpServer\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HttpClient\"), \" should sup\\xADport UNIX do\\xADmain sock\\xADets soon).\"), mdx(\"h2\", {\n    \"id\": \"auth-handler-chaining\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#auth-handler-chaining\"\n  })), \"Auth handler chaining\"), mdx(\"p\", null, \"There are times when you want to sup\\xADport mul\\xADti\\xADple authN/authZ mech\\xADa\\xADnisms in a sin\\xADgle ap\\xADpli\\xADca\\xADtion.\"), mdx(\"p\", null, \"Vert.x Web sup\\xADports auth han\\xADdlers \", mdx(Link, {\n    href: \"/docs/vertx-web/java/#_chaining_multiple_auth_handlers\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"chain\\xADing\"))), mdx(\"h2\", {\n    \"id\": \"vertx-config-improvements\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-config-improvements\"\n  })), \"Vert.x config improvements\"), mdx(\"p\", null, \"Vert.x Con\\xADfig al\\xADlows con\\xADfig\\xADur\\xADing your ap\\xADpli\\xADca\\xADtion by as\\xADsem\\xADbling con\\xADfig chunks from dif\\xADfer\\xADent lo\\xADca\\xADtions such as file,\\nhttp, zookeeper\\u2026\"), mdx(\"p\", null, \"In this ver\\xADsion, we have added the sup\\xADport for Con\\xADsul and Vault.\"), mdx(\"p\", null, \"With the \", mdx(Link, {\n    href: \"/docs/vertx-config/java/#_consul_configuration_store\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Con\\xADsul con\\xADfig store\")), \", you can re\\xADtrieve your con\\xADfig\\xADu\\xADra\\xADtion from a Con\\xADsul server - so in other words, dis\\xADtrib\\xADute\\nthe con\\xADfig\\xADu\\xADra\\xADtion from your or\\xADches\\xADtra\\xADtion in\\xADfra\\xADstruc\\xADture.\"), mdx(\"p\", null, \"The \", mdx(Link, {\n    href: \"/docs/vertx-config/java/#_vault_config_store\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vault con\\xADfig store\")), \" lets you re\\xADtrieve se\\xADcrets avoid\\xADing hard cod\\xADing se\\xADcrets or dis\\xADtrib\\xADut\\xADing cre\\xADden\\xADtials using an\\nin\\xADse\\xADcure way. Vault en\\xADforces the se\\xADcu\\xADrity of your se\\xADcrets and only al\\xADlowed ap\\xADpli\\xADca\\xADtions can re\\xADtrieve them. In other\\nwords, now you can keep your se\\xADcrets se\\xADcret.\"), mdx(\"h2\", {\n    \"id\": \"acks\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#acks\"\n  })), \"ACKs\"), mdx(\"p\", null, \"I want on be\\xADhalf of the team to thank all the con\\xADtrib\\xADu\\xADtors for this re\\xADlease in\\xADclud\\xADing the Google Sum\\xADmer of Code stu\\xADdents\\n(\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/titantins\"\n  }), \"Pavel Drankov\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/slinkyguardiani\"\n  }), \"Francesco Guardiani\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://yunyul.in\"\n  }), \"Yunyu Lin\"), \")\\nthat de\\xADliv\\xADered an im\\xADpres\\xADsive work.\"), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The re\\xADlease notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.5.0-Release-Notes\"\n  }), \"https://github.com/vert-\\u200Bx3/wiki/wiki/3.5.0-\\u200BRelease-Notes\"))), mdx(\"p\", null, \"Docker im\\xADages are also avail\\xADable on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \". The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion is also avail\\xADable\\nfrom \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"The event bus client using the SockJS bridge are avail\\xADable from NPM, Bower and as a We\\xADb\\xADJar:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"https://www.npmjs.com/pack\\xADage/vertx3-\\u200Beventbus-client\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"https://github.com/vert-\\u200Bx3/vertx-\\u200Bbus-bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"http://www.we\\xADb\\xADjars.org/\"))), mdx(\"p\", null, \"The ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.5.0%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.5.0/view\"\n  }), \"Bin\\xADtray\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>The Vert.x team is pleased to an­nounce the re­lease of Eclipse Vert.x 3.5.0.</p><p>As usual it de­liv­ers an im­pres­sive num­ber of high qual­ity fea­tures.</p><h2 id=\"lets-go-rxjava2\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#lets-go-rxjava2\"></a>Let’s go RxJava2</h2><p>First and fore­most this re­lease de­liv­ers the Rx­Java2 API with sup­port of its full range of types.</p><p>In ad­di­tion of <code>Single</code>, Rx­i­fied APIs also ex­pose the<code>Completable</code> and <code>Maybe</code> types:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// expose Handler&lt;AsyncResult&lt;Void&gt;&gt;</span>\nCompletable completable = server.rxClose();\n\ncompletable.subscribe(() -&gt; System.out.println(<span class=\"hljs-string\">&quot;closed&quot;</span>));\n\n<span class=\"hljs-comment\">// expose Handler&lt;AsyncResult&lt;String&gt;&gt; where the result can be null</span>\nMaybe&lt;String&gt; ipAddress = dnsClient.rxLookup(<span class=\"hljs-string\">&quot;www.google.com&quot;</span>);\nipAddress.subscribe(\n  value -&gt; System.out.println(<span class=\"hljs-string\">&quot;resolved to &quot;</span> + value),\n  err -&gt; err.printStackTrace(),\n  () -&gt; System.out.println(<span class=\"hljs-string\">&quot;does not resolve&quot;</span>));\n</code></pre><p>Rx­Java aug­ments Vert.x streams with a <code>toObservable()</code> method, like­wise Rx­Java2 adds the <code>toFlowable()</code> method:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Flowable&lt;Buffer&gt; maps to a ReadStream&lt;Buffer&gt;</span>\n<span class=\"hljs-comment\">// back-pressured stream</span>\nFlowable&lt;Buffer&gt; flowable = asyncFile.toFlowable();\n\n<span class=\"hljs-comment\">// but we still can get an Observable&lt;Buffer&gt;</span>\n<span class=\"hljs-comment\">// non back-pressured stream</span>\nObservable&lt;Buffer&gt; flowable = asyncFile.toObservable();\n</code></pre><p>What’s so dif­fer­ent be­tween <code>Flowable</code> and <code>Observable</code>? the for­mer han­dles back-​pressure, i.e the\nsub­scriber can con­trol the flow of items and the later can not!!!</p><p>You can read the doc­u­men­ta­tion in the sec­tion of the <a href=\"/docs/vertx-rx/java2/\">docs</a>\nor go straight to the <a href=\"https://github.com/vert-x3/vertx-examples/tree/master/rxjava2-examples\">ex­am­ples</a></p><h2 id=\"kotlin-coroutines\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#kotlin-coroutines\"></a>Kotlin coroutines</h2><p>Sup­port for <a href=\"/docs/vertx-lang-kotlin-coroutines/kotlin/\">Kotlin Corou­tines</a> is one of my favourite 3.5 fea­tures (by the way I’ll present a talk about Vert.x\nand corou­tines at <a href=\"https://www.kotlinconf.com/sessions/\">Kotlin­Conf</a>).</p><p>Corou­tines al­lows you to rea­son about asyn­chro­nous flow the same way you do with tra­di­tional se­quen­tial flow with\nthe extra bonus to use <code>try</code>/<code>catch</code>/<code>finally</code> super combo:</p><pre><code class=\"hljs language-kotlin\"><span class=\"hljs-keyword\">val</span> movie = ctx.pathParam(<span class=\"hljs-string\">&quot;id&quot;</span>)\n<span class=\"hljs-keyword\">val</span> rating = Integer.parseInt(ctx.queryParam(<span class=\"hljs-string\">&quot;getRating&quot;</span>)[<span class=\"hljs-number\">0</span>])\n<span class=\"hljs-keyword\">val</span> connection = awaitResult&lt;SQLConnection&gt; { client.getConnection(it) }\n<span class=\"hljs-keyword\">try</span> {\n  <span class=\"hljs-keyword\">val</span> result = awaitResult&lt;ResultSet&gt; { connection.queryWithParams(<span class=\"hljs-string\">&quot;SELECT TITLE FROM MOVIE WHERE ID=?&quot;</span>, json { array(movie) }, it) }\n  <span class=\"hljs-keyword\">if</span> (result.rows.size == <span class=\"hljs-number\">1</span>) {\n    awaitResult&lt;UpdateResult&gt; { connection.updateWithParams(<span class=\"hljs-string\">&quot;INSERT INTO RATING (VALUE, MOVIE_ID) VALUES ?, ?&quot;</span>, json { array(rating, movie) }, it) }\n    ctx.response().setStatusCode(<span class=\"hljs-number\">200</span>).end()\n  } <span class=\"hljs-keyword\">else</span> {\n    ctx.response().setStatusCode(<span class=\"hljs-number\">404</span>).end()\n  }\n} <span class=\"hljs-keyword\">finally</span> {\n  connection.close()\n}\n</code></pre><p>This ex­am­ple is bor­rowed from our <a href=\"https://github.com/vert-x3/vertx-examples/tree/master/kotlin-examples/coroutines\">ex­am­ples</a>.</p><div class=\"alert info\"><p>I’ve used <code>try</code>/<code>finally</code> pur­posely in­stead of Kotlin’s <code>use</code> ex­ten­sion method</p></div><h2 id=\"mqtt-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#mqtt-client\"></a>MQTT Client</h2><p>In Vert.x 3.4 we added the <a href=\"/docs/vertx-mqtt/java/#_vert_x_mqtt_server\">MQTT server</a>, 3.5 com­pletes the\nMQTT story with the <a href=\"/docs/vertx-mqtt/java/#_vert_x_mqtt_client\">MQTT client</a>:</p><pre><code class=\"hljs language-java\">MqttClient mqttClient = MqttClient.create(vertx,\n   <span class=\"hljs-keyword\">new</span> MqttClientOptions()\n     .setPort(BROKER_PORT)\n     .setHost(BROKER_HOST)).connect(ar -&gt;\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    System.out.println(<span class=\"hljs-string\">&quot;Connected to a server&quot;</span>);\n\n    mqttClient.publish(\n      MQTT_TOPIC,\n      Buffer.buffer(MQTT_MESSAGE),\n      MqttQoS.AT_MOST_ONCE,\n      <span class=\"hljs-keyword\">false</span>,\n      <span class=\"hljs-keyword\">false</span>,\n      s -&gt; mqttClient.disconnect(d -&gt; System.out.println(<span class=\"hljs-string\">&quot;Disconnected from server&quot;</span>)));\n  } <span class=\"hljs-keyword\">else</span> {\n    System.out.println(<span class=\"hljs-string\">&quot;Failed to connect to a server&quot;</span>);\n    ar.cause().printStackTrace();\n  }\n});\n</code></pre><p>You can find MQTT client and server ex­am­ples <a href=\"https://github.com/vert-x3/vertx-examples/tree/master/mqtt-examples\">here</a></p><h2 id=\"web-api-contracts\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#web-api-contracts\"></a>Web API contracts</h2><p>With the new <a href=\"/docs/vertx-web-api-contract/java/\">Ope­nAPI</a> router fac­tory we can focus on the API im­ple­men­ta­tion and not on the val­i­da­tion\nof the input. The usage is quite sim­ple:</p><pre><code class=\"hljs language-java\">OpenAPI3RouterFactory.createRouterFactoryFromFile(vertx, <span class=\"hljs-string\">&quot;petstore.yaml&quot;</span>, ar -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    <span class=\"hljs-comment\">// Spec loaded with success</span>\n    OpenAPI3RouterFactory routerFactory = ar.result();\n\n    <span class=\"hljs-comment\">// add your API and security handlers to the factory</span>\n\n    <span class=\"hljs-comment\">// add it to a server</span>\n    vertx.createHttpServer()\n      .requestHandler(routerFactory.getRouter()::accept)\n      .listen();\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// Something went wrong during router factory initialization</span>\n  }\n});\n</code></pre><p>Now as a de­vel­oper you only need to care about the API and not on the val­i­da­tion. The Ope­nAPI router will en­sure that a\nre­quest to an API will first to the con­tract be­fore your han­dler is in­voked.</p><h2 id=\"java-9-support\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#java-9-support\"></a>Java 9 support</h2><p>Java 9 was re­leased a few days ago and the Vert.x stack has been care­fully tested on Java 9 and most of our com­po­nents\nrun on Java 9 (Groovy does not run well on Java 9, please see the sup­port <a href=\"https://github.com/vert-x3/wiki/wiki/Java-9-Support\">ma­trix</a>)</p><p>As a bonus you can now use HTTP/2 out of the box with JDK SSL!</p><p>You can also use Vert.x jars as anony­mous mod­ules.</p><h2 id=\"event-driven-json-parsing\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#event-driven-json-parsing\"></a>Event driven JSON Parsing</h2><p>We pro­vide now an event dri­ven <a href=\"/docs/apidocs/io/vertx/core/parsetools/JsonParser.html\">JSON Parser</a> emit­ting parse events that is very handy when you need to han­dle very large\nJSON struc­tures and you don’t want to buffer it which in­tro­duce extra la­tency and in­crease the mem­ory con­sump­tion.</p><p>The parser al­lows you to switch be­tween fine grained JSON parse events or full struc­tures, for in­stance\nyou can parse an array of ob­ject very ef­fi­ciently:</p><pre><code class=\"hljs language-java\">JsonParser parser = JsonParser.newParser();\n\n<span class=\"hljs-comment\">// The parser will handle JSON objects as values</span>\nparser.objectValueMode();\n\nparser.handler(event -&gt; {\n  <span class=\"hljs-keyword\">switch</span> (event.type()) {\n    <span class=\"hljs-keyword\">case</span> START_ARRAY:\n      <span class=\"hljs-comment\">// Start the array</span>\n      <span class=\"hljs-keyword\">break</span>;\n    <span class=\"hljs-keyword\">case</span> END_ARRAY:\n      <span class=\"hljs-comment\">// End the array</span>\n      <span class=\"hljs-keyword\">break</span>;\n    <span class=\"hljs-keyword\">case</span> VALUE:\n      <span class=\"hljs-comment\">// Handle each object</span>\n      <span class=\"hljs-keyword\">break</span>;\n  }\n});\n</code></pre><h2 id=\"single-sql-operations\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#single-sql-operations\"></a>Single SQL operations</h2><p>Sin­gle SQL op­er­a­tions (aka <em>one-​shot</em>) have been dras­ti­cally sim­pli­fied: most of the <code>SQLOperations</code> op­er­a­tions can now be\nper­formed di­rectly on the <code>SQLClient</code>:</p><pre><code class=\"hljs language-java\">client.queryWithParams(<span class=\"hljs-string\">&quot;SELECT AVG(VALUE) AS VALUE FROM RATING WHERE MOVIE_ID=?&quot;</span>, <span class=\"hljs-keyword\">new</span> JsonArray().add(id), ar2 -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    <span class=\"hljs-keyword\">int</span> value = ar.result().get(<span class=\"hljs-number\">0</span>).getInteger(<span class=\"hljs-string\">&quot;VALUE&quot;</span>);\n    <span class=\"hljs-comment\">// Continue</span>\n  }\n});\n</code></pre><p>Under the hood, the client takes care of the pool ac­quire/re­lease in­ter­ac­tion for you.</p><h2 id=\"native-transport-and-domain-sockets\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#native-transport-and-domain-sockets\"></a>Native transport and domain sockets</h2><p>We now sup­port <a href=\"/docs/vertx-core/java/#_native_transports\">na­tive trans­ports</a> on Linux (Epoll) and MacOS (KQueue), as well as <a href=\"/docs/vertx-core/java/#_domain_sockets\">UNIX do­main sock­ets</a> for\n<code>NetServer/NetClient</code> (<code>HttpServer</code>/<code>HttpClient</code> should sup­port UNIX do­main sock­ets soon).</p><h2 id=\"auth-handler-chaining\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#auth-handler-chaining\"></a>Auth handler chaining</h2><p>There are times when you want to sup­port mul­ti­ple authN/authZ mech­a­nisms in a sin­gle ap­pli­ca­tion.</p><p>Vert.x Web sup­ports auth han­dlers <a href=\"/docs/vertx-web/java/#_chaining_multiple_auth_handlers\">chain­ing</a></p><h2 id=\"vertx-config-improvements\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-config-improvements\"></a>Vert.x config improvements</h2><p>Vert.x Con­fig al­lows con­fig­ur­ing your ap­pli­ca­tion by as­sem­bling con­fig chunks from dif­fer­ent lo­ca­tions such as file,\nhttp, zookeeper…</p><p>In this ver­sion, we have added the sup­port for Con­sul and Vault.</p><p>With the <a href=\"/docs/vertx-config/java/#_consul_configuration_store\">Con­sul con­fig store</a>, you can re­trieve your con­fig­u­ra­tion from a Con­sul server - so in other words, dis­trib­ute\nthe con­fig­u­ra­tion from your or­ches­tra­tion in­fra­struc­ture.</p><p>The <a href=\"/docs/vertx-config/java/#_vault_config_store\">Vault con­fig store</a> lets you re­trieve se­crets avoid­ing hard cod­ing se­crets or dis­trib­ut­ing cre­den­tials using an\nin­se­cure way. Vault en­forces the se­cu­rity of your se­crets and only al­lowed ap­pli­ca­tions can re­trieve them. In other\nwords, now you can keep your se­crets se­cret.</p><h2 id=\"acks\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#acks\"></a>ACKs</h2><p>I want on be­half of the team to thank all the con­trib­u­tors for this re­lease in­clud­ing the Google Sum­mer of Code stu­dents\n(<a href=\"https://twitter.com/titantins\">Pavel Drankov</a>, <a href=\"https://twitter.com/slinkyguardiani\">Francesco Guardiani</a> and <a href=\"https://yunyul.in\">Yunyu Lin</a>)\nthat de­liv­ered an im­pres­sive work.</p><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The re­lease notes</p><ul><li><a href=\"https://github.com/vert-x3/wiki/wiki/3.5.0-Release-Notes\">https://github.com/vert-​x3/wiki/wiki/3.5.0-​Release-Notes</a></li></ul><p>Docker im­ages are also avail­able on the <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>. The Vert.x dis­tri­b­u­tion is also avail­able\nfrom <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>The event bus client using the SockJS bridge are avail­able from NPM, Bower and as a We­b­Jar:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">https://www.npmjs.com/pack­age/vertx3-​eventbus-client</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">https://github.com/vert-​x3/vertx-​bus-bower</a></li><li><a href=\"http://www.webjars.org/\">http://www.we­b­jars.org/</a></li></ul><p>The ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.5.0%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.5.0/view\">Bin­tray</a>.</p>","scope":{}}},"prevPost":{"meta":{"title":"Eclipse Vert.x meets GraphQL","category":"guides","authors":[{"name":"Johannes Schüth","github_id":"jotschi"}],"summary":"In this blog post, we will look at an example application written in Vert.x that uses the new GraphQL API of Gentics Mesh."},"date":"2017-11-14","slug":"eclipse-vert-x-meets-graphql"},"nextPost":{"meta":{"title":"An Eclipse Vert.x Gradle Plugin","category":"news","authors":[{"name":"Julien Ponge","github_id":"jponge"}],"summary":"The new Vert.x Gradle plugin offers an opinionated plugin for building Vert.x applications with Gradle."},"date":"2017-09-28","slug":"an-eclipse-vert-x-gradle-plugin"},"relatedPosts":[{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"},{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"},{"meta":{"title":"Vert.x 3.4.0.Beta1 release","category":"guides","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have released 3.4.0.Beta1, this release is the biggest since Vert.x 3.0.0 with plenty of great features."},"date":"2017-02-09","slug":"vert-x-3-4-0-beta1-release"}]},"__N_SSG":true}