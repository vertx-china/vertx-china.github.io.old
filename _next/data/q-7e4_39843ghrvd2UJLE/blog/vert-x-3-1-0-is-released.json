{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Vert.x 3.1.0 is released!","category":"releases","authors":[{"name":"Tim Fox","github_id":"purplefox"}],"summary":"I'm pleased to announce the release of Vert.x 3.1!"},"date":"2015-10-08","slug":"vert-x-3-1-0-is-released","readingTime":{"text":"2 min read","minutes":1.095,"time":65700,"words":219},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I\\u2019m pleased to an\\xADnounce the re\\xADlease of Vert.x 3.1!\"), mdx(\"p\", null, \"Some of the high\\xADlights of this re\\xADlease in\\xADclude:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(Link, {\n    href: \"/docs/vertx-sync/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vertx-\\u200Bsync\")), \" is a set of util\\xADi\\xADties that allow you to per\\xADform asyn\\xADchro\\xADnous\\nop\\xADer\\xADa\\xADtions and re\\xADceive events in a syn\\xADchro\\xADnous way, but with\\xADout block\\xADing ker\\xADnel threads.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(Link, {\n    href: \"/docs/vertx-stomp/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vertx-\\u200Bstomp\")), \" is an im\\xADple\\xADmen\\xADta\\xADtion of a STOMP server and client.\\nYou can use the STOMP server with other clients and use the STOMP client with other servers.\\nThe server and the client sup\\xADports the ver\\xADsion 1.0, 1.1 and 1.2 of the STOMP pro\\xADto\\xADcol.\\nThe STOMP server can also be used as a bridge with the\\nvert.x event bus.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(Link, {\n    href: \"/docs/vertx-shell/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vertx-\\u200Bshell\")), \" is a com\\xADmand line in\\xADter\\xADface for the Vert.x run\\xADtime avail\\xADable from\\nreg\\xADu\\xADlar ter\\xADmi\\xADnals using dif\\xADfer\\xADent pro\\xADto\\xADcols.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Re-\\u200Bimplementation of the Starter class and re\\xADlated func\\xADtion\\xADal\\xADity. And now re\\xADde\\xADploy is back!\"))), mdx(\"p\", null, \"Full re\\xADlease notes can be found here:\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.1-Release-Notes\"\n  }), \"https://github.com/vert-\\u200Bx3/wiki/wiki/3.1-\\u200BRelease-Notes\")), mdx(\"p\", null, \"Break\\xADing changes here:\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.1.0---Breaking-changes\"\n  }), \"https://github.com/vert-\\u200Bx3/wiki/wiki/3.1.0-\\u200B\\u2014Breaking-changes\")), mdx(\"p\", null, \"NPM for the event-\\u200Bbus client here:\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"https://www.npmjs.com/pack\\xADage/vertx3-\\u200Beventbus-client\")), mdx(\"p\", null, \"Many thanks to all the com\\xADmit\\xADters and com\\xADmu\\xADnity whose con\\xADtri\\xADbu\\xADtions made this pos\\xADsi\\xADble.\"), mdx(\"p\", null, \"A spe\\xADcial thanks to the full-\\u200Btime team - Clement, Julien and Paulo who put in a lot of work to get this out :)\"), mdx(\"p\", null, \"Next stop is Vert.x 3.2 which we hope to have out be\\xADfore Christ\\xADmas.\"), mdx(\"p\", null, \"The ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.1.0%22\"\n  }), \"Maven Cen\\xADtral\"), \"\\nand you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.1.0/view\"\n  }), \"Bin\\xADtray\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>I’m pleased to an­nounce the re­lease of Vert.x 3.1!</p><p>Some of the high­lights of this re­lease in­clude:</p><ul><li><p><a href=\"/docs/vertx-sync/java/\">Vertx-​sync</a> is a set of util­i­ties that allow you to per­form asyn­chro­nous\nop­er­a­tions and re­ceive events in a syn­chro­nous way, but with­out block­ing ker­nel threads.</p></li><li><p><a href=\"/docs/vertx-stomp/java/\">Vertx-​stomp</a> is an im­ple­men­ta­tion of a STOMP server and client.\nYou can use the STOMP server with other clients and use the STOMP client with other servers.\nThe server and the client sup­ports the ver­sion 1.0, 1.1 and 1.2 of the STOMP pro­to­col.\nThe STOMP server can also be used as a bridge with the\nvert.x event bus.</p></li><li><p><a href=\"/docs/vertx-shell/java/\">Vertx-​shell</a> is a com­mand line in­ter­face for the Vert.x run­time avail­able from\nreg­u­lar ter­mi­nals using dif­fer­ent pro­to­cols.</p></li><li><p>Re-​implementation of the Starter class and re­lated func­tion­al­ity. And now re­de­ploy is back!</p></li></ul><p>Full re­lease notes can be found here:</p><p><a href=\"https://github.com/vert-x3/wiki/wiki/3.1-Release-Notes\">https://github.com/vert-​x3/wiki/wiki/3.1-​Release-Notes</a></p><p>Break­ing changes here:</p><p><a href=\"https://github.com/vert-x3/wiki/wiki/3.1.0---Breaking-changes\">https://github.com/vert-​x3/wiki/wiki/3.1.0-​—Breaking-changes</a></p><p>NPM for the event-​bus client here:</p><p><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">https://www.npmjs.com/pack­age/vertx3-​eventbus-client</a></p><p>Many thanks to all the com­mit­ters and com­mu­nity whose con­tri­bu­tions made this pos­si­ble.</p><p>A spe­cial thanks to the full-​time team - Clement, Julien and Paulo who put in a lot of work to get this out :)</p><p>Next stop is Vert.x 3.2 which we hope to have out be­fore Christ­mas.</p><p>The ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.1.0%22\">Maven Cen­tral</a>\nand you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.1.0/view\">Bin­tray</a>.</p>","scope":{}}},"prevPost":{"meta":{"title":"Using the asynchronous SQL client","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Finally, back... This post is the fifth post of the introduction to vert.x blog series, after a not-that-small break. In this post we are going to see how we can use JDBC in a vert.x application."},"date":"2015-10-19","slug":"using-the-asynchronous-sql-client"},"nextPost":{"meta":{"title":"Contract Driven REST Services with Vert.x3","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"We see a new trend in development where we are shifting from developing applications to APIs. More and more we see services being offered as REST APIs that we are allowed to consume."},"date":"2015-09-17","slug":"contract-driven-rest-services-with-vert-x3"},"relatedPosts":[{"meta":{"title":"Building a real-time web app with Angular/Ngrx and Vert.x","category":"guides","authors":[{"name":"Benoit Hediard","github_id":"benorama"}],"summary":"There are multiple tech stacks to build a real-time web app. What are the best choices to build Angular client apps, connected to a JVM-based backend?"},"date":"2017-04-26","slug":"building-a-real-time-web-app-with-angular-ngrx-and-vert-x"},{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"},{"meta":{"title":"Eclipse Vert.x 3.5.1 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.5.1!"},"date":"2018-02-13","slug":"eclipse-vert-x-3-5-1-released"}]},"__N_SSG":true}