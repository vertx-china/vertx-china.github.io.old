{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Send web requests and assert results with vertx-junit5-web-client","category":"guides","authors":[{"name":"Francesco Guardiani","github_id":"slinkydeveloper"}],"summary":"In this blog post, you'll learn how to use the new vertx-junit5-web-client module to send web requests in your unit tests and to make assertions."},"date":"2019-10-22","slug":"send-web-requests-and-assert-results-with-vertx-junit5-web-client","readingTime":{"text":"2 min read","minutes":1.3,"time":78000,"words":260},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In the last Vert.x 3.8 re\\xADlease, we added a new mod\\xADule called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-junit5-web-client\"), \", that brings \", mdx(Link, {\n    href: \"/docs/vertx-web-client/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x Web Client\")), \" in\\xADjec\\xADtion\\ninto tests and pro\\xADvides an API called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TestRequest\"), \" to sim\\xADplify the cre\\xADation and as\\xADser\\xADtions on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WebClient\"), \" re\\xADquests:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" io.vertx.junit5.web.TestRequest.*;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@ExtendWith({\\n  VertxExtension.class, // VertxExtension MUST be configured before VertxWebClientExtension\\n  VertxWebClientExtension.class\\n})\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"TestRequestExample\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Test\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"test1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(WebClient client, VertxTestContext testContext)\"), \" \"), \"{\\n    testRequest(client, HttpMethod.GET, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/hello\\\"\"), \") \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Build the request\"), \"\\n      .with(\\n        queryParam(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"name\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"francesco\\\"\"), \"), \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Add query param\"), \"\\n        requestHeader(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"x-my\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"foo\\\"\"), \") \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Add request header\"), \"\\n      )\\n      .expect(\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Assert that response is a JSON with a specific body\"), \"\\n        jsonBodyResponse(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject().put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"value\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Hello Francesco!\\\"\"), \")),\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Assert that response contains a particular header\"), \"\\n        responseHeader(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"x-my\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"bar\\\"\"), \")\\n      )\\n      .send(testContext); \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Complete (or fail) the VertxTestContext\"), \"\\n  }\\n\\n}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"testRequest()\"), \" will use Vert.x Web Client to send the re\\xADquest. When the re\\xADsponse is re\\xADceived, It suc\\xADceds the test or it cor\\xADrectly prop\\xADa\\xADgates as\\xADser\\xADtion fail\\xADures, if any.\"), mdx(\"p\", null, \"You can also send mul\\xADti\\xADple re\\xADquests using \", mdx(Link, {\n    href: \"/docs/apidocs/io/vertx/junit5/Checkpoint.html\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Checkpoint\"))), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" io.vertx.junit5.web.TestRequest.*;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@ExtendWith({\\n  VertxExtension.class, // VertxExtension MUST be configured before VertxWebClientExtension\\n  VertxWebClientExtension.class\\n})\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"MultiTestRequestExample\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Test\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"test2\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(WebClient client, VertxTestContext testContext)\"), \" \"), \"{\\n    Checkpoint checkpoint = testContext.checkpoint(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"2\"), \"); \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Create the Checkpoint to flag when request succeds\"), \"\\n\\n    testRequest(\\n        client    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Create the test request using WebClient APIs\"), \"\\n          .get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/hello\\\"\"), \")\\n          .addQueryParam(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"name\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"francesco\\\"\"), \")\\n          .putHeader(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"x-my\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"foo\\\"\"), \")\\n      )\\n      .expect(\\n        jsonBodyResponse(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject().put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"value\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Hello Francesco!\\\"\"), \")),\\n        responseHeader(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"x-my\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"bar\\\"\"), \")\\n      )\\n      .send(testContext, checkpoint); \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Pass the checkpoint to flag\"), \"\\n\\n    testRequest(\\n        client\\n          .get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/hello\\\"\"), \")\\n          .addQueryParam(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"name\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"julien\\\"\"), \")\\n          .putHeader(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"x-my\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"foo\\\"\"), \")\\n      )\\n      .expect(\\n        jsonBodyResponse(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject().put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"value\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Hello Julien!\\\"\"), \")),\\n        responseHeader(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"x-my\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"bar\\\"\"), \")\\n      )\\n      .send(testContext, checkpoint);\\n  }\\n\\n}\\n\")), mdx(\"p\", null, \"Look at \", mdx(Link, {\n    href: \"/docs/vertx-junit5-web-client/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x JUnit 5 Web Client doc\\xADu\\xADmen\\xADta\\xADtion\")), \" for more de\\xADtails\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>In the last Vert.x 3.8 re­lease, we added a new mod­ule called <code>vertx-junit5-web-client</code>, that brings <a href=\"/docs/vertx-web-client/java/\">Vert.x Web Client</a> in­jec­tion\ninto tests and pro­vides an API called <code>TestRequest</code> to sim­plify the cre­ation and as­ser­tions on <code>WebClient</code> re­quests:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-keyword\">static</span> io.vertx.junit5.web.TestRequest.*;\n\n<span class=\"hljs-meta\">@ExtendWith({\n  VertxExtension.class, // VertxExtension MUST be configured before VertxWebClientExtension\n  VertxWebClientExtension.class\n})</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TestRequestExample</span> </span>{\n\n  <span class=\"hljs-meta\">@Test</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">test1</span><span class=\"hljs-params\">(WebClient client, VertxTestContext testContext)</span> </span>{\n    testRequest(client, HttpMethod.GET, <span class=\"hljs-string\">&quot;/hello&quot;</span>) <span class=\"hljs-comment\">// Build the request</span>\n      .with(\n        queryParam(<span class=\"hljs-string\">&quot;name&quot;</span>, <span class=\"hljs-string\">&quot;francesco&quot;</span>), <span class=\"hljs-comment\">// Add query param</span>\n        requestHeader(<span class=\"hljs-string\">&quot;x-my&quot;</span>, <span class=\"hljs-string\">&quot;foo&quot;</span>) <span class=\"hljs-comment\">// Add request header</span>\n      )\n      .expect(\n        <span class=\"hljs-comment\">// Assert that response is a JSON with a specific body</span>\n        jsonBodyResponse(<span class=\"hljs-keyword\">new</span> JsonObject().put(<span class=\"hljs-string\">&quot;value&quot;</span>, <span class=\"hljs-string\">&quot;Hello Francesco!&quot;</span>)),\n        <span class=\"hljs-comment\">// Assert that response contains a particular header</span>\n        responseHeader(<span class=\"hljs-string\">&quot;x-my&quot;</span>, <span class=\"hljs-string\">&quot;bar&quot;</span>)\n      )\n      .send(testContext); <span class=\"hljs-comment\">// Complete (or fail) the VertxTestContext</span>\n  }\n\n}\n</code></pre><p><code>testRequest()</code> will use Vert.x Web Client to send the re­quest. When the re­sponse is re­ceived, It suc­ceds the test or it cor­rectly prop­a­gates as­ser­tion fail­ures, if any.</p><p>You can also send mul­ti­ple re­quests using <a href=\"/docs/apidocs/io/vertx/junit5/Checkpoint.html\"><code>Checkpoint</code></a>:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-keyword\">static</span> io.vertx.junit5.web.TestRequest.*;\n\n<span class=\"hljs-meta\">@ExtendWith({\n  VertxExtension.class, // VertxExtension MUST be configured before VertxWebClientExtension\n  VertxWebClientExtension.class\n})</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MultiTestRequestExample</span> </span>{\n\n  <span class=\"hljs-meta\">@Test</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">test2</span><span class=\"hljs-params\">(WebClient client, VertxTestContext testContext)</span> </span>{\n    Checkpoint checkpoint = testContext.checkpoint(<span class=\"hljs-number\">2</span>); <span class=\"hljs-comment\">// Create the Checkpoint to flag when request succeds</span>\n\n    testRequest(\n        client    <span class=\"hljs-comment\">// Create the test request using WebClient APIs</span>\n          .get(<span class=\"hljs-string\">&quot;/hello&quot;</span>)\n          .addQueryParam(<span class=\"hljs-string\">&quot;name&quot;</span>, <span class=\"hljs-string\">&quot;francesco&quot;</span>)\n          .putHeader(<span class=\"hljs-string\">&quot;x-my&quot;</span>, <span class=\"hljs-string\">&quot;foo&quot;</span>)\n      )\n      .expect(\n        jsonBodyResponse(<span class=\"hljs-keyword\">new</span> JsonObject().put(<span class=\"hljs-string\">&quot;value&quot;</span>, <span class=\"hljs-string\">&quot;Hello Francesco!&quot;</span>)),\n        responseHeader(<span class=\"hljs-string\">&quot;x-my&quot;</span>, <span class=\"hljs-string\">&quot;bar&quot;</span>)\n      )\n      .send(testContext, checkpoint); <span class=\"hljs-comment\">// Pass the checkpoint to flag</span>\n\n    testRequest(\n        client\n          .get(<span class=\"hljs-string\">&quot;/hello&quot;</span>)\n          .addQueryParam(<span class=\"hljs-string\">&quot;name&quot;</span>, <span class=\"hljs-string\">&quot;julien&quot;</span>)\n          .putHeader(<span class=\"hljs-string\">&quot;x-my&quot;</span>, <span class=\"hljs-string\">&quot;foo&quot;</span>)\n      )\n      .expect(\n        jsonBodyResponse(<span class=\"hljs-keyword\">new</span> JsonObject().put(<span class=\"hljs-string\">&quot;value&quot;</span>, <span class=\"hljs-string\">&quot;Hello Julien!&quot;</span>)),\n        responseHeader(<span class=\"hljs-string\">&quot;x-my&quot;</span>, <span class=\"hljs-string\">&quot;bar&quot;</span>)\n      )\n      .send(testContext, checkpoint);\n  }\n\n}\n</code></pre><p>Look at <a href=\"/docs/vertx-junit5-web-client/java/\">Vert.x JUnit 5 Web Client doc­u­men­ta­tion</a> for more de­tails</p>","scope":{}}},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.8.4","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"This version is a bug fix release of Vert.x 3.8.3, which addresses quite a few bugs reported by the community."},"date":"2019-11-28","slug":"eclipse-vert-x-3-8-4"},"nextPost":{"meta":{"title":"Eclipse Vert.x 3.8.3","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"This new version is a minor bug fix release that addresses issues reported in Eclipse Vert.x 3.8.2. We would like to thank you all for reporting these bugs."},"date":"2019-10-18","slug":"eclipse-vert-x-3-8-3"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Building services and APIs with AMQP 1.0","category":"guides","authors":[{"name":"Jakub Scholz","github_id":"scholzj"}],"summary":"Microservices and APIs are everywhere. Everyone talks about them, presentation slides are full of them ... some people are actually even building them."},"date":"2017-01-25","slug":"building-services-and-apis-with-amqp-1-0"},{"meta":{"title":"Eclipse Vert.x 4 milestone 5 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are extremely pleased to announce the fifth 4.0 milestone release of Eclipse Vert.x. This release aims to provide a reliable distribution of the current development of Vert.x 4."},"date":"2020-06-10","slug":"eclipse-vert-x-4-milestone-5-released"}]},"__N_SSG":true}