{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Vertx 3 and Keycloak tutorial","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"With the upcoming release of Vert.x 3.3 securing your application with Keycloak is even easier than before."},"date":"2016-03-30","slug":"vertx-3-and-keycloak-tutorial","readingTime":{"text":"1 min read","minutes":0.685,"time":41100,"words":137},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"With the up\\xADcom\\xADing re\\xADlease of Vert.x 3.3 se\\xADcur\\xADing your ap\\xADpli\\xADca\\xADtion with Key\\xADcloak is even eas\\xADier than be\\xADfore.\"), mdx(\"h2\", {\n    \"id\": \"about-keycloak\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#about-keycloak\"\n  })), \"About Keycloak\"), mdx(\"p\", null, \"Key\\xADcloak de\\xADscribes it\\xADself as an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Open Source Iden\\xADtity and Ac\\xADcess Man\\xADage\\xADment For Mod\\xADern Ap\\xADpli\\xADca\\xADtions and Ser\\xADvices\"), \".\"), mdx(\"p\", null, \"With Key\\xADcloak you can quickly add \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Au\\xADthen\\xADti\\xADca\\xADtion\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Au\\xADtho\\xADriza\\xADtion\"), \" to your vert.x ap\\xADpli\\xADca\\xADtion. The easy way is to\\nsetup a realm on key\\xADcloak and once you\\u2019re done, ex\\xADport the con\\xADfig\\xADu\\xADra\\xADtion to your vert.x app.\"), mdx(\"p\", null, \"This how you would se\\xADcure your app:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"cre\\xADate a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"OAuth2Auth\"), \" in\\xADstance with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"OAuth2Auth.createKeycloak(...)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"copy your con\\xADfig from the key\\xADcloak admin GUI\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"setup your call\\xADback ac\\xADcord\\xADing to what you en\\xADtered on key\\xADcloak\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"se\\xADcure your re\\xADsource with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"router.route(\\\"/protected/*\\\").handler(oauth2)\"))), mdx(\"h2\", {\n    \"id\": \"screencast\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#screencast\"\n  })), \"Screencast\"), mdx(\"p\", null, \"The fol\\xADlow\\xADing screen\\xADcast ex\\xADplains how you can do this from scratch:\"), mdx(\"div\", {\n    className: \"youtube-embed\"\n  }, mdx(\"iframe\", {\n    src: \"https://www.youtube.com/embed/c20igjL69Mo\",\n    frameBorder: \"0\",\n    allowFullScreen: true\n  })), mdx(\"p\", null, \"Don\\u2019t for\\xADget to fol\\xADlow our \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/channel/UCGN6L3tRhs92Uer3c6VxOSA\"\n  }), \"youtube chan\\xADnel\"), \"!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>With the up­com­ing re­lease of Vert.x 3.3 se­cur­ing your ap­pli­ca­tion with Key­cloak is even eas­ier than be­fore.</p><h2 id=\"about-keycloak\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#about-keycloak\"></a>About Keycloak</h2><p>Key­cloak de­scribes it­self as an <em>Open Source Iden­tity and Ac­cess Man­age­ment For Mod­ern Ap­pli­ca­tions and Ser­vices</em>.</p><p>With Key­cloak you can quickly add <em>Au­then­ti­ca­tion</em> and <em>Au­tho­riza­tion</em> to your vert.x ap­pli­ca­tion. The easy way is to\nsetup a realm on key­cloak and once you’re done, ex­port the con­fig­u­ra­tion to your vert.x app.</p><p>This how you would se­cure your app:</p><ol><li>cre­ate a <code>OAuth2Auth</code> in­stance with <code>OAuth2Auth.createKeycloak(...)</code></li><li>copy your con­fig from the key­cloak admin GUI</li><li>setup your call­back ac­cord­ing to what you en­tered on key­cloak</li><li>se­cure your re­source with <code>router.route(&quot;/protected/*&quot;).handler(oauth2)</code></li></ol><h2 id=\"screencast\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#screencast\"></a>Screencast</h2><p>The fol­low­ing screen­cast ex­plains how you can do this from scratch:</p><div class=\"youtube-embed\"><iframe src=\"https://www.youtube.com/embed/c20igjL69Mo\" frameBorder=\"0\" allowfullscreen=\"\"></iframe></div><p>Don’t for­get to fol­low our <a href=\"https://www.youtube.com/channel/UCGN6L3tRhs92Uer3c6VxOSA\">youtube chan­nel</a>!</p>","scope":{}}},"prevPost":{"meta":{"title":"Vert.x 3.3.0 is released!","category":"releases","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"That was a long run … but here we are. We are very pleased to announce the release of Vert.x 3.3.0!"},"date":"2016-06-24","slug":"vert-x-3-3-0-is-released"},"nextPost":{"meta":{"title":"Vert.x 3 and Azure cloud platform tutorial","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"Vert.x 3.2.1 applications can quickly be deployed on Microsoft Azure. Deployment is independent of your build so it is all about configuration."},"date":"2016-03-17","slug":"vertx-3-and-azure-cloud-platform-tutorial"},"relatedPosts":[{"meta":{"title":"JWT Authorization for Vert.x with Keycloak","category":"guides","authors":[{"name":"Thomas Darimont","github_id":"thomasdarimont"}],"summary":"In this blog post, you'll learn about JWT foundations, protect routes with JWT Authorization, JWT encoded tokens, and RBAC with Keycloak"},"date":"2020-10-01","slug":"jwt-authorization-for-vert-x-with-keycloak"},{"meta":{"title":"Easy SSO for Vert.x with Keycloak","category":"guides","authors":[{"name":"Thomas Darimont","github_id":"thomasdarimont"}],"summary":"In this blog post, you'll learn how to implement Single Sign-on with OpenID Connect and how to use Keycloak together with Eclipse Vert.x."},"date":"2020-03-16","slug":"easy-sso-for-vert-x-with-keycloak"},{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"}]},"__N_SSG":true}