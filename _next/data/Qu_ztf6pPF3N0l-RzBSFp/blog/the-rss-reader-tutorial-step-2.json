{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"The RSS reader tutorial (Step 2)","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this second installment of our Vert.x Cassandra Client tutorial, we will add an endpoint that produces an array of RSS channels for a given user ID."},"date":"2018-09-05","slug":"the-rss-reader-tutorial-step-2","readingTime":{"text":"3 min read","minutes":2.375,"time":142500,"words":475},"content":{"compiledSource":"var m=Object.defineProperty,d=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var l=(a,s,n)=>s in a?m(a,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[s]=n,e=(a,s)=>{for(var n in s||(s={}))p.call(s,n)&&l(a,n,s[n]);if(r)for(var n of r(s))o.call(s,n)&&l(a,n,s[n]);return a},i=(a,s)=>d(a,h(s));var c=(a,s)=>{var n={};for(var t in a)p.call(a,t)&&s.indexOf(t)<0&&(n[t]=a[t]);if(a!=null&&r)for(var t of r(a))s.indexOf(t)<0&&o.call(a,t)&&(n[t]=a[t]);return n};const makeShortcode=a=>function(n){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},n))},Link=makeShortcode(\"Link\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var t=n,{components:a}=t,s=c(t,[\"components\"]);return mdx(MDXLayout,i(e(e({},layoutProps),s),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"In \",mdx(Link,{href:\"/blog/the-rss-reader-tutorial/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"the pre\\xADvi\\xADous step\")),`, we have suc\\xADcess\\xADfully im\\xADple\\xADmented the first end\\xADpoint\nof the RSS reader app.`),mdx(\"p\",null,\"The RSS reader ex\\xADam\\xADple as\\xADsumes im\\xADple\\xADment\\xADing 3 end\\xADpoints. This ar\\xADti\\xADcle is ded\\xADi\\xADcated to im\\xADple\\xADment\\xADing the \",mdx(\"inlineCode\",{parentName:\"p\"},\"GET /user/{user_id}/rss_channels\"),\" end\\xADpoint.\"),mdx(\"p\",null,\"Be\\xADfore com\\xADplet\\xADing this step, make sure your are in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"step_2\"),\" git branch:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-better-shell\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-meta\"}),\"$\"),mdx(\"span\",e({parentName:\"code\"},{className:\"bash\"}),\" git checkout step_2\"),`\n`)),mdx(\"h2\",e({},{id:\"implementing-the-second-endpoint\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#implementing-the-second-endpoint\"})),\"Implementing the second endpoint\"),mdx(\"p\",null,\"The sec\\xADond end\\xADpoint pro\\xADduces an array of RSS chan\\xADnels by given \",mdx(\"inlineCode\",{parentName:\"p\"},\"user_id\"),\".\"),mdx(\"p\",null,\"We need to ex\\xADe\\xADcute the two fol\\xADlow\\xADing queries to:\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"Fetch RSS links for a given user:\",mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-sql\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"SELECT\"),\" rss_link \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"FROM\"),\" rss_by_user \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"WHERE\"),\" login \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-operator\"}),\"=\"),` GIVEN_USER_ID ;\n`))),mdx(\"li\",{parentName:\"ol\"},\"Fetch RSS chan\\xADnel de\\xADtails for a given link:\",mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-sql\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"SELECT\"),\" description, title, site_link, rss_link \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"FROM\"),\" channel_info_by_rss_link \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"WHERE\"),\" rss_link \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-operator\"}),\"=\"),` GIVEN_LINK ;\n`)))),mdx(\"h2\",e({},{id:\"implementation\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#implementation\"})),\"Implementation\"),mdx(\"p\",null,\"The end\\xADpoint al\\xADlows the the front-\\u200Bend app to dis\\xADplay the list of RSS feeds a user sub\\xADscribed on. When the end\\xADpoint is ac\\xADcessed, the \",mdx(\"inlineCode\",{parentName:\"p\"},\"AppVerticle#getRssChannels\"),\" method is called. We can im\\xADple\\xADment this method in this way:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"getRssChannels\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(RoutingContext ctx)\"),\" \"),`{\n    String userId = ctx.request().getParam(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"user_id\"'),`);\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),\" (userId == \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"null\"),`) {\n        responseWithInvalidRequest(ctx);\n    } `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"else\"),` {\n        Future<List<Row>> future = Future.future();\n        client.executeWithFullFetch(selectRssLinksByLogin.bind(userId), future);\n        future.compose(rows -> {\n            List<String> links = rows.stream()\n                    .map(row -> row.getString(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"0\"),`))\n                    .collect(Collectors.toList());\n\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),` CompositeFuture.all(\n                    links.stream().map(selectChannelInfo::bind).map(statement -> {\n                        Future<List<Row>> channelInfoRow = Future.future();\n                        client.executeWithFullFetch(statement, channelInfoRow);\n                        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),` channelInfoRow;\n                    }).collect(Collectors.toList())\n            );\n        }).setHandler(h -> {\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),` (h.succeeded()) {\n                CompositeFuture result = h.result();\n                List<List<Row>> results = result.list();\n                List<Row> list = results.stream()\n                        .flatMap(List::stream)\n                        .collect(Collectors.toList());\n                JsonObject responseJson = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` JsonObject();\n                JsonArray channels = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` JsonArray();\n\n                list.forEach(eachRow -> channels.add(\n                        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` JsonObject()\n                                .put(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"description\"'),\", eachRow.getString(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"0\"),`))\n                                .put(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"title\"'),\", eachRow.getString(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"1\"),`))\n                                .put(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"link\"'),\", eachRow.getString(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"2\"),`))\n                                .put(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"rss_link\"'),\", eachRow.getString(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"3\"),`))\n                ));\n\n                responseJson.put(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"channels\"'),`, channels);\n                ctx.response().end(responseJson.toString());\n            } `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"else\"),` {\n                log.error(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"failed to get rss channels\"'),`, h.cause());\n                ctx.response().setStatusCode(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"500\"),\").end(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Unable to retrieve the info from C*\"'),`);\n            }\n        });\n    }\n}\n`)),mdx(\"p\",null,\"Also, this method uses \",mdx(\"inlineCode\",{parentName:\"p\"},\"selectChannelInfo\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"selectRssLinksByLogin\"),\" fields, they should be ini\\xADtial\\xADized in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"AppVerticle#prepareNecessaryQueries\"),\" method:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" Future<Void> \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"prepareNecessaryQueries\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"()\"),\" \"),`{\n    Future<PreparedStatement> selectChannelInfoPrepFuture = Future.future();\n    client.prepare(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"SELECT description, title, site_link, rss_link FROM channel_info_by_rss_link WHERE rss_link = ? ;\"'),`, selectChannelInfoPrepFuture);\n\n    Future<PreparedStatement> selectRssLinkByLoginPrepFuture = Future.future();\n    client.prepare(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"SELECT rss_link FROM rss_by_user WHERE login = ? ;\"'),`, selectRssLinkByLoginPrepFuture);\n\n    Future<PreparedStatement> insertNewLinkForUserPrepFuture = Future.future();\n    client.prepare(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"INSERT INTO rss_by_user (login , rss_link ) VALUES ( ?, ?);\"'),`, insertNewLinkForUserPrepFuture);\n\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),` CompositeFuture.all(\n            selectChannelInfoPrepFuture.compose(preparedStatement -> {\n                selectChannelInfo = preparedStatement;\n                `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),` Future.succeededFuture();\n            }),\n            selectRssLinkByLoginPrepFuture.compose(preparedStatement -> {\n                selectRssLinksByLogin = preparedStatement;\n                `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),` Future.succeededFuture();\n            }),\n            insertNewLinkForUserPrepFuture.compose(preparedStatement -> {\n                insertNewLinkForUser = preparedStatement;\n                `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),` Future.succeededFuture();\n            })\n    ).mapEmpty();\n}\n`)),mdx(\"h2\",e({},{id:\"conclusion\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#conclusion\"})),\"Conclusion\"),mdx(\"p\",null,\"In this part, we have suc\\xADcess\\xADfully im\\xADple\\xADmented the sec\\xADond end\\xADpoint, which al\\xADlows the browser app to ob\\xADtain chan\\xADnels in\\xADfor\\xADma\\xADtion for a spe\\xADcific user. To en\\xADsure that it is work\\xADing fine, point your browser to \",mdx(\"inlineCode\",{parentName:\"p\"},\"localhost:8080\"),\" and click to the re\\xADfresh but\\xADton. Chan\\xADnel list should ap\\xADpear im\\xADme\\xADdi\\xADately.\"),mdx(\"p\",null,\"If you have any prob\\xADlems with com\\xADplet\\xADing this step you can check\\xADout to \",mdx(\"inlineCode\",{parentName:\"p\"},\"step_3\"),\", where you can find all changes made for com\\xADplet\\xADing this step:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-better-shell\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-meta\"}),\"$\"),mdx(\"span\",e({parentName:\"code\"},{className:\"bash\"}),\" git checkout step_3\"),`\n`)),mdx(\"p\",null,\"Thanks for read\\xADing this. I hope you en\\xADjoyed read\\xADing this ar\\xADti\\xADcle. See you soon on our \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://gitter.im/eclipse-vertx/vertx-users\"}),\"Git\\xADter chan\\xADnel\"),\"!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.5.4","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.5.4, a bug fix release of Vert.x 3.5.x."},"date":"2018-10-03","slug":"eclipse-vert-x-3-5-4"},"nextPost":{"meta":{"title":"The RSS reader tutorial","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this tutorial, you will learn how to use the Eclipse Vert.x Cassandra client in practice. We will develop an RSS reader with three HTTP endpoints."},"date":"2018-08-20","slug":"the-rss-reader-tutorial"},"relatedPosts":[{"meta":{"title":"The RSS reader tutorial","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this tutorial, you will learn how to use the Eclipse Vert.x Cassandra client in practice. We will develop an RSS reader with three HTTP endpoints."},"date":"2018-08-20","slug":"the-rss-reader-tutorial"},{"meta":{"title":"Easy SSO for Vert.x with Keycloak","category":"guides","authors":[{"name":"Thomas Darimont","github_id":"thomasdarimont"}],"summary":"In this blog post, you'll learn how to implement Single Sign-on with OpenID Connect and how to use Keycloak together with Eclipse Vert.x."},"date":"2020-03-16","slug":"easy-sso-for-vert-x-with-keycloak"},{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"}]},"__N_SSG":true}