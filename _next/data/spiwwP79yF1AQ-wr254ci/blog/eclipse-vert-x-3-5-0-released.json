{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Eclipse Vert.x 3.5.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The Vert.x team is pleased to announce the release of Eclipse Vert.x 3.5.0."},"date":"2017-10-20","slug":"eclipse-vert-x-3-5-0-released","readingTime":{"text":"6 min read","minutes":5.15,"time":309000,"words":1030},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      h2: \"h2\",\n      a: \"a\",\n      code: \"code\",\n      pre: \"pre\",\n      span: \"span\",\n      em: \"em\",\n      ul: \"ul\",\n      li: \"li\"\n    }, props.components), {Link, Alert} = _components;\n    if (!Alert) _missingMdxReference(\"Alert\", true);\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"The Vert.x team is pleased to an­nounce the re­lease of Eclipse Vert.x 3.5.0.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"As usual it de­liv­ers an im­pres­sive num­ber of high qual­ity fea­tures.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"lets-go-rxjava2\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#lets-go-rxjava2\"\n        }), \"Let’s go RxJava2\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"First and fore­most this re­lease de­liv­ers the Rx­Java2 API with sup­port of its full range of types.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"In ad­di­tion of \", _jsx(_components.code, {\n          children: \"Single\"\n        }), \", Rx­i­fied APIs also ex­pose the\", _jsx(_components.code, {\n          children: \"Completable\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"Maybe\"\n        }), \" types:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// expose Handler<AsyncResult<Void>>\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"Completable\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"completable\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" server.rxClose();\\n\\ncompletable.subscribe(() -> System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"closed\\\"\"\n          }), \"));\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// expose Handler<AsyncResult<String>> where the result can be null\"\n          }), \"\\nMaybe<String> ipAddress = dnsClient.rxLookup(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"www.google.com\\\"\"\n          }), \");\\nipAddress.subscribe(\\n  value -> System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"resolved to \\\"\"\n          }), \" + value),\\n  err -> err.printStackTrace(),\\n  () -> System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"does not resolve\\\"\"\n          }), \"));\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Rx­Java aug­ments Vert.x streams with a \", _jsx(_components.code, {\n          children: \"toObservable()\"\n        }), \" method, like­wise Rx­Java2 adds the \", _jsx(_components.code, {\n          children: \"toFlowable()\"\n        }), \" method:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Flowable<Buffer> maps to a ReadStream<Buffer>\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// back-pressured stream\"\n          }), \"\\nFlowable<Buffer> flowable = asyncFile.toFlowable();\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// but we still can get an Observable<Buffer>\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// non back-pressured stream\"\n          }), \"\\nObservable<Buffer> flowable = asyncFile.toObservable();\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"What’s so dif­fer­ent be­tween \", _jsx(_components.code, {\n          children: \"Flowable\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"Observable\"\n        }), \"? the for­mer han­dles back-​pressure, i.e the\\nsub­scriber can con­trol the flow of items and the later can not!!!\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can read the doc­u­men­ta­tion in the sec­tion of the \", _jsx(Link, {\n          href: \"/docs/vertx-rx/java2/\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"docs\"\n          })\n        }), \"\\nor go straight to the \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/vertx-examples/tree/master/rxjava2-examples\",\n          children: \"ex­am­ples\"\n        })]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"kotlin-coroutines\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#kotlin-coroutines\"\n        }), \"Kotlin coroutines\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Sup­port for \", _jsx(Link, {\n          href: \"/docs/vertx-lang-kotlin-coroutines/kotlin/\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"Kotlin Corou­tines\"\n          })\n        }), \" is one of my favourite 3.5 fea­tures (by the way I’ll present a talk about Vert.x\\nand corou­tines at \", _jsx(_components.a, {\n          href: \"https://www.kotlinconf.com/sessions/\",\n          children: \"Kotlin­Conf\"\n        }), \").\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Corou­tines al­lows you to rea­son about asyn­chro­nous flow the same way you do with tra­di­tional se­quen­tial flow with\\nthe extra bonus to use \", _jsx(_components.code, {\n          children: \"try\"\n        }), \"/\", _jsx(_components.code, {\n          children: \"catch\"\n        }), \"/\", _jsx(_components.code, {\n          children: \"finally\"\n        }), \" super combo:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-kotlin\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"val\"\n          }), \" movie = ctx.pathParam(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"id\\\"\"\n          }), \")\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"val\"\n          }), \" rating = Integer.parseInt(ctx.queryParam(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"getRating\\\"\"\n          }), \")[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"])\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"val\"\n          }), \" connection = awaitResult<SQLConnection> { client.getConnection(it) }\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"try\"\n          }), \" {\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"val\"\n          }), \" result = awaitResult<ResultSet> { connection.queryWithParams(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"SELECT TITLE FROM MOVIE WHERE ID=?\\\"\"\n          }), \", json { array(movie) }, it) }\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (result.rows.size == \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \") {\\n    awaitResult<UpdateResult> { connection.updateWithParams(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"INSERT INTO RATING (VALUE, MOVIE_ID) VALUES ?, ?\\\"\"\n          }), \", json { array(rating, movie) }, it) }\\n    ctx.response().setStatusCode(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"200\"\n          }), \").end()\\n  } \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" {\\n    ctx.response().setStatusCode(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"404\"\n          }), \").end()\\n  }\\n} \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"finally\"\n          }), \" {\\n  connection.close()\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"This ex­am­ple is bor­rowed from our \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/vertx-examples/tree/master/kotlin-examples/coroutines\",\n          children: \"ex­am­ples\"\n        }), \".\"]\n      }), \"\\n\", _jsx(Alert, {\n        info: true,\n        children: _jsxs(_components.p, {\n          children: [\"I’ve used \", _jsx(_components.code, {\n            children: \"try\"\n          }), \"/\", _jsx(_components.code, {\n            children: \"finally\"\n          }), \" pur­posely in­stead of Kotlin’s \", _jsx(_components.code, {\n            children: \"use\"\n          }), \" ex­ten­sion method\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"mqtt-client\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#mqtt-client\"\n        }), \"MQTT Client\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"In Vert.x 3.4 we added the \", _jsx(Link, {\n          href: \"/docs/vertx-mqtt/java/#_vert_x_mqtt_server\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"MQTT server\"\n          })\n        }), \", 3.5 com­pletes the\\nMQTT story with the \", _jsx(Link, {\n          href: \"/docs/vertx-mqtt/java/#_vert_x_mqtt_client\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"MQTT client\"\n          })\n        }), \":\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"MqttClient\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"mqttClient\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" MqttClient.create(vertx,\\n   \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"MqttClientOptions\"\n          }), \"()\\n     .setPort(BROKER_PORT)\\n     .setHost(BROKER_HOST)).connect(ar ->\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (ar.succeeded()) {\\n    System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Connected to a server\\\"\"\n          }), \");\\n\\n    mqttClient.publish(\\n      MQTT_TOPIC,\\n      Buffer.buffer(MQTT_MESSAGE),\\n      MqttQoS.AT_MOST_ONCE,\\n      \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \",\\n      \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \",\\n      s -> mqttClient.disconnect(d -> System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Disconnected from server\\\"\"\n          }), \")));\\n  } \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" {\\n    System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Failed to connect to a server\\\"\"\n          }), \");\\n    ar.cause().printStackTrace();\\n  }\\n});\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can find MQTT client and server ex­am­ples \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/vertx-examples/tree/master/mqtt-examples\",\n          children: \"here\"\n        })]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"web-api-contracts\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#web-api-contracts\"\n        }), \"Web API contracts\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"With the new \", _jsx(Link, {\n          href: \"/docs/vertx-web-api-contract/java/\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"Ope­nAPI\"\n          })\n        }), \" router fac­tory we can focus on the API im­ple­men­ta­tion and not on the val­i­da­tion\\nof the input. The usage is quite sim­ple:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"OpenAPI3RouterFactory.createRouterFactoryFromFile(vertx, \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"petstore.yaml\\\"\"\n          }), \", ar -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (ar.succeeded()) {\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Spec loaded with success\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"OpenAPI3RouterFactory\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"routerFactory\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" ar.result();\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// add your API and security handlers to the factory\"\n          }), \"\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// add it to a server\"\n          }), \"\\n    vertx.createHttpServer()\\n      .requestHandler(routerFactory.getRouter()::accept)\\n      .listen();\\n  } \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Something went wrong during router factory initialization\"\n          }), \"\\n  }\\n});\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Now as a de­vel­oper you only need to care about the API and not on the val­i­da­tion. The Ope­nAPI router will en­sure that a\\nre­quest to an API will first to the con­tract be­fore your han­dler is in­voked.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"java-9-support\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#java-9-support\"\n        }), \"Java 9 support\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Java 9 was re­leased a few days ago and the Vert.x stack has been care­fully tested on Java 9 and most of our com­po­nents\\nrun on Java 9 (Groovy does not run well on Java 9, please see the sup­port \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/wiki/wiki/Java-9-Support\",\n          children: \"ma­trix\"\n        }), \")\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"As a bonus you can now use HTTP/2 out of the box with JDK SSL!\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You can also use Vert.x jars as anony­mous mod­ules.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"event-driven-json-parsing\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#event-driven-json-parsing\"\n        }), \"Event driven JSON Parsing\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"We pro­vide now an event dri­ven \", _jsx(Link, {\n          href: \"/docs/apidocs/io/vertx/core/parsetools/JsonParser.html\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"JSON Parser\"\n          })\n        }), \" emit­ting parse events that is very handy when you need to han­dle very large\\nJSON struc­tures and you don’t want to buffer it which in­tro­duce extra la­tency and in­crease the mem­ory con­sump­tion.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The parser al­lows you to switch be­tween fine grained JSON parse events or full struc­tures, for in­stance\\nyou can parse an array of ob­ject very ef­fi­ciently:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"JsonParser\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"parser\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" JsonParser.newParser();\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// The parser will handle JSON objects as values\"\n          }), \"\\nparser.objectValueMode();\\n\\nparser.handler(event -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"switch\"\n          }), \" (event.type()) {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"case\"\n          }), \" START_ARRAY:\\n      \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Start the array\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"break\"\n          }), \";\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"case\"\n          }), \" END_ARRAY:\\n      \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// End the array\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"break\"\n          }), \";\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"case\"\n          }), \" VALUE:\\n      \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Handle each object\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"break\"\n          }), \";\\n  }\\n});\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"single-sql-operations\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#single-sql-operations\"\n        }), \"Single SQL operations\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Sin­gle SQL op­er­a­tions (aka \", _jsx(_components.em, {\n          children: \"one-​shot\"\n        }), \") have been dras­ti­cally sim­pli­fied: most of the \", _jsx(_components.code, {\n          children: \"SQLOperations\"\n        }), \" op­er­a­tions can now be\\nper­formed di­rectly on the \", _jsx(_components.code, {\n          children: \"SQLClient\"\n        }), \":\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"client.queryWithParams(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"SELECT AVG(VALUE) AS VALUE FROM RATING WHERE MOVIE_ID=?\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"JsonArray\"\n          }), \"().add(id), ar2 -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (ar.succeeded()) {\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"value\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" ar.result().get(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \").getInteger(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"VALUE\\\"\"\n          }), \");\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Continue\"\n          }), \"\\n  }\\n});\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Under the hood, the client takes care of the pool ac­quire/re­lease in­ter­ac­tion for you.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"native-transport-and-domain-sockets\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#native-transport-and-domain-sockets\"\n        }), \"Native transport and domain sockets\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"We now sup­port \", _jsx(Link, {\n          href: \"/docs/vertx-core/java/#_native_transports\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"na­tive trans­ports\"\n          })\n        }), \" on Linux (Epoll) and MacOS (KQueue), as well as \", _jsx(Link, {\n          href: \"/docs/vertx-core/java/#_domain_sockets\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"UNIX do­main sock­ets\"\n          })\n        }), \" for\\n\", _jsx(_components.code, {\n          children: \"NetServer/NetClient\"\n        }), \" (\", _jsx(_components.code, {\n          children: \"HttpServer\"\n        }), \"/\", _jsx(_components.code, {\n          children: \"HttpClient\"\n        }), \" should sup­port UNIX do­main sock­ets soon).\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"auth-handler-chaining\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#auth-handler-chaining\"\n        }), \"Auth handler chaining\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"There are times when you want to sup­port mul­ti­ple authN/authZ mech­a­nisms in a sin­gle ap­pli­ca­tion.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Vert.x Web sup­ports auth han­dlers \", _jsx(Link, {\n          href: \"/docs/vertx-web/java/#_chaining_multiple_auth_handlers\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"chain­ing\"\n          })\n        })]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"vertx-config-improvements\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#vertx-config-improvements\"\n        }), \"Vert.x config improvements\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Vert.x Con­fig al­lows con­fig­ur­ing your ap­pli­ca­tion by as­sem­bling con­fig chunks from dif­fer­ent lo­ca­tions such as file,\\nhttp, zookeeper…\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In this ver­sion, we have added the sup­port for Con­sul and Vault.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"With the \", _jsx(Link, {\n          href: \"/docs/vertx-config/java/#_consul_configuration_store\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"Con­sul con­fig store\"\n          })\n        }), \", you can re­trieve your con­fig­u­ra­tion from a Con­sul server - so in other words, dis­trib­ute\\nthe con­fig­u­ra­tion from your or­ches­tra­tion in­fra­struc­ture.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The \", _jsx(Link, {\n          href: \"/docs/vertx-config/java/#_vault_config_store\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"Vault con­fig store\"\n          })\n        }), \" lets you re­trieve se­crets avoid­ing hard cod­ing se­crets or dis­trib­ut­ing cre­den­tials using an\\nin­se­cure way. Vault en­forces the se­cu­rity of your se­crets and only al­lowed ap­pli­ca­tions can re­trieve them. In other\\nwords, now you can keep your se­crets se­cret.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"acks\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#acks\"\n        }), \"ACKs\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"I want on be­half of the team to thank all the con­trib­u­tors for this re­lease in­clud­ing the Google Sum­mer of Code stu­dents\\n(\", _jsx(_components.a, {\n          href: \"https://twitter.com/titantins\",\n          children: \"Pavel Drankov\"\n        }), \", \", _jsx(_components.a, {\n          href: \"https://twitter.com/slinkyguardiani\",\n          children: \"Francesco Guardiani\"\n        }), \" and \", _jsx(_components.a, {\n          href: \"https://yunyul.in\",\n          children: \"Yunyu Lin\"\n        }), \")\\nthat de­liv­ered an im­pres­sive work.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"finally\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#finally\"\n        }), \"Finally\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The re­lease notes\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/vert-x3/wiki/wiki/3.5.0-Release-Notes\",\n            children: \"https://github.com/vert-​x3/wiki/wiki/3.5.0-​Release-Notes\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Docker im­ages are also avail­able on the \", _jsx(_components.a, {\n          href: \"https://hub.docker.com/u/vertx/\",\n          children: \"Docker Hub\"\n        }), \". The Vert.x dis­tri­b­u­tion is also avail­able\\nfrom \", _jsx(_components.a, {\n          href: \"http://sdkman.io/index.html\",\n          children: \"SD­KMan\"\n        }), \" and \", _jsx(_components.a, {\n          href: \"http://brew.sh/\",\n          children: \"Home­Brew\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The event bus client using the SockJS bridge are avail­able from NPM, Bower and as a We­b­Jar:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://www.npmjs.com/package/vertx3-eventbus-client\",\n            children: \"https://www.npmjs.com/pack­age/vertx3-​eventbus-client\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/vert-x3/vertx-bus-bower\",\n            children: \"https://github.com/vert-​x3/vertx-​bus-bower\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"http://www.webjars.org/\",\n            children: \"http://www.we­b­jars.org/\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The ar­ti­facts have been de­ployed to \", _jsx(_components.a, {\n          href: \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.5.0%22\",\n          children: \"Maven Cen­tral\"\n        }), \" and you can get the dis­tri­b­u­tion on \", _jsx(_components.a, {\n          href: \"https://bintray.com/vertx/downloads/distribution/3.5.0/view\",\n          children: \"Bin­tray\"\n        }), \".\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Eclipse Vert.x meets GraphQL","category":"guides","authors":[{"name":"Johannes Schüth","github_id":"jotschi"}],"summary":"In this blog post, we will look at an example application written in Vert.x that uses the new GraphQL API of Gentics Mesh."},"date":"2017-11-14","slug":"eclipse-vert-x-meets-graphql"},"nextPost":{"meta":{"title":"An Eclipse Vert.x Gradle Plugin","category":"news","authors":[{"name":"Julien Ponge","github_id":"jponge"}],"summary":"The new Vert.x Gradle plugin offers an opinionated plugin for building Vert.x applications with Gradle."},"date":"2017-09-28","slug":"an-eclipse-vert-x-gradle-plugin"},"relatedPosts":[{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"},{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"}]},"__N_SSG":true}