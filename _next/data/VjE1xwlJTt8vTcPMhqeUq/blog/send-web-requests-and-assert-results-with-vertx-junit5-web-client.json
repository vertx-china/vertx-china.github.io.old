{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Send web requests and assert results with vertx-junit5-web-client","category":"guides","authors":[{"name":"Francesco Guardiani","github_id":"slinkydeveloper"}],"summary":"In this blog post, you'll learn how to use the new vertx-junit5-web-client module to send web requests in your unit tests and to make assertions."},"date":"2019-10-22","slug":"send-web-requests-and-assert-results-with-vertx-junit5-web-client","readingTime":{"text":"2 min read","minutes":1.3,"time":78000,"words":260},"content":{"compiledSource":"var i=Object.defineProperty,d=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var o=(a,s,n)=>s in a?i(a,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[s]=n,e=(a,s)=>{for(var n in s||(s={}))r.call(s,n)&&o(a,n,s[n]);if(p)for(var n of p(s))l.call(s,n)&&o(a,n,s[n]);return a},c=(a,s)=>d(a,N(s));var m=(a,s)=>{var n={};for(var t in a)r.call(a,t)&&s.indexOf(t)<0&&(n[t]=a[t]);if(a!=null&&p)for(var t of p(a))s.indexOf(t)<0&&l.call(a,t)&&(n[t]=a[t]);return n};const makeShortcode=a=>function(n){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},n))},Link=makeShortcode(\"Link\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var t=n,{components:a}=t,s=m(t,[\"components\"]);return mdx(MDXLayout,c(e(e({},layoutProps),s),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"In the last Vert.x 3.8 re\\xADlease, we added a new mod\\xADule called \",mdx(\"inlineCode\",{parentName:\"p\"},\"vertx-junit5-web-client\"),\", that brings \",mdx(Link,{href:\"/docs/vertx-web-client/java/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"Vert.x Web Client\")),` in\\xADjec\\xADtion\ninto tests and pro\\xADvides an API called `,mdx(\"inlineCode\",{parentName:\"p\"},\"TestRequest\"),\" to sim\\xADplify the cre\\xADation and as\\xADser\\xADtions on \",mdx(\"inlineCode\",{parentName:\"p\"},\"WebClient\"),\" re\\xADquests:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"static\"),` io.vertx.junit5.web.TestRequest.*;\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-meta\"}),`@ExtendWith({\n  VertxExtension.class, // VertxExtension MUST be configured before VertxWebClientExtension\n  VertxWebClientExtension.class\n})`),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-class\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"class\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"TestRequestExample\"),\" \"),`{\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-meta\"}),\"@Test\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"test1\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(WebClient client, VertxTestContext testContext)\"),\" \"),`{\n    testRequest(client, HttpMethod.GET, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/hello\"'),\") \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Build the request\"),`\n      .with(\n        queryParam(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"name\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"francesco\"'),\"), \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Add query param\"),`\n        requestHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"x-my\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"foo\"'),\") \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Add request header\"),`\n      )\n      .expect(\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Assert that response is a JSON with a specific body\"),`\n        jsonBodyResponse(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" JsonObject().put(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"value\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Hello Francesco!\"'),`)),\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Assert that response contains a particular header\"),`\n        responseHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"x-my\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"bar\"'),`)\n      )\n      .send(testContext); `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Complete (or fail) the VertxTestContext\"),`\n  }\n\n}\n`)),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"testRequest()\"),\" will use Vert.x Web Client to send the re\\xADquest. When the re\\xADsponse is re\\xADceived, It suc\\xADceds the test or it cor\\xADrectly prop\\xADa\\xADgates as\\xADser\\xADtion fail\\xADures, if any.\"),mdx(\"p\",null,\"You can also send mul\\xADti\\xADple re\\xADquests using \",mdx(Link,{href:\"/docs/apidocs/io/vertx/junit5/Checkpoint.html\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"Checkpoint\"))),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"static\"),` io.vertx.junit5.web.TestRequest.*;\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-meta\"}),`@ExtendWith({\n  VertxExtension.class, // VertxExtension MUST be configured before VertxWebClientExtension\n  VertxWebClientExtension.class\n})`),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-class\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"class\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"MultiTestRequestExample\"),\" \"),`{\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-meta\"}),\"@Test\"),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"test2\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(WebClient client, VertxTestContext testContext)\"),\" \"),`{\n    Checkpoint checkpoint = testContext.checkpoint(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"2\"),\"); \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Create the Checkpoint to flag when request succeds\"),`\n\n    testRequest(\n        client    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Create the test request using WebClient APIs\"),`\n          .get(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/hello\"'),`)\n          .addQueryParam(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"name\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"francesco\"'),`)\n          .putHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"x-my\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"foo\"'),`)\n      )\n      .expect(\n        jsonBodyResponse(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" JsonObject().put(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"value\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Hello Francesco!\"'),`)),\n        responseHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"x-my\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"bar\"'),`)\n      )\n      .send(testContext, checkpoint); `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Pass the checkpoint to flag\"),`\n\n    testRequest(\n        client\n          .get(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/hello\"'),`)\n          .addQueryParam(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"name\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"julien\"'),`)\n          .putHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"x-my\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"foo\"'),`)\n      )\n      .expect(\n        jsonBodyResponse(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" JsonObject().put(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"value\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Hello Julien!\"'),`)),\n        responseHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"x-my\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"bar\"'),`)\n      )\n      .send(testContext, checkpoint);\n  }\n\n}\n`)),mdx(\"p\",null,\"Look at \",mdx(Link,{href:\"/docs/vertx-junit5-web-client/java/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"Vert.x JUnit 5 Web Client doc\\xADu\\xADmen\\xADta\\xADtion\")),\" for more de\\xADtails\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.8.4","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"This version is a bug fix release of Vert.x 3.8.3, which addresses quite a few bugs reported by the community."},"date":"2019-11-28","slug":"eclipse-vert-x-3-8-4"},"nextPost":{"meta":{"title":"Eclipse Vert.x 3.8.3","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"This new version is a minor bug fix release that addresses issues reported in Eclipse Vert.x 3.8.2. We would like to thank you all for reporting these bugs."},"date":"2019-10-18","slug":"eclipse-vert-x-3-8-3"},"relatedPosts":[{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Building services and APIs with AMQP 1.0","category":"guides","authors":[{"name":"Jakub Scholz","github_id":"scholzj"}],"summary":"Microservices and APIs are everywhere. Everyone talks about them, presentation slides are full of them ... some people are actually even building them."},"date":"2017-01-25","slug":"building-services-and-apis-with-amqp-1-0"}]},"__N_SSG":true}