{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Intro to Vert.x Shell","category":"guides","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"Vert.x Shell provides an extensible command line for Vert.x, accessible via SSH, Telnet or a nice Web interface. Vert.x Shell comes out of the box with plenty of commands."},"date":"2016-01-25","slug":"intro-to-vert-x-shell","readingTime":{"text":"4 min read","minutes":3.1,"time":186000,"words":620},"content":{"compiledSource":"var i=Object.defineProperty,h=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var l=(a,s,n)=>s in a?i(a,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[s]=n,e=(a,s)=>{for(var n in s||(s={}))p.call(s,n)&&l(a,n,s[n]);if(r)for(var n of r(s))o.call(s,n)&&l(a,n,s[n]);return a},c=(a,s)=>h(a,d(s));var m=(a,s)=>{var n={};for(var t in a)p.call(a,t)&&s.indexOf(t)<0&&(n[t]=a[t]);if(a!=null&&r)for(var t of r(a))s.indexOf(t)<0&&o.call(a,t)&&(n[t]=a[t]);return n};const makeShortcode=a=>function(n){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},n))},Link=makeShortcode(\"Link\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var t=n,{components:a}=t,s=m(t,[\"components\"]);return mdx(MDXLayout,c(e(e({},layoutProps),s),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Vert.x Shell pro\\xADvides an ex\\xADten\\xADsi\\xADble com\\xADmand line for Vert.x, ac\\xADces\\xADsi\\xADble via SSH, Tel\\xADnet or a nice Web in\\xADter\\xADface. Vert.x Shell comes out of the box with plenty of com\\xADmands for Vert.x which makes it very handy for doing sim\\xADple man\\xADage\\xADment op\\xADer\\xADa\\xADtions like de\\xADploy\\xADing a Ver\\xADti\\xADcle or get\\xADting the list of de\\xADployed Ver\\xADti\\xADcles. One power fea\\xADture of Vert.x Shell is its ex\\xADten\\xADsi\\xADbil\\xADity: one can eas\\xADily aug\\xADment Vert.x Shell with its own com\\xADmands. Let\\u2019s build an \",mdx(\"em\",{parentName:\"p\"},\"http-\\u200Bclient\"),\" in JavaScript!\"),mdx(\"h2\",e({},{id:\"booting-the-shell\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#booting-the-shell\"})),\"Booting the Shell\"),mdx(\"p\",null,\"Vert.x Shell can be started in a cou\\xADple of lines de\\xADpend\\xADing on the con\\xADnec\\xADtors you con\\xADfig\\xADure. The doc\\xADu\\xADmen\\xADta\\xADtion pro\\xADvides sev\\xADeral ex\\xADam\\xADples show\\xADing the \",mdx(Link,{href:\"/docs/vertx-shell/js/#_programmatic_service\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"Shell Ser\\xADvice con\\xADfig\\xADu\\xADra\\xADtion\")),\". For test\\xADing our com\\xADmand, we will use the Tel\\xADnet pro\\xADto\\xADcol be\\xADcause it is easy to con\\xADfig\\xADure and use, so we just need to copy the cor\\xADre\\xADspond\\xADing sec\\xADtion in \",mdx(\"em\",{parentName:\"p\"},\"vertx-\\u200Bhttp-client.js\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),\" ShellService = \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-built_in\"}),\"require\"),\"(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"vertx-shell-js/shell_service\"'),`);\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),` service = ShellService.create(vertx, {\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"telnetOptions\"'),` : {\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"host\"'),\" : \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"localhost\"'),`,\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"port\"'),\" : \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"4000\"),`\n  }\n});\nservice.start();\n`)),mdx(\"p\",null,\"We can run it:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-text\"}),`Juliens-MacBook-Pro:java julien$ vertx run vertx-http-client.js\nSucceeded in deploying verticle\n`)),mdx(\"p\",null,\"And con\\xADnect to the shell:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-text\"}),`Juliens-MacBook-Pro:~ julien$ telnet localhost 4000\nTrying ::1...\ntelnet: connect to address ::1: Connection refused\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\n__      __ ______  _____  _______  __   __\n\\\\ \\\\    / /|  ____||  _  \\\\|__   __| \\\\ \\\\ / /\n \\\\ \\\\  / / | |____ | :_) |   | |     \\\\   /\n  \\\\ \\\\/ /  |  ____||   __/   | |      > /\n   \\\\  /   | |____ | |\\\\ \\\\    | |     / //\\\\\n    \\\\/    |______||_| \\\\_\\\\   |_| o  /_/ \\\\_\\\\\n\n\n%\n`)),mdx(\"p\",null,\"You can now al\\xADready use the shell, the \",mdx(\"em\",{parentName:\"p\"},\"help\"),\" com\\xADmand lists the avail\\xADable com\\xADmands.\"),mdx(\"h2\",e({},{id:\"creating-a-command\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#creating-a-command\"})),\"Creating a command\"),mdx(\"p\",null,\"For the sake of sim\\xADplic\\xADity we will write a sin\\xADgle script that starts the Shell ser\\xADvice and de\\xADploys our com\\xADmand. In the real world you would prob\\xADa\\xADbly have the com\\xADmand in one file and the de\\xADploy\\xADment in an\\xADother.\"),mdx(\"p\",null,\"The \",mdx(Link,{href:\"/docs/vertx-shell/js/#_extending_vert_x_shell\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"doc\\xADu\\xADmen\\xADta\\xADtion\")),\" ex\\xADplains how to add a new com\\xADmand to Vert.x shell, we can just copy this sec\\xADtion and ap\\xADpend it to the \",mdx(\"em\",{parentName:\"p\"},\"vertx-\\u200Bhttp-client.js\"),\" script:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),\" CommandBuilder = \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-built_in\"}),\"require\"),\"(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"vertx-shell-js/command_builder\"'),`);\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),\" CommandRegistry = \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-built_in\"}),\"require\"),\"(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"vertx-shell-js/command_registry\"'),`);\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),\" builder = CommandBuilder.command(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"http-client\"'),`);\nbuilder.processHandler(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"function\"),\" (\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"process\"),\") \"),`{\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Write a message to the console\"),`\n  process.write(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Implement the client\\\\n\"'),`);\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// End the process\"),`\n  process.end();\n});\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Register the command\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),` registry = CommandRegistry.getShared(vertx);\nregistry.registerCommand(builder.build(vertx));\n`)),mdx(\"p\",null,\"Now you can use the com\\xADmand just to see it in ac\\xADtion:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),`% http-client\nImplement the client\n%\n`)),mdx(\"h2\",e({},{id:\"checking-arguments\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#checking-arguments\"})),\"Checking arguments\"),mdx(\"p\",null,\"The \",mdx(\"em\",{parentName:\"p\"},\"http-\\u200Bclient\"),\" re\\xADquires an \",mdx(\"inlineCode\",{parentName:\"p\"},\"url\"),\" ar\\xADgu\\xADment, an ar\\xADgu\\xADment check is per\\xADformed at the be\\xADgin\\xADning of the process han\\xADdler:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Check the url argument\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),\" (process.args().length < \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"1\"),`) {\n  process.write(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Missing URL\\\\n\"'),`).end();\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),`;\n}\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),\" url = process.args()[\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"0\"),`];\n`)),mdx(\"h2\",e({},{id:\"implementing-the-command\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#implementing-the-command\"})),\"Implementing the command\"),mdx(\"p\",null,\"The final step of this tu\\xADto\\xADr\\xADial is the ac\\xADtual im\\xADple\\xADmen\\xADta\\xADtion of the client logic based on Vert.x Http\\xADClient:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Create the client request\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),\" request = client.getAbs(url, \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"function\"),\"(\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"response\"),\") \"),`{\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Print the response in the shell console\"),`\n  response.handler(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"function\"),\"(\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"buffer\"),\") \"),`{\n    process.write(buffer.toString(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"UTF-8\"'),`));\n  });\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// End the command when the response ends\"),`\n  response.endHandler(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"function\"),\"(\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"})),\") \"),`{\n    process.end();\n  });\n});\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Set a request handler to end the command with error\"),`\nrequest.exceptionHandler(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"function\"),\"(\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"err\"),\") \"),`{\n  process.write(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Error: \"'),` + err.getMessage());\n  process.end();\n});\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// End the http request\"),`\nrequest.end();\n`)),mdx(\"p\",null,\"And we can test the com\\xADmand in the shell:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),`% http-client http://vertx.io\nhttp-client http://vertx.io\n<!DOCTYPE html><html lang=en><head><title>Vert.x</title>...\n...\n/javascripts/sticky_header.js><\\/script></body></html>%\n`)),mdx(\"h2\",e({},{id:\"finally\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#finally\"})),\"Finally\"),mdx(\"p\",null,\"We have seen how easy it is to ex\\xADtend Vert.x with a shell and cre\\xADate an \",mdx(\"em\",{parentName:\"p\"},\"http-\\u200Bclient\"),\" cus\\xADtom com\\xADmand, you can get the full source code \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://gist.github.com/vietj/51ff223bfb7cfcbc97ce\"}),\"here\"),\".\"),mdx(\"p\",null,\"Our com\\xADmand is very sim\\xADple, it only im\\xADple\\xADments the very min\\xADi\\xADmum, in fu\\xADture posts we will im\\xADprove the com\\xADmand with sup\\xADport with more HTTP meth\\xADods, SSL sup\\xADport or header sup\\xADport with the the Vert.x CLI API.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"prevPost":{"meta":{"title":"Vert.x 3.2.1 is released!","category":"releases","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"We are pleased to announce the release of Vert.x 3.2.1!"},"date":"2016-02-05","slug":"vert-x-3-2-1-is-released"},"nextPost":{"meta":{"title":"Using Hamcrest Matchers with Vert.x Unit","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Vert.x Unit is a very elegant library to test asynchronous applications developed with vert.x. However because of this asynchronous aspect, reporting test failures is not natural for JUnit users."},"date":"2016-01-18","slug":"using-hamcrest-matchers-with-vert-x-unit"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Building services and APIs with AMQP 1.0","category":"guides","authors":[{"name":"Jakub Scholz","github_id":"scholzj"}],"summary":"Microservices and APIs are everywhere. Everyone talks about them, presentation slides are full of them ... some people are actually even building them."},"date":"2017-01-25","slug":"building-services-and-apis-with-amqp-1-0"},{"meta":{"title":"Combine vert.x and mongo to build a giant","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This blog post is part of the introduction to Vert.x series. We are now going to replace this JDBC client by the vertx-mongo-client, and thus connect to a Mongo database."},"date":"2015-11-30","slug":"combine-vert-x-and-mongo-to-build-a-giant"}]},"__N_SSG":true}