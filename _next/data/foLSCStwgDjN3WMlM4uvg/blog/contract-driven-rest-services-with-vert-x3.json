{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Contract Driven REST Services with Vert.x3","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"We see a new trend in development where we are shifting from developing applications to APIs. More and more we see services being offered as REST APIs that we are allowed to consume."},"date":"2015-09-17","slug":"contract-driven-rest-services-with-vert-x3","readingTime":{"text":"8 min read","minutes":7.185,"time":431099.99999999994,"words":1437},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We see a new trend in de\\xADvel\\xADop\\xADment where we are shift\\xADing from de\\xADvel\\xADop\\xADing ap\\xADpli\\xADca\\xADtions to de\\xADvelop APIs. More and more we see ser\\xADvices being of\\xADfered as REST APIs that we are al\\xADlowed to con\\xADsume and we al\\xADready see this trend from the big names in the in\\xADdus\\xADtry, e.g.: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developers.facebook.com/\"\n  }), \"Face\\xADbook\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.mediawiki.org/wiki/API:Main_page\"\n  }), \"Wikipedia\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.amazon.com/public/apis\"\n  }), \"Ama\\xADzon\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://dev.twitter.com/overview/documentation\"\n  }), \"Twit\\xADter\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developers.google.com/apis-explorer/#p/\"\n  }), \"Google\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.reddit.com/dev/api\"\n  }), \"Red\\xADdit\"), \" they all offer APIs.\"), mdx(\"p\", null, \"Of course mak\\xADing an REST API using Vert.x is quite sim\\xADple, just use \", mdx(Link, {\n    href: \"/docs/#web\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x Web\")), \" and you can start writ\\xADing your API in sec\\xADonds, how\\xADever an API with\\xADout doc\\xADu\\xADmen\\xADta\\xADtion is not an API since no de\\xADvel\\xADoper will know how to use it. How\\xADever this is one of the most sen\\xADsi\\xADtive is\\xADsues to tackle in soft\\xADware de\\xADvel\\xADop\\xADment, no\\xADbody likes to write doc\\xADu\\xADmen\\xADta\\xADtion. How\\xADever, in the REST age where REST-\\u200Bbased web-\\u200Bservices are ubiq\\xADui\\xADtous, doc\\xADu\\xADmen\\xADta\\xADtion for pub\\xADlic web-\\u200Bservices is a ne\\xADces\\xADsity. There are a lot of tools out there, two of the most pop\\xADu\\xADlar are with\\xADout a doubt:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://swagger.io\"\n  }), \"Swag\\xADger\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://raml.org\"\n  }), \"RAML\"))), mdx(\"p\", null, \"Both frame\\xADworks have a large ecosys\\xADtem of tools and tool\\xADing around but they tackle the doc\\xADu\\xADmen\\xADta\\xADtion from two dif\\xADfer\\xADent per\\xADspec\\xADtives. While Swag\\xADger is purely a doc\\xADu\\xADmen\\xADta\\xADtion tool it tack\\xADles the prob\\xADlem from bot\\xADtom up and RAML does doc\\xADu\\xADment top down. They both rely on a doc\\xADu\\xADment (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JSON\"), \" for Swag\\xADger, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"YAML\"), \" for RAML).\"), mdx(\"p\", null, \"I\\u2019ll now go over build\\xADing a sim\\xADple Hello World API, doc\\xADu\\xADment it and test it. For this ex\\xADam\\xADple I\\u2019ll choose RAML since it feels more nat\\xADural to the way we code with Vert.x Web.\"), mdx(\"h2\", {\n    \"id\": \"define-the-hello-world-api\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#define-the-hello-world-api\"\n  })), \"Define the Hello World API\"), mdx(\"p\", null, \"We need a con\\xADtract and as with any other de\\xADvel\\xADop\\xADment we need some spec\\xADi\\xADfi\\xADca\\xADtion, You can learn about RAML in its \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://raml.org\"\n  }), \"web\\xADsite\"), \" and quickly see how easy it is to get started. So we start with the fol\\xADlow\\xADing spec\\xADi\\xADfi\\xADca\\xADtion:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-yaml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"#%RAML 0.8\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"title:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"Hello\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"world\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"REST\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"API\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"baseUri:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"http://localhost:8080/\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"version:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"v1\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"/hello:\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"get:\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"responses:\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"200:\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"body:\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"application/json:\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"schema:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"|\\n              { \\\"$schema\\\": \\\"http://json-schema.org/schema\\\",\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"description\\\": \\\"Hello World Greeting\\\",\\n                \\\"properties\\\": {\\n                  \\\"greeting\\\":  { \\\"type\\\": \\\"string\\\" }\\n                },\\n                \\\"required\\\": [ \\\"greeting\\\" ]\\n              }\\n\"))), mdx(\"p\", null, \"So if you didn\\u2019t un\\xADder\\xADstood why I named RAML as a top down doc\\xADu\\xADmen\\xADta\\xADtion tool, I think it be\\xADcomes clear now. So there are some basic de\\xADf\\xADi\\xADn\\xADi\\xADtion on the top of the file like, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"title\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"baseUri\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"version\"), \" which should be self ex\\xADplana\\xADtory.\"), mdx(\"p\", null, \"And then we start with the API doc\\xADu\\xADmen\\xADta\\xADtion, so we spec\\xADify that at the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"URL\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/hello\"), \" using the HTTP verb \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET\"), \" you are ex\\xADpected to get a re\\xADsponse with sta\\xADtus code \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"200\"), \" and the body of the re\\xADsponse should have con\\xADtent type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"application/json\"), \". This is a very min\\xADi\\xADmal doc\\xADu\\xADment, one could go over and spec\\xADify the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://json-schema.org/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"json schema\")), \" for the re\\xADsponse, input val\\xADues, etc\\u2026, how\\xADever lets just keep it sim\\xADple for this ex\\xADam\\xADple.\"), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"If you do not like to write yaml in your ed\\xADi\\xADtor you can al\\xADways use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://raml.org/projects.html\"\n  }), \"API De\\xADsigner\"), \" which gives you in\\xADstant feed\\xADback on your API doc\\xADu\\xADment and pro\\xADvides a test\\xADing plat\\xADform.\")), mdx(\"h2\", {\n    \"id\": \"implement-the-api\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#implement-the-api\"\n  })), \"Implement the API\"), mdx(\"p\", null, \"So you got your con\\xADtract, time to im\\xADple\\xADment it, this is a very sim\\xADple API so I\\u2019ll jump to the code im\\xADme\\xADdi\\xADately:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"App\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"extends\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"AbstractVerticle\"), \" \"), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Override\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"start\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n    Router router = Router.router(vertx);\\n\\n    router.get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/hello\\\"\"), \").handler(rc -> {\\n      rc.response()\\n          .putHeader(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"content-type\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"application/json\\\"\"), \")\\n          .end(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject().put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"greeting\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Hello World!\\\"\"), \").encode());\\n    });\\n\\n    vertx.createHttpServer().requestHandler(router::accept).listen(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8080\"), \");\\n  }\\n}\\n\")), mdx(\"p\", null, \"As you can see the code re\\xADsem\\xADbles the con\\xADtract doc\\xADu\\xADment, when there is a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET\"), \" re\\xADquest to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/hello\"), \" we send to the client a empty \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JSON\"), \" doc\\xADu\\xADment \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{}\"), \".\"), mdx(\"h2\", {\n    \"id\": \"are-we-done\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#are-we-done\"\n  })), \"Are we done?\"), mdx(\"p\", null, \"The an\\xADswer is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NO!!!\"), \" how can we be sure that our im\\xADple\\xADmen\\xADta\\xADtion does com\\xADply to the con\\xADtract? We need to test. As I wrote be\\xADfore there is no spe\\xADcific sup\\xADport for Vert.x from RAML or other tools how\\xADever in this case it is not a prob\\xADlem we can still test our code with\\xADout hav\\xADing the need to im\\xADple\\xADment a test frame\\xADwork from the ground up.\"), mdx(\"h2\", {\n    \"id\": \"testing-our-contract\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#testing-our-contract\"\n  })), \"Testing our contract\"), mdx(\"p\", null, \"The ini\\xADtial step is to setup a test, this should be triv\\xADial we are using Java (al\\xADthough we could test any of Vert.x\\nsup\\xADported lan\\xADguages using the same tech\\xADnique). We cre\\xADate a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://junit.org/\"\n  }), \"JUnit\"), \" unit test.\"), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"For this ex\\xADam\\xADple, I will be using JUnit in\\xADstead of Vert.x Test mostly to let you know that Vert.x isn\\u2019t an opin\\xADion\\xADated frame\\xADwork, so you are free to choose the tool that best fits you.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"APITest\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@BeforeClass\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"bootApp\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n    Runner.run(App.class);\\n  }\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Test\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"testHelloEndpoint\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n  }\\n}\\n\")), mdx(\"p\", null, \"So at this mo\\xADment you have a sim\\xADple test, I\\u2019ll share the code of the run\\xADner class (ba\\xADsi\\xADcally it just in\\xADstan\\xADti\\xADates a\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Vertx\"), \" in\\xADstance and load the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"verticle\"), \" we just im\\xADple\\xADmented above) and has a empty test \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"testHelloEndpoint\"), \".\"), mdx(\"h3\", {\n    \"id\": \"load-the-api-definition-into-the-test\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#load-the-api-definition-into-the-test\"\n  })), \"Load the API definition into the test\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"APITest\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"final\"), \" RamlDefinition api = RamlLoaders.fromClasspath()\\n        .load(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/api/hello.raml\\\"\"), \")\\n        .assumingBaseUri(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"http://localhost:8080/\\\"\"), \");\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" CheckingWebTarget checking;\\n\\n  ...\\n}\\n\")), mdx(\"p\", null, \"So the first step is to load the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"API\"), \" de\\xADf\\xADi\\xADn\\xADi\\xADtion into our test and have a ref\\xADer\\xADence to a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CheckingWebTarget\"), \" ob\\xADject. The check\\xADing ob\\xADject is where you can per\\xADform as\\xADser\\xADtions, but to do this we need some client make REST calls in order to test.\"), mdx(\"h3\", {\n    \"id\": \"create-a-rest-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#create-a-rest-client\"\n  })), \"Create a REST client\"), mdx(\"p\", null, \"There are many op\\xADtions for this, you could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JAX-RS\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RestAssured\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RestEasy\"), \", etc\\u2026 so I\\u2019ll pick \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RestEasy\"), \" for now:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"APITest\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"final\"), \" RamlDefinition api = RamlLoaders.fromClasspath()\\n      .load(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/api/hello.raml\\\"\"), \")\\n      .assumingBaseUri(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"http://localhost:8080/\\\"\"), \");\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" ResteasyClient client = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" ResteasyClientBuilder().build();\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" CheckingWebTarget checking;\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@BeforeClass\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"bootApp\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n    Runner.run(App.class);\\n  }\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Before\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"createTarget\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n    checking = api.createWebTarget(client.target(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"http://localhost:8080\\\"\"), \"));\\n  }\\n\\n  ...\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"implement-the-test\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#implement-the-test\"\n  })), \"Implement the test\"), mdx(\"p\", null, \"All of the boil\\xADer\\xADplate code is in place and if you look at the pre\\xADvi\\xADous sec\\xADtion you will see that it wasn\\u2019t that bad, just a few lines and you loaded the RAML con\\xADtract, cre\\xADated a REST client and started up your ap\\xADpli\\xADca\\xADtion and all this under ~10 lines of code.\"), mdx(\"p\", null, \"So lets fin\\xADish and im\\xADple\\xADment the ver\\xADi\\xADfi\\xADca\\xADtion of the con\\xADtract:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"APITest\"), \" \"), \"{\\n  ...\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Test\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"testHelloEndpoint\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n    checking.path(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/hello\\\"\"), \").request().get();\\n    Assert.assertThat(checking.getLastReport(), RamlMatchers.hasNoViolations());\\n  }\\n}\\n\")), mdx(\"p\", null, \"Once you run your tests, you will see:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-css\"\n  }), \"13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.200\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"o\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".a\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".h\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".i\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".conn\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".DefaultClientConnection\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Sending\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"request\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"GET\"), \" /\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"hello\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"HTTP\"), \"/1\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".1\"), \"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.201\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".wire\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \"  >> \\\"\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"GET\"), \" /\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"hello\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"HTTP\"), \"/1\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\r]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\n]\"), \"\\\"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.202\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".wire\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \"  >> \\\"\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Accept-Encoding\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"gzip\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"deflate\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\r]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\n]\"), \"\\\"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.202\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".wire\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \"  >> \\\"\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Host\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"localhost\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":8080\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\r]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\n]\"), \"\\\"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.202\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".wire\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \"  >> \\\"\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Connection\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Keep-Alive\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\r]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\n]\"), \"\\\"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.202\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".wire\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \"  >> \\\"\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\r]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\n]\"), \"\\\"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.202\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".headers\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \" >> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"GET\"), \" /\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"hello\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"HTTP\"), \"/1\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".1\"), \"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.202\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".headers\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \" >> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Accept-Encoding\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"gzip\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"deflate\"), \"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.203\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".headers\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \" >> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Host\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"localhost\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":8080\"), \"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.203\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".headers\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \" >> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Connection\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Keep-Alive\"), \"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.412\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".wire\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \"  << \\\"\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"HTTP\"), \"/1\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".1\"), \" 200 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"OK\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\r]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\n]\"), \"\\\"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.413\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".wire\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \"  << \\\"\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"content-type\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"application\"), \"/\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"json\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\r]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\n]\"), \"\\\"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.413\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".wire\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \"  << \\\"\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Content-Length\"), \": 2\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\r]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\n]\"), \"\\\"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.413\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".wire\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \"  << \\\"\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\r]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[\\\\n]\"), \"\\\"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.414\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"o\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".a\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".h\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".i\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".conn\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".DefaultClientConnection\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Receiving\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"response\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"HTTP\"), \"/1\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".1\"), \" 200 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"OK\"), \"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.414\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".headers\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \" << \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"HTTP\"), \"/1\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".1\"), \" 200 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"OK\"), \"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.415\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".headers\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \" << \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"content-type\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"application\"), \"/\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"json\"), \"\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.415\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".headers\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \" << \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Content-Length\"), \": 2\\n13\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":09\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-pseudo\"\n  }), \":28.429\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-attr\"\n  }), \"[main]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"DEBUG\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"org\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".apache\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".http\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".wire\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"-\"), \"  << \\\"{}\\\"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Tests\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"run\"), \": 1, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Failures\"), \": 0, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Errors\"), \": 0, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Skipped\"), \": 0, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Time\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"elapsed\"), \": 1\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-class\"\n  }), \".076\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"sec\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Results\"), \" :\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Tests\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"run\"), \": 1, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Failures\"), \": 0, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Errors\"), \": 0, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-selector-tag\"\n  }), \"Skipped\"), \": 0\\n\")), mdx(\"p\", null, \"And we are done, we now have a API that fol\\xADlow the con\\xADtract, you can now keep de\\xADvel\\xADop\\xADing your API and im\\xADple\\xADmen\\xADta\\xADtion and have a test dri\\xADven ap\\xADproach to be sure that the con\\xADtract is not bro\\xADken.\"), mdx(\"h2\", {\n    \"id\": \"next-steps\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#next-steps\"\n  })), \"Next steps\"), mdx(\"p\", null, \"Until now you have learn how to in\\xADte\\xADgrate RAML into Vert.x and CI, how\\xADever the users of your API will not be able to know much about the API yet since its doc\\xADu\\xADmen\\xADta\\xADtion is not pub\\xADlicly avail\\xADable. So lets pub\\xADlish on\\xADline the doc\\xADu\\xADmen\\xADta\\xADtion of your API, of course if your API is pri\\xADvate you do not need to fol\\xADlow these steps.\"), mdx(\"p\", null, \"In order to do this all we need it to in\\xADclude in our ap\\xADpli\\xADca\\xADtion the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/mulesoft/api-console\"\n  }), \"RAML con\\xADsole\"), \", the fastest way to do this is just down\\xADload a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/mulesoft/api-console/releases\"\n  }), \"re\\xADlease\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/main/resouces/webroot\"), \" and in the orig\\xADi\\xADnal ap\\xADpli\\xADca\\xADtion Vert.x Router we add a Sta\\xADtic Con\\xADtent Han\\xADdler to serve the con\\xADsole files. Your ap\\xADpli\\xADca\\xADtion source code should look like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"App\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"extends\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"AbstractVerticle\"), \" \"), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Override\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"start\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n    Router router = Router.router(vertx);\\n\\n    router.get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/hello\\\"\"), \").handler(rc -> {\\n      rc.response()\\n          .putHeader(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"content-type\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"application/json\\\"\"), \")\\n          .end(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject().put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"greeting\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Hello World!\\\"\"), \").encode());\\n    });\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// optionally enable the web console so users can play with your API\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// online from their web browsers\"), \"\\n    router.route().handler(StaticHandler.create());\\n\\n    vertx.createHttpServer().requestHandler(router::accept).listen(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8080\"), \");\\n  }\\n}\\n\")), mdx(\"p\", null, \"Once you start you ap\\xADpli\\xADca\\xADtion open a browser point\\xADing at the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://localhost:8080?raml=/api/hello.raml\"\n  }), \"con\\xADsole\"), \". Once you do that you should be pre\\xADsented with some\\xADthing sim\\xADi\\xADlar to this:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/blog/vertx3-contract-driven-rest-services/raml-console.png\",\n    \"alt\": \"apiconsole\"\n  }))), mdx(\"h2\", {\n    \"id\": \"article-source-code\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#article-source-code\"\n  })), \"Article source code\"), mdx(\"p\", null, \"You can get the full source code for this ar\\xADti\\xADcle \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/pmlopes/vert-x3-experiments/tree/experiments/raml\"\n  }), \"here\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We see a new trend in de­vel­op­ment where we are shift­ing from de­vel­op­ing ap­pli­ca­tions to de­velop APIs. More and more we see ser­vices being of­fered as REST APIs that we are al­lowed to con­sume and we al­ready see this trend from the big names in the in­dus­try, e.g.: <a href=\"https://developers.facebook.com/\">Face­book</a>, <a href=\"https://www.mediawiki.org/wiki/API:Main_page\">Wikipedia</a>, <a href=\"https://developer.amazon.com/public/apis\">Ama­zon</a>, <a href=\"https://dev.twitter.com/overview/documentation\">Twit­ter</a>, <a href=\"https://developers.google.com/apis-explorer/#p/\">Google</a> and <a href=\"https://www.reddit.com/dev/api\">Red­dit</a> they all offer APIs.</p><p>Of course mak­ing an REST API using Vert.x is quite sim­ple, just use <a href=\"/docs/#web\">Vert.x Web</a> and you can start writ­ing your API in sec­onds, how­ever an API with­out doc­u­men­ta­tion is not an API since no de­vel­oper will know how to use it. How­ever this is one of the most sen­si­tive is­sues to tackle in soft­ware de­vel­op­ment, no­body likes to write doc­u­men­ta­tion. How­ever, in the REST age where REST-​based web-​services are ubiq­ui­tous, doc­u­men­ta­tion for pub­lic web-​services is a ne­ces­sity. There are a lot of tools out there, two of the most pop­u­lar are with­out a doubt:</p><ul><li><a href=\"http://swagger.io\">Swag­ger</a></li><li><a href=\"http://raml.org\">RAML</a></li></ul><p>Both frame­works have a large ecosys­tem of tools and tool­ing around but they tackle the doc­u­men­ta­tion from two dif­fer­ent per­spec­tives. While Swag­ger is purely a doc­u­men­ta­tion tool it tack­les the prob­lem from bot­tom up and RAML does doc­u­ment top down. They both rely on a doc­u­ment (<code>JSON</code> for Swag­ger, <code>YAML</code> for RAML).</p><p>I’ll now go over build­ing a sim­ple Hello World API, doc­u­ment it and test it. For this ex­am­ple I’ll choose RAML since it feels more nat­ural to the way we code with Vert.x Web.</p><h2 id=\"define-the-hello-world-api\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#define-the-hello-world-api\"></a>Define the Hello World API</h2><p>We need a con­tract and as with any other de­vel­op­ment we need some spec­i­fi­ca­tion, You can learn about RAML in its <a href=\"http://raml.org\">web­site</a> and quickly see how easy it is to get started. So we start with the fol­low­ing spec­i­fi­ca­tion:</p><pre><code class=\"hljs language-yaml\"><span class=\"hljs-comment\">#%RAML 0.8</span>\n<span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">Hello</span> <span class=\"hljs-string\">world</span> <span class=\"hljs-string\">REST</span> <span class=\"hljs-string\">API</span>\n<span class=\"hljs-attr\">baseUri:</span> <span class=\"hljs-string\">http://localhost:8080/</span>\n<span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-string\">/hello:</span>\n  <span class=\"hljs-attr\">get:</span>\n    <span class=\"hljs-attr\">responses:</span>\n      <span class=\"hljs-attr\">200:</span>\n        <span class=\"hljs-attr\">body:</span>\n          <span class=\"hljs-attr\">application/json:</span>\n            <span class=\"hljs-attr\">schema:</span> <span class=\"hljs-string\">|\n              { &quot;$schema&quot;: &quot;http://json-schema.org/schema&quot;,\n                &quot;type&quot;: &quot;object&quot;,\n                &quot;description&quot;: &quot;Hello World Greeting&quot;,\n                &quot;properties&quot;: {\n                  &quot;greeting&quot;:  { &quot;type&quot;: &quot;string&quot; }\n                },\n                &quot;required&quot;: [ &quot;greeting&quot; ]\n              }\n</span></code></pre><p>So if you didn’t un­der­stood why I named RAML as a top down doc­u­men­ta­tion tool, I think it be­comes clear now. So there are some basic de­f­i­n­i­tion on the top of the file like, <code>title</code>, <code>baseUri</code> and <code>version</code> which should be self ex­plana­tory.</p><p>And then we start with the API doc­u­men­ta­tion, so we spec­ify that at the <code>URL</code> <code>/hello</code> using the HTTP verb <code>GET</code> you are ex­pected to get a re­sponse with sta­tus code <code>200</code> and the body of the re­sponse should have con­tent type <code>application/json</code>. This is a very min­i­mal doc­u­ment, one could go over and spec­ify the <a href=\"http://json-schema.org/\"><code>json schema</code></a> for the re­sponse, input val­ues, etc…, how­ever lets just keep it sim­ple for this ex­am­ple.</p><div class=\"alert info\"><p>If you do not like to write yaml in your ed­i­tor you can al­ways use the <a href=\"http://raml.org/projects.html\">API De­signer</a> which gives you in­stant feed­back on your API doc­u­ment and pro­vides a test­ing plat­form.</p></div><h2 id=\"implement-the-api\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#implement-the-api\"></a>Implement the API</h2><p>So you got your con­tract, time to im­ple­ment it, this is a very sim­ple API so I’ll jump to the code im­me­di­ately:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AbstractVerticle</span> </span>{\n  <span class=\"hljs-meta\">@Override</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">start</span><span class=\"hljs-params\">()</span> </span>{\n    Router router = Router.router(vertx);\n\n    router.get(<span class=\"hljs-string\">&quot;/hello&quot;</span>).handler(rc -&gt; {\n      rc.response()\n          .putHeader(<span class=\"hljs-string\">&quot;content-type&quot;</span>, <span class=\"hljs-string\">&quot;application/json&quot;</span>)\n          .end(<span class=\"hljs-keyword\">new</span> JsonObject().put(<span class=\"hljs-string\">&quot;greeting&quot;</span>, <span class=\"hljs-string\">&quot;Hello World!&quot;</span>).encode());\n    });\n\n    vertx.createHttpServer().requestHandler(router::accept).listen(<span class=\"hljs-number\">8080</span>);\n  }\n}\n</code></pre><p>As you can see the code re­sem­bles the con­tract doc­u­ment, when there is a <code>GET</code> re­quest to <code>/hello</code> we send to the client a empty <code>JSON</code> doc­u­ment <code>{}</code>.</p><h2 id=\"are-we-done\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#are-we-done\"></a>Are we done?</h2><p>The an­swer is <strong>NO!!!</strong> how can we be sure that our im­ple­men­ta­tion does com­ply to the con­tract? We need to test. As I wrote be­fore there is no spe­cific sup­port for Vert.x from RAML or other tools how­ever in this case it is not a prob­lem we can still test our code with­out hav­ing the need to im­ple­ment a test frame­work from the ground up.</p><h2 id=\"testing-our-contract\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#testing-our-contract\"></a>Testing our contract</h2><p>The ini­tial step is to setup a test, this should be triv­ial we are using Java (al­though we could test any of Vert.x\nsup­ported lan­guages using the same tech­nique). We cre­ate a <a href=\"http://junit.org/\">JUnit</a> unit test.</p><div class=\"alert info\"><p>For this ex­am­ple, I will be using JUnit in­stead of Vert.x Test mostly to let you know that Vert.x isn’t an opin­ion­ated frame­work, so you are free to choose the tool that best fits you.</p></div><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">APITest</span> </span>{\n\n  <span class=\"hljs-meta\">@BeforeClass</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">bootApp</span><span class=\"hljs-params\">()</span> </span>{\n    Runner.run(App.class);\n  }\n\n  <span class=\"hljs-meta\">@Test</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">testHelloEndpoint</span><span class=\"hljs-params\">()</span> </span>{\n  }\n}\n</code></pre><p>So at this mo­ment you have a sim­ple test, I’ll share the code of the run­ner class (ba­si­cally it just in­stan­ti­ates a\n<code>Vertx</code> in­stance and load the <code>verticle</code> we just im­ple­mented above) and has a empty test <code>testHelloEndpoint</code>.</p><h3 id=\"load-the-api-definition-into-the-test\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#load-the-api-definition-into-the-test\"></a>Load the API definition into the test</h3><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">APITest</span> </span>{\n\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> RamlDefinition api = RamlLoaders.fromClasspath()\n        .load(<span class=\"hljs-string\">&quot;/api/hello.raml&quot;</span>)\n        .assumingBaseUri(<span class=\"hljs-string\">&quot;http://localhost:8080/&quot;</span>);\n\n  <span class=\"hljs-keyword\">private</span> CheckingWebTarget checking;\n\n  ...\n}\n</code></pre><p>So the first step is to load the <code>API</code> de­f­i­n­i­tion into our test and have a ref­er­ence to a <code>CheckingWebTarget</code> ob­ject. The check­ing ob­ject is where you can per­form as­ser­tions, but to do this we need some client make REST calls in order to test.</p><h3 id=\"create-a-rest-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#create-a-rest-client\"></a>Create a REST client</h3><p>There are many op­tions for this, you could use <code>JAX-RS</code>, <code>RestAssured</code>, <code>RestEasy</code>, etc… so I’ll pick <code>RestEasy</code> for now:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">APITest</span> </span>{\n\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> RamlDefinition api = RamlLoaders.fromClasspath()\n      .load(<span class=\"hljs-string\">&quot;/api/hello.raml&quot;</span>)\n      .assumingBaseUri(<span class=\"hljs-string\">&quot;http://localhost:8080/&quot;</span>);\n\n  <span class=\"hljs-keyword\">private</span> ResteasyClient client = <span class=\"hljs-keyword\">new</span> ResteasyClientBuilder().build();\n  <span class=\"hljs-keyword\">private</span> CheckingWebTarget checking;\n\n  <span class=\"hljs-meta\">@BeforeClass</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">bootApp</span><span class=\"hljs-params\">()</span> </span>{\n    Runner.run(App.class);\n  }\n\n  <span class=\"hljs-meta\">@Before</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">createTarget</span><span class=\"hljs-params\">()</span> </span>{\n    checking = api.createWebTarget(client.target(<span class=\"hljs-string\">&quot;http://localhost:8080&quot;</span>));\n  }\n\n  ...\n}\n</code></pre><h3 id=\"implement-the-test\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#implement-the-test\"></a>Implement the test</h3><p>All of the boil­er­plate code is in place and if you look at the pre­vi­ous sec­tion you will see that it wasn’t that bad, just a few lines and you loaded the RAML con­tract, cre­ated a REST client and started up your ap­pli­ca­tion and all this under ~10 lines of code.</p><p>So lets fin­ish and im­ple­ment the ver­i­fi­ca­tion of the con­tract:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">APITest</span> </span>{\n  ...\n\n  <span class=\"hljs-meta\">@Test</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">testHelloEndpoint</span><span class=\"hljs-params\">()</span> </span>{\n    checking.path(<span class=\"hljs-string\">&quot;/hello&quot;</span>).request().get();\n    Assert.assertThat(checking.getLastReport(), RamlMatchers.hasNoViolations());\n  }\n}\n</code></pre><p>Once you run your tests, you will see:</p><pre><code class=\"hljs language-css\">13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.200</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">o</span><span class=\"hljs-selector-class\">.a</span><span class=\"hljs-selector-class\">.h</span><span class=\"hljs-selector-class\">.i</span><span class=\"hljs-selector-class\">.conn</span><span class=\"hljs-selector-class\">.DefaultClientConnection</span> <span class=\"hljs-selector-tag\">-</span> <span class=\"hljs-selector-tag\">Sending</span> <span class=\"hljs-selector-tag\">request</span>: <span class=\"hljs-selector-tag\">GET</span> /<span class=\"hljs-selector-tag\">hello</span> <span class=\"hljs-selector-tag\">HTTP</span>/1<span class=\"hljs-selector-class\">.1</span>\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.201</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.wire</span> <span class=\"hljs-selector-tag\">-</span>  &gt;&gt; &quot;<span class=\"hljs-selector-tag\">GET</span> /<span class=\"hljs-selector-tag\">hello</span> <span class=\"hljs-selector-tag\">HTTP</span>/1<span class=\"hljs-selector-class\">.1</span><span class=\"hljs-selector-attr\">[\\r]</span><span class=\"hljs-selector-attr\">[\\n]</span>&quot;\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.202</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.wire</span> <span class=\"hljs-selector-tag\">-</span>  &gt;&gt; &quot;<span class=\"hljs-selector-tag\">Accept-Encoding</span>: <span class=\"hljs-selector-tag\">gzip</span>, <span class=\"hljs-selector-tag\">deflate</span><span class=\"hljs-selector-attr\">[\\r]</span><span class=\"hljs-selector-attr\">[\\n]</span>&quot;\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.202</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.wire</span> <span class=\"hljs-selector-tag\">-</span>  &gt;&gt; &quot;<span class=\"hljs-selector-tag\">Host</span>: <span class=\"hljs-selector-tag\">localhost</span><span class=\"hljs-selector-pseudo\">:8080</span><span class=\"hljs-selector-attr\">[\\r]</span><span class=\"hljs-selector-attr\">[\\n]</span>&quot;\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.202</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.wire</span> <span class=\"hljs-selector-tag\">-</span>  &gt;&gt; &quot;<span class=\"hljs-selector-tag\">Connection</span>: <span class=\"hljs-selector-tag\">Keep-Alive</span><span class=\"hljs-selector-attr\">[\\r]</span><span class=\"hljs-selector-attr\">[\\n]</span>&quot;\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.202</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.wire</span> <span class=\"hljs-selector-tag\">-</span>  &gt;&gt; &quot;<span class=\"hljs-selector-attr\">[\\r]</span><span class=\"hljs-selector-attr\">[\\n]</span>&quot;\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.202</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.headers</span> <span class=\"hljs-selector-tag\">-</span> &gt;&gt; <span class=\"hljs-selector-tag\">GET</span> /<span class=\"hljs-selector-tag\">hello</span> <span class=\"hljs-selector-tag\">HTTP</span>/1<span class=\"hljs-selector-class\">.1</span>\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.202</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.headers</span> <span class=\"hljs-selector-tag\">-</span> &gt;&gt; <span class=\"hljs-selector-tag\">Accept-Encoding</span>: <span class=\"hljs-selector-tag\">gzip</span>, <span class=\"hljs-selector-tag\">deflate</span>\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.203</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.headers</span> <span class=\"hljs-selector-tag\">-</span> &gt;&gt; <span class=\"hljs-selector-tag\">Host</span>: <span class=\"hljs-selector-tag\">localhost</span><span class=\"hljs-selector-pseudo\">:8080</span>\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.203</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.headers</span> <span class=\"hljs-selector-tag\">-</span> &gt;&gt; <span class=\"hljs-selector-tag\">Connection</span>: <span class=\"hljs-selector-tag\">Keep-Alive</span>\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.412</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.wire</span> <span class=\"hljs-selector-tag\">-</span>  &lt;&lt; &quot;<span class=\"hljs-selector-tag\">HTTP</span>/1<span class=\"hljs-selector-class\">.1</span> 200 <span class=\"hljs-selector-tag\">OK</span><span class=\"hljs-selector-attr\">[\\r]</span><span class=\"hljs-selector-attr\">[\\n]</span>&quot;\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.413</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.wire</span> <span class=\"hljs-selector-tag\">-</span>  &lt;&lt; &quot;<span class=\"hljs-selector-tag\">content-type</span>: <span class=\"hljs-selector-tag\">application</span>/<span class=\"hljs-selector-tag\">json</span><span class=\"hljs-selector-attr\">[\\r]</span><span class=\"hljs-selector-attr\">[\\n]</span>&quot;\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.413</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.wire</span> <span class=\"hljs-selector-tag\">-</span>  &lt;&lt; &quot;<span class=\"hljs-selector-tag\">Content-Length</span>: 2<span class=\"hljs-selector-attr\">[\\r]</span><span class=\"hljs-selector-attr\">[\\n]</span>&quot;\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.413</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.wire</span> <span class=\"hljs-selector-tag\">-</span>  &lt;&lt; &quot;<span class=\"hljs-selector-attr\">[\\r]</span><span class=\"hljs-selector-attr\">[\\n]</span>&quot;\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.414</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">o</span><span class=\"hljs-selector-class\">.a</span><span class=\"hljs-selector-class\">.h</span><span class=\"hljs-selector-class\">.i</span><span class=\"hljs-selector-class\">.conn</span><span class=\"hljs-selector-class\">.DefaultClientConnection</span> <span class=\"hljs-selector-tag\">-</span> <span class=\"hljs-selector-tag\">Receiving</span> <span class=\"hljs-selector-tag\">response</span>: <span class=\"hljs-selector-tag\">HTTP</span>/1<span class=\"hljs-selector-class\">.1</span> 200 <span class=\"hljs-selector-tag\">OK</span>\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.414</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.headers</span> <span class=\"hljs-selector-tag\">-</span> &lt;&lt; <span class=\"hljs-selector-tag\">HTTP</span>/1<span class=\"hljs-selector-class\">.1</span> 200 <span class=\"hljs-selector-tag\">OK</span>\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.415</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.headers</span> <span class=\"hljs-selector-tag\">-</span> &lt;&lt; <span class=\"hljs-selector-tag\">content-type</span>: <span class=\"hljs-selector-tag\">application</span>/<span class=\"hljs-selector-tag\">json</span>\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.415</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.headers</span> <span class=\"hljs-selector-tag\">-</span> &lt;&lt; <span class=\"hljs-selector-tag\">Content-Length</span>: 2\n13<span class=\"hljs-selector-pseudo\">:09</span><span class=\"hljs-selector-pseudo\">:28.429</span> <span class=\"hljs-selector-attr\">[main]</span> <span class=\"hljs-selector-tag\">DEBUG</span> <span class=\"hljs-selector-tag\">org</span><span class=\"hljs-selector-class\">.apache</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.wire</span> <span class=\"hljs-selector-tag\">-</span>  &lt;&lt; &quot;{}&quot;\n<span class=\"hljs-selector-tag\">Tests</span> <span class=\"hljs-selector-tag\">run</span>: 1, <span class=\"hljs-selector-tag\">Failures</span>: 0, <span class=\"hljs-selector-tag\">Errors</span>: 0, <span class=\"hljs-selector-tag\">Skipped</span>: 0, <span class=\"hljs-selector-tag\">Time</span> <span class=\"hljs-selector-tag\">elapsed</span>: 1<span class=\"hljs-selector-class\">.076</span> <span class=\"hljs-selector-tag\">sec</span>\n\n<span class=\"hljs-selector-tag\">Results</span> :\n\n<span class=\"hljs-selector-tag\">Tests</span> <span class=\"hljs-selector-tag\">run</span>: 1, <span class=\"hljs-selector-tag\">Failures</span>: 0, <span class=\"hljs-selector-tag\">Errors</span>: 0, <span class=\"hljs-selector-tag\">Skipped</span>: 0\n</code></pre><p>And we are done, we now have a API that fol­low the con­tract, you can now keep de­vel­op­ing your API and im­ple­men­ta­tion and have a test dri­ven ap­proach to be sure that the con­tract is not bro­ken.</p><h2 id=\"next-steps\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#next-steps\"></a>Next steps</h2><p>Until now you have learn how to in­te­grate RAML into Vert.x and CI, how­ever the users of your API will not be able to know much about the API yet since its doc­u­men­ta­tion is not pub­licly avail­able. So lets pub­lish on­line the doc­u­men­ta­tion of your API, of course if your API is pri­vate you do not need to fol­low these steps.</p><p>In order to do this all we need it to in­clude in our ap­pli­ca­tion the <a href=\"https://github.com/mulesoft/api-console\">RAML con­sole</a>, the fastest way to do this is just down­load a <a href=\"https://github.com/mulesoft/api-console/releases\">re­lease</a> to <code>src/main/resouces/webroot</code> and in the orig­i­nal ap­pli­ca­tion Vert.x Router we add a Sta­tic Con­tent Han­dler to serve the con­sole files. Your ap­pli­ca­tion source code should look like this:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AbstractVerticle</span> </span>{\n  <span class=\"hljs-meta\">@Override</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">start</span><span class=\"hljs-params\">()</span> </span>{\n    Router router = Router.router(vertx);\n\n    router.get(<span class=\"hljs-string\">&quot;/hello&quot;</span>).handler(rc -&gt; {\n      rc.response()\n          .putHeader(<span class=\"hljs-string\">&quot;content-type&quot;</span>, <span class=\"hljs-string\">&quot;application/json&quot;</span>)\n          .end(<span class=\"hljs-keyword\">new</span> JsonObject().put(<span class=\"hljs-string\">&quot;greeting&quot;</span>, <span class=\"hljs-string\">&quot;Hello World!&quot;</span>).encode());\n    });\n\n    <span class=\"hljs-comment\">// optionally enable the web console so users can play with your API</span>\n    <span class=\"hljs-comment\">// online from their web browsers</span>\n    router.route().handler(StaticHandler.create());\n\n    vertx.createHttpServer().requestHandler(router::accept).listen(<span class=\"hljs-number\">8080</span>);\n  }\n}\n</code></pre><p>Once you start you ap­pli­ca­tion open a browser point­ing at the <a href=\"http://localhost:8080?raml=/api/hello.raml\">con­sole</a>. Once you do that you should be pre­sented with some­thing sim­i­lar to this:</p><p><img src=\"/images/blog/vertx3-contract-driven-rest-services/raml-console.png\" alt=\"apiconsole\"/></p><h2 id=\"article-source-code\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#article-source-code\"></a>Article source code</h2><p>You can get the full source code for this ar­ti­cle <a href=\"https://github.com/pmlopes/vert-x3-experiments/tree/experiments/raml\">here</a>.</p>","scope":{}}},"prevPost":{"meta":{"title":"Vert.x 3.1.0 is released!","category":"releases","authors":[{"name":"Tim Fox","github_id":"purplefox"}],"summary":"I'm pleased to announce the release of Vert.x 3.1!"},"date":"2015-10-08","slug":"vert-x-3-1-0-is-released"},"nextPost":{"meta":{"title":"Writing secure Vert.x Web apps","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"This is a starting guide for securing Vert.x web applications. Standard rules and practices apply to Vert.x apps as if they would to any other web framework."},"date":"2015-09-14","slug":"writing-secure-vert-x-web-apps"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"},{"meta":{"title":"Combine vert.x and mongo to build a giant","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This blog post is part of the introduction to Vert.x series. We are now going to replace this JDBC client by the vertx-mongo-client, and thus connect to a Mongo database."},"date":"2015-11-30","slug":"combine-vert-x-and-mongo-to-build-a-giant"}]},"__N_SSG":true}