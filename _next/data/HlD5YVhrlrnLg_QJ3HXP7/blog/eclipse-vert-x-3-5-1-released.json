{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Eclipse Vert.x 3.5.1 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.5.1!"},"date":"2018-02-13","slug":"eclipse-vert-x-3-5-1-released","readingTime":{"text":"4 min read","minutes":3.38,"time":202799.99999999997,"words":676},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We have just re\\xADleased Vert.x 3.5.1!\"), mdx(\"h2\", {\n    \"id\": \"fixes-first\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#fixes-first\"\n  })), \"Fixes first!\"), mdx(\"p\", null, \"As usual this re\\xADlease fixes bugs re\\xADported in 3.5.0, see the re\\xADlease notes.\"), mdx(\"h2\", {\n    \"id\": \"junit-5-support\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#junit-5-support\"\n  })), \"JUnit 5 support\"), mdx(\"p\", null, \"This re\\xADlease in\\xADtro\\xADduces the new \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-junit5\"\n  }), \"vertx-\\u200Bjunit5 mod\\xADule\"), \".\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://junit.org/junit5/\"\n  }), \"JUnit 5\"), \" is a rewrite of the fa\\xADmous Java test\\xADing frame\\xADwork that brings new in\\xADter\\xADest\\xADing fea\\xADtures, in\\xADclud\\xADing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"nested tests,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the abil\\xADity to give a human-\\u200Breadable de\\xADscrip\\xADtion of tests and test cases (and yes, even use emo\\xADjis),\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a mod\\xADu\\xADlar ex\\xADten\\xADsion mech\\xADa\\xADnism that is more pow\\xADer\\xADful than the JUnit 4 run\\xADner mech\\xADa\\xADnism (@Run\\xADWith an\\xADno\\xADta\\xADtion),\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"con\\xADdi\\xADtional test ex\\xADe\\xADcu\\xADtion,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pa\\xADra\\xADme\\xADter\\xADized tests, in\\xADclud\\xADing from sources such as CSV data,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the sup\\xADport of Java 8 lambda ex\\xADpres\\xADsions in the re\\xADworked built-\\u200Bin as\\xADser\\xADtions API,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sup\\xADport for run\\xADning tests pre\\xADvi\\xADously writ\\xADten for JUnit 4.\")), mdx(\"p\", null, \"Sup\\xADpose that we have a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SampleVerticle\"), \" ver\\xADti\\xADcle that ex\\xADposes a HTTP server on port 11981.\\nHere is how we can test its de\\xADploy\\xADment as well as the re\\xADsult of 10 con\\xADcur\\xADrent HTTP re\\xADquests:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Test\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@DisplayName(\\\"\\uD83D\\uDE80 Deploy a HTTP service verticle and make 10 requests\\\")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"useSampleVerticle\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(Vertx vertx, VertxTestContext testContext)\"), \" \"), \"{\\n  WebClient webClient = WebClient.create(vertx);\\n  Checkpoint deploymentCheckpoint = testContext.checkpoint();\\n\\n  Checkpoint requestCheckpoint = testContext.checkpoint(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"10\"), \");\\n  vertx.deployVerticle(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" SampleVerticle(), testContext.succeeding(id -> {\\n    deploymentCheckpoint.flag();\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"for\"), \" (\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" i = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"0\"), \"; i < \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"10\"), \"; i++) {\\n      webClient.get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"11981\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"localhost\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/\\\"\"), \")\\n        .as(BodyCodec.string())\\n        .send(testContext.succeeding(resp -> {\\n          testContext.verify(() -> {\\n            assertThat(resp.statusCode()).isEqualTo(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"200\"), \");\\n            assertThat(resp.body()).contains(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Yo!\\\"\"), \");\\n            requestCheckpoint.flag();\\n          });\\n        }));\\n    }\\n  }));\\n}\\n\")), mdx(\"p\", null, \"The test method above ben\\xADe\\xADfits from the in\\xADjec\\xADtion of a work\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Vertx\"), \" con\\xADtext, a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"VertxTestContext\"), \" for deal\\xADing with\\nasyn\\xADchro\\xADnous op\\xADer\\xADa\\xADtions, and the guar\\xADan\\xADtee that the ex\\xADe\\xADcu\\xADtion time is bound by a time\\xADout which can op\\xADtion\\xADally be con\\xADfig\\xADured\\nusing a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@Timeout\"), \" an\\xADno\\xADta\\xADtion.\"), mdx(\"p\", null, \"The test suc\\xADceeds when all check\\xADpoints have been flagged.\\nNote that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-junit5\"), \" is ag\\xADnos\\xADtic of the as\\xADser\\xADtions li\\xADbrary being used: you may opt for the built-\\u200Bin JUnit 5 as\\xADser\\xADtions\\nor use a 3rd-\\u200Bparty li\\xADbrary such as \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://joel-costigliola.github.io/assertj/\"\n  }), \"As\\xADsertJ\"), \" as we did in the ex\\xADam\\xADple above.\"), mdx(\"p\", null, \"You can check\\xADout the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-junit5\"\n  }), \"source on GitHub\"), \", read \", mdx(Link, {\n    href: \"/docs/vertx-junit5/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"the man\\xADual\")), \" and learn from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/master/junit5-examples\"\n  }), \"the ex\\xADam\\xADples\"), \".\"), mdx(\"h2\", {\n    \"id\": \"web-api-contract-enhancements\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#web-api-contract-enhancements\"\n  })), \"Web API Contract enhancements\"), mdx(\"p\", null, \"The pack\\xADage \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-web-api-contract\"), \" in\\xADcludes a va\\xADri\\xADety of fixes, from schema \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ref\"), \" to\\n\", mdx(Link, {\n    href: \"/docs/vertx-web-api-contract/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"re\\xADvamped doc\\xADu\\xADmen\\xADta\\xADtion\")), \". You can give a look at list of all\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-web/pull/802\"\n  }), \"fixes/im\\xADprove\\xADments here\"), \" and all\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.5.1-Breaking-Changes#vertx-web-api-contracts\"\n  }), \"break\\xADing changes here\"), \".\"), mdx(\"p\", null, \"From 3.5.1 to load the ope\\xADnapi spec and in\\xADstan\\xADti\\xADate the Router you should use new method \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OpenAPI3RouterFactory.create()\"), \"\\nthat re\\xADplaces old meth\\xADods \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createRouterFactoryFromFile()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createRouterFactoryFromURL()\"), \". This new method ac\\xADcepts\\nrel\\xADa\\xADtive paths, ab\\xADsolute paths, local URL with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"file://\"), \" and re\\xADmote URL with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://\"), \". Note that if you want refeer to\\na file rel\\xADa\\xADtive to your jar\\u2019s root, you can sim\\xADply use a rel\\xADa\\xADtive path and the parser will look out the jar and into the\\njar for the spec.\"), mdx(\"p\", null, \"From 3.5.1 all set\\xADtings about \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OpenAPI3RouterFactory\"), \" be\\xADhav\\xADiours dur\\xADing router gen\\xADer\\xADa\\xADtion are in\\xADglobed in a new ob\\xADject called\\n\", mdx(Link, {\n    href: \"/docs/apidocs/io/vertx/ext/web/api/contract/RouterFactoryOptions.html\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"RouterFactoryOptions\"))), \". From\\nthis ob\\xADject you can:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Con\\xADfig\\xADure if you want to mount a de\\xADfault val\\xADi\\xADda\\xADtion fail\\xADure han\\xADdler and which one\\n(meth\\xADods \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"setMountValidationFailureHandler(boolean)\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"setValidationFailureHandler(Handler)\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Con\\xADfig\\xADure if you want to mount a de\\xADfault 501 not im\\xADple\\xADmented han\\xADdler and which one\\n(meth\\xADods \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"setMountNotImplementedFailureHandler(boolean)\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"setNotImplementedFailureHandler(Handler)\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Con\\xADfig\\xADure if you want to mount \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ResponseContentTypeHandler\"), \" au\\xADto\\xADmat\\xADi\\xADcally\\n(method \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"setMountResponseContentTypeHandler(boolean)\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Con\\xADfig\\xADure if you want to fail dur\\xADing router gen\\xADer\\xADa\\xADtion when se\\xADcu\\xADrity han\\xADdlers are not con\\xADfig\\xADured\\n(method \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"setRequireSecurityHandlers(boolean)\"), \")\")), mdx(\"p\", null, \"After ini\\xADtial\\xADiza\\xADtion of route, you can mount the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RouterFactoryOptions\"), \" ob\\xADject with method \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"routerFactory.setOptions()\"), \"\\nwhen you want be\\xADfore call\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getRouter()\"), \".\"), mdx(\"h2\", {\n    \"id\": \"rxjava-deprecation-removal\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#rxjava-deprecation-removal\"\n  })), \"RxJava deprecation removal\"), mdx(\"p\", null, \"It is im\\xADpor\\xADtant to know that 3.5.x will be the last re\\xADlease with the legacy \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"xyzObservable()\"), \" meth\\xADods:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Deprecated()\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" Observable<HttpServer> \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"listenObservable\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" port, String host)\")), \";\\n\")), mdx(\"p\", null, \"has been re\\xADplaced since Vert.x 3.4 by:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" Single<HttpServer> \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"rxListen\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" port, String host)\")), \";\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"xyzObservable()\"), \" dep\\xADre\\xADcated meth\\xADods will be \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-rx/issues/113\"\n  }), \"re\\xADmoved\"), \" in Vert.x 3.6.\"), mdx(\"h2\", {\n    \"id\": \"wrap-up\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#wrap-up\"\n  })), \"Wrap up\"), mdx(\"p\", null, \"Vert.x 3.5.1 re\\xADlease notes and break\\xADing changes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.5.1-Release-Notes\"\n  }), \"https://github.com/vert-\\u200Bx3/wiki/wiki/3.5.1-\\u200BRelease-Notes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.5.1-Breaking-Changes\"\n  }), \"https://github.com/vert-\\u200Bx3/wiki/wiki/3.5.1-\\u200BBreaking-Changes\"))), mdx(\"p\", null, \"The event bus client using the SockJS bridge are avail\\xADable from NPM, Bower and as a We\\xADb\\xADJar:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"https://www.npmjs.com/pack\\xADage/vertx3-\\u200Beventbus-client\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"https://github.com/vert-\\u200Bx3/vertx-\\u200Bbus-bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"http://www.we\\xADb\\xADjars.org/\"))), mdx(\"p\", null, \"Docker im\\xADages are also avail\\xADable on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \". The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion is also avail\\xADable from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"The ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.5.1%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.3.3/view\"\n  }), \"Bin\\xADtray\"), \".\"), mdx(\"p\", null, \"Happy cod\\xADing !\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We have just re­leased Vert.x 3.5.1!</p><h2 id=\"fixes-first\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#fixes-first\"></a>Fixes first!</h2><p>As usual this re­lease fixes bugs re­ported in 3.5.0, see the re­lease notes.</p><h2 id=\"junit-5-support\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#junit-5-support\"></a>JUnit 5 support</h2><p>This re­lease in­tro­duces the new <a href=\"https://github.com/vert-x3/vertx-junit5\">vertx-​junit5 mod­ule</a>.</p><p><a href=\"http://junit.org/junit5/\">JUnit 5</a> is a rewrite of the fa­mous Java test­ing frame­work that brings new in­ter­est­ing fea­tures, in­clud­ing:</p><ul><li>nested tests,</li><li>the abil­ity to give a human-​readable de­scrip­tion of tests and test cases (and yes, even use emo­jis),</li><li>a mod­u­lar ex­ten­sion mech­a­nism that is more pow­er­ful than the JUnit 4 run­ner mech­a­nism (@Run­With an­no­ta­tion),</li><li>con­di­tional test ex­e­cu­tion,</li><li>pa­ra­me­ter­ized tests, in­clud­ing from sources such as CSV data,</li><li>the sup­port of Java 8 lambda ex­pres­sions in the re­worked built-​in as­ser­tions API,</li><li>sup­port for run­ning tests pre­vi­ously writ­ten for JUnit 4.</li></ul><p>Sup­pose that we have a <code>SampleVerticle</code> ver­ti­cle that ex­poses a HTTP server on port 11981.\nHere is how we can test its de­ploy­ment as well as the re­sult of 10 con­cur­rent HTTP re­quests:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-meta\">@Test</span>\n<span class=\"hljs-meta\">@DisplayName(&quot;🚀 Deploy a HTTP service verticle and make 10 requests&quot;)</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">useSampleVerticle</span><span class=\"hljs-params\">(Vertx vertx, VertxTestContext testContext)</span> </span>{\n  WebClient webClient = WebClient.create(vertx);\n  Checkpoint deploymentCheckpoint = testContext.checkpoint();\n\n  Checkpoint requestCheckpoint = testContext.checkpoint(<span class=\"hljs-number\">10</span>);\n  vertx.deployVerticle(<span class=\"hljs-keyword\">new</span> SampleVerticle(), testContext.succeeding(id -&gt; {\n    deploymentCheckpoint.flag();\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">10</span>; i++) {\n      webClient.get(<span class=\"hljs-number\">11981</span>, <span class=\"hljs-string\">&quot;localhost&quot;</span>, <span class=\"hljs-string\">&quot;/&quot;</span>)\n        .as(BodyCodec.string())\n        .send(testContext.succeeding(resp -&gt; {\n          testContext.verify(() -&gt; {\n            assertThat(resp.statusCode()).isEqualTo(<span class=\"hljs-number\">200</span>);\n            assertThat(resp.body()).contains(<span class=\"hljs-string\">&quot;Yo!&quot;</span>);\n            requestCheckpoint.flag();\n          });\n        }));\n    }\n  }));\n}\n</code></pre><p>The test method above ben­e­fits from the in­jec­tion of a work­ing <code>Vertx</code> con­text, a <code>VertxTestContext</code> for deal­ing with\nasyn­chro­nous op­er­a­tions, and the guar­an­tee that the ex­e­cu­tion time is bound by a time­out which can op­tion­ally be con­fig­ured\nusing a <code>@Timeout</code> an­no­ta­tion.</p><p>The test suc­ceeds when all check­points have been flagged.\nNote that <code>vertx-junit5</code> is ag­nos­tic of the as­ser­tions li­brary being used: you may opt for the built-​in JUnit 5 as­ser­tions\nor use a 3rd-​party li­brary such as <a href=\"http://joel-costigliola.github.io/assertj/\">As­sertJ</a> as we did in the ex­am­ple above.</p><p>You can check­out the <a href=\"https://github.com/vert-x3/vertx-junit5\">source on GitHub</a>, read <a href=\"/docs/vertx-junit5/java/\">the man­ual</a> and learn from <a href=\"https://github.com/vert-x3/vertx-examples/tree/master/junit5-examples\">the ex­am­ples</a>.</p><h2 id=\"web-api-contract-enhancements\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#web-api-contract-enhancements\"></a>Web API Contract enhancements</h2><p>The pack­age <code>vertx-web-api-contract</code> in­cludes a va­ri­ety of fixes, from schema <code>$ref</code> to\n<a href=\"/docs/vertx-web-api-contract/java/\">re­vamped doc­u­men­ta­tion</a>. You can give a look at list of all\n<a href=\"https://github.com/vert-x3/vertx-web/pull/802\">fixes/im­prove­ments here</a> and all\n<a href=\"https://github.com/vert-x3/wiki/wiki/3.5.1-Breaking-Changes#vertx-web-api-contracts\">break­ing changes here</a>.</p><p>From 3.5.1 to load the ope­napi spec and in­stan­ti­ate the Router you should use new method <code>OpenAPI3RouterFactory.create()</code>\nthat re­places old meth­ods <code>createRouterFactoryFromFile()</code> and <code>createRouterFactoryFromURL()</code>. This new method ac­cepts\nrel­a­tive paths, ab­solute paths, local URL with <code>file://</code> and re­mote URL with <code>http://</code>. Note that if you want refeer to\na file rel­a­tive to your jar’s root, you can sim­ply use a rel­a­tive path and the parser will look out the jar and into the\njar for the spec.</p><p>From 3.5.1 all set­tings about <code>OpenAPI3RouterFactory</code> be­hav­iours dur­ing router gen­er­a­tion are in­globed in a new ob­ject called\n<a href=\"/docs/apidocs/io/vertx/ext/web/api/contract/RouterFactoryOptions.html\"><code>RouterFactoryOptions</code></a>. From\nthis ob­ject you can:</p><ul><li>Con­fig­ure if you want to mount a de­fault val­i­da­tion fail­ure han­dler and which one\n(meth­ods <code>setMountValidationFailureHandler(boolean)</code> and <code>setValidationFailureHandler(Handler)</code>)</li><li>Con­fig­ure if you want to mount a de­fault 501 not im­ple­mented han­dler and which one\n(meth­ods <code>setMountNotImplementedFailureHandler(boolean)</code> and <code>setNotImplementedFailureHandler(Handler)</code>)</li><li>Con­fig­ure if you want to mount <code>ResponseContentTypeHandler</code> au­to­mat­i­cally\n(method <code>setMountResponseContentTypeHandler(boolean)</code>)</li><li>Con­fig­ure if you want to fail dur­ing router gen­er­a­tion when se­cu­rity han­dlers are not con­fig­ured\n(method <code>setRequireSecurityHandlers(boolean)</code>)</li></ul><p>After ini­tial­iza­tion of route, you can mount the <code>RouterFactoryOptions</code> ob­ject with method <code>routerFactory.setOptions()</code>\nwhen you want be­fore call­ing <code>getRouter()</code>.</p><h2 id=\"rxjava-deprecation-removal\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#rxjava-deprecation-removal\"></a>RxJava deprecation removal</h2><p>It is im­por­tant to know that 3.5.x will be the last re­lease with the legacy <code>xyzObservable()</code> meth­ods:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-meta\">@Deprecated()</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Observable&lt;HttpServer&gt; <span class=\"hljs-title\">listenObservable</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> port, String host)</span></span>;\n</code></pre><p>has been re­placed since Vert.x 3.4 by:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Single&lt;HttpServer&gt; <span class=\"hljs-title\">rxListen</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> port, String host)</span></span>;\n</code></pre><p>The <code>xyzObservable()</code> dep­re­cated meth­ods will be <a href=\"https://github.com/vert-x3/vertx-rx/issues/113\">re­moved</a> in Vert.x 3.6.</p><h2 id=\"wrap-up\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#wrap-up\"></a>Wrap up</h2><p>Vert.x 3.5.1 re­lease notes and break­ing changes:</p><ul><li><a href=\"https://github.com/vert-x3/wiki/wiki/3.5.1-Release-Notes\">https://github.com/vert-​x3/wiki/wiki/3.5.1-​Release-Notes</a></li><li><a href=\"https://github.com/vert-x3/wiki/wiki/3.5.1-Breaking-Changes\">https://github.com/vert-​x3/wiki/wiki/3.5.1-​Breaking-Changes</a></li></ul><p>The event bus client using the SockJS bridge are avail­able from NPM, Bower and as a We­b­Jar:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">https://www.npmjs.com/pack­age/vertx3-​eventbus-client</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">https://github.com/vert-​x3/vertx-​bus-bower</a></li><li><a href=\"http://www.webjars.org/\">http://www.we­b­jars.org/</a></li></ul><p>Docker im­ages are also avail­able on the <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>. The Vert.x dis­tri­b­u­tion is also avail­able from <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>The ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.5.1%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.3.3/view\">Bin­tray</a>.</p><p>Happy cod­ing !</p>","scope":{}}},"prevPost":{"meta":{"title":"Google Summer of Code 2018","category":"news","authors":[{"name":"Thomas Segismont","github_id":"tsegismont"}],"summary":"It's this time of year again! Google Summer of Code 2018 submission period has just started!"},"date":"2018-03-13","slug":"google-summer-of-code-2018"},"nextPost":{"meta":{"title":"Eclipse Vert.x based Framework URL Shortener Backend","category":"guides","authors":[{"name":"Lazar Bulić","github_id":"pendula95"}],"summary":"We combine Vert.x with the serverless framework to write a microservice that runs on AWS Lambda."},"date":"2017-12-21","slug":"eclipse-vert-x-based-framework-url-shortener-backend"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Checklist for Migrating from Vert.x 2.1.x to Vert.x 3 - Part One","category":"guides","authors":[{"name":"Mark Spritzler","github_id":"bytor99999"}],"summary":"So while upgrading our application, I thought I should note down all the changes that we had to do in the process. Since Vert.x 3 is a major upgrade from the previous version, with so many changes."},"date":"2015-07-06","slug":"checklist-for-migrating-from-vert-x-2-1-x-to-vert-x-3-part-one"},{"meta":{"title":"Using Hamcrest Matchers with Vert.x Unit","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Vert.x Unit is a very elegant library to test asynchronous applications developed with vert.x. However because of this asynchronous aspect, reporting test failures is not natural for JUnit users."},"date":"2016-01-18","slug":"using-hamcrest-matchers-with-vert-x-unit"}]},"__N_SSG":true}