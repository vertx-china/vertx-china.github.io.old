{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Eclipse Vert.x 3.7.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are extremely pleased to announce that the Eclipse Vert.x version 3.7.0 has been released."},"date":"2019-04-02","slug":"eclipse-vert-x-3-7-0-released","readingTime":{"text":"8 min read","minutes":7.65,"time":459000,"words":1530},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are ex\\xADtremely pleased to an\\xADnounce that the Eclipse Vert.x ver\\xADsion 3.7.0 has been re\\xADleased.\"), mdx(\"p\", null, \"It is an ex\\xADcit\\xADing mile\\xADstone for a cou\\xADple of rea\\xADsons:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"it comes with great new fea\\xADtures like the \", mdx(ScrollLink, {\n    href: \"#vertx-web-graphql\",\n    mdxType: \"ScrollLink\"\n  }, \"GraphQL ex\\xADten\\xADsion for Vert.x Web\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"this is the last minor ver\\xADsion be\\xADfore Vert.x 4! \")), mdx(\"p\", null, \"Be\\xADfore we go throught the most no\\xADtable new fea\\xADtures, we would like to thank all the con\\xADtrib\\xADu\\xADtors.\\nYour par\\xADtic\\xADi\\xADpa\\xADtion has been es\\xADsen\\xADtial to this achieve\\xADment.\"), mdx(\"h2\", {\n    \"id\": \"vertx-web-graphql\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-web-graphql\"\n  })), \"Vert.x Web GraphQL\"), mdx(\"p\", null, \"Vert.x Web GraphQL ex\\xADtends Vert.x Web with the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.graphql-java.com\"\n  }), \"GraphQL-\\u200BJava\"), \" li\\xADbrary so that you can build a GraphQL server.\"), mdx(\"p\", null, \"To use this new mod\\xADule, add the fol\\xADlow\\xADing to the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"de\\xADpen\\xADden\\xADcies\"), \" sec\\xADtion of your Maven POM file:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-xml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"io.vertx\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"vertx-web-graphql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"3.7.0\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n\")), mdx(\"p\", null, \"Or, if you use Gra\\xADdle:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-gradle\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"compile\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx:vertx-web-graphql:3.7.0'\"), \"\\n\")), mdx(\"p\", null, \"Then cre\\xADate a Vert.x Web \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Route\"), \" and a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GraphQLHandler\"), \" for it:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Setup the GraphQL-Java object\"), \"\\nGraphQL graphQL = setupGraphQLJava();\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Use it to handle requests on a Vert.x Web route \"), \"\\nrouter.route(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/graphql\\\"\"), \").handler(GraphQLHandler.create(graphQL));\\n\")), mdx(\"p\", null, \"The GraphQL han\\xADdler sup\\xADports out of the box:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"query con\\xADtext cus\\xADtomiza\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"GraphQL-\\u200BJava data load\\xADers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"batch\\xADing on \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"POST\"), \" re\\xADquests (com\\xADpat\\xADi\\xADble with the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.apollographql.com/docs/link/links/batch-http.html\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"apollo-link-batch-http\")), \" trans\\xADport)\")), mdx(\"p\", null, \"For de\\xADtailed usage in\\xADstruc\\xADtions, please refer to the \", mdx(Link, {\n    href: \"/docs/vertx-web-graphql/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x Web GraphQL doc\\xADu\\xADmen\\xADta\\xADtion\")), \".\"), mdx(\"h2\", {\n    \"id\": \"vertx-cassandra-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-cassandra-client\"\n  })), \"Vert.x Cassandra Client\"), mdx(\"h3\", {\n    \"id\": \"object-mapper-support\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#object-mapper-support\"\n  })), \"Object mapper support\"), mdx(\"p\", null, \"Vert.x Cas\\xADsan\\xADdra Client now sup\\xADports the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/datastax/java-driver/tree/3.x/manual/object_mapper\"\n  }), \"cassandra-\\u200Bdriver-mapping\"), \" mod\\xADule.\"), mdx(\"p\", null, \"To en\\xADable this fea\\xADture, you need to up\\xADdate your class\\xADpath by adding:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-xml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"com.datastax.cassandra\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"cassandra-driver-mapping\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"3.7.1\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n\")), mdx(\"p\", null, \"Then for a given en\\xADtity: \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Table(keyspace = \\\"test\\\", name = \\\"users\\\")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"User\"), \" \"), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@PartitionKey\"), \" String name;\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// ... other fields and methods \"), \"\\n}\\n\")), mdx(\"p\", null, \"You can re\\xADtrieve a map\\xADper and ex\\xADe\\xADcute CRUD op\\xADer\\xADa\\xADtions:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"VertxMappingManager manager = VertxMappingManager.create(cassandraClient);\\nVertxMapper<User> mapper = manager.mapper(User.class, vertx);\\nmapper.save(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" User(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"john\\\"\"), \", hander -> {}));\\n\")), mdx(\"h3\", {\n    \"id\": \"collector-api\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#collector-api\"\n  })), \"Collector API\"), mdx(\"p\", null, \"The fea\\xADture al\\xADlows to use Java \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collector.html\"\n  }), \"col\\xADlec\\xADtors\"), \" for query re\\xADsults:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Create a collector projecting a row set to a string in the form (last_name_1,last_name_2,...)\"), \"\\nCollector<Row, ?, String> collector = Collectors.mapping(\\n    row -> row.getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"last_name\\\"\"), \"),\\n    Collectors.joining(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\",\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"(\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\")\\\"\"), \")\\n);\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Run the query with the collector\"), \"\\nclient.execute(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT * FROM users\\\"\"), \", collector, ar -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Result in the form (last_name_1,last_name_2,...)\"), \"\\n    String result = ar.result();\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Failure: \\\"\"), \" + ar.cause().getMessage());\\n  }\\n});\\n\")), mdx(\"h3\", {\n    \"id\": \"cursor-api\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#cursor-api\"\n  })), \"Cursor API\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ResultSet\"), \" ob\\xADject has been en\\xADhanced with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ResultSet#several\"), \" method, al\\xADlow\\xADing you to ob\\xADtain sev\\xADeral rows at once:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"resultSet.several(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"30\"), \", ar -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    List<Row> result = ar.result();\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Failure: \\\"\"), \" + ar.cause().getMessage());\\n  }\\n});\\n\")), mdx(\"p\", null, \"A very use\\xADful fea\\xADture for re\\xADsult batch it\\xADer\\xADa\\xADtions with\\xADout re\\xADsort\\xADing to stream\\xADing or fetch\\xADing all rows in mem\\xADory.\"), mdx(\"h3\", {\n    \"id\": \"client-lifecyle\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#client-lifecyle\"\n  })), \"Client lifecyle\"), mdx(\"p\", null, \"The client life\\xADcyle has been re\\xADvis\\xADited in 3.7.\"), mdx(\"p\", null, \"Pre\\xADvi\\xADously users ex\\xADpected to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"connect\"), \" man\\xADu\\xADally be\\xADfore send\\xADing re\\xADquests. It was also pos\\xADsi\\xADble to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disconnect\"), \" a shared client\\nthus fail\\xADing re\\xADquests sent from an\\xADother ver\\xADti\\xADcle or part of the ap\\xADpli\\xADca\\xADtion.\"), mdx(\"p\", null, \"Now it is no longer re\\xADquired to man\\xADu\\xADally con\\xADnect a client (in fact, the method has been re\\xADmoved).\"), mdx(\"p\", null, \"As soon as you re\\xADtrieve an in\\xADstance you can start using it, the life\\xADcyle is au\\xADto\\xADmat\\xADi\\xADcally man\\xADaged:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"CassandraClientOptions options = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" CassandraClientOptions()\\n  .addContactPoint(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"node1.address\\\"\"), \")\\n  .addContactPoint(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"node2.address\\\"\"), \")\\n  .addContactPoint(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"node3.address\\\"\"), \")\\n  .setKeyspace(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my_keyspace\\\"\"), \");\\nCassandraClient sharedClient = CassandraClient.createShared(vertx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"sharedClientName\\\"\"), \", options);\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Start sending requests to Cassandra with the client instance\"), \"\\n\")), mdx(\"p\", null, \"Sim\\xADi\\xADlarly, when the new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"close\"), \" method is in\\xADvoked on a shared client, only the last ac\\xADtive in\\xADstance will ac\\xADtu\\xADally dis\\xADcon\\xADnect from Cas\\xADsan\\xADdra:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Disconnects only if this is the last running instance of the shared client\"), \"\\nsharedClient.close();\\n\")), mdx(\"h2\", {\n    \"id\": \"vertx-redis-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-redis-client\"\n  })), \"Vert.x Redis Client\"), mdx(\"p\", null, \"The Vert.x Redis client has been re\\xADworked in\\xADter\\xADnally and pro\\xADvides now a new (more evo\\xADlu\\xADtion friendly) API.\"), mdx(\"p\", null, \"The cur\\xADrent API had the lim\\xADi\\xADta\\xADtion of being man\\xADu\\xADally crafted after the redis API and in\\xADvolved many non con\\xADtro\\xADlable fea\\xADtures\\nsuch as auto re\\xADcon\\xADnect, un\\xADlim\\xADited buffer\\xADing of re\\xADquests, etc\\u2026 The new API of\\xADfers a more \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"vert.x-y\"), \" ex\\xADpe\\xADri\\xADence.\"), mdx(\"p\", null, \"It just ex\\xADposes the base client:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Redis\\n  .createClient(vertx, inetSocketAddress(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"7006\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"127.0.0.1\\\"\"), \"))\\n  .connect(create -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"final\"), \" Redis redis = create.result();\\n\\n    redis.send(Request.cmd(Command.PING), send -> {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// ... should reply with PONG\"), \"\\n    });\\n  });\\n\")), mdx(\"p\", null, \"This has the ben\\xADe\\xADfits that you can now con\\xADnect to Redis in any of it\\u2019s op\\xADer\\xADa\\xADtion modes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sin\\xADgle server\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HA mode\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clus\\xADter mode\")), mdx(\"p\", null, \"The API is de\\xADcou\\xADpled from the hand\\xADcrafted com\\xADmands, which means that you can use new fea\\xADtures such as:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://redis.io/commands#stream\"\n  }), \"streams\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://redis.io/commands#hyperloglog\"\n  }), \"hy\\xADper\\xADloglog\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/RedisLabsModules\"\n  }), \"any ex\\xADten\\xADsion mod\\xADule\"))), mdx(\"p\", null, \"A gen\\xADer\\xADated helper \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RedisAPI\"), \" is avail\\xADable that can wrap the client to pro\\xADvide a sim\\xADi\\xADlar ex\\xADpe\\xADri\\xADence to the old API.\"), mdx(\"p\", null, \"The main dif\\xADfer\\xADence is that this new wrap\\xADper is gen\\xADer\\xADated from the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://redis.io/commands/command\"\n  }), \"COM\\xADMAND\"), \" com\\xADmand,\\nso the cor\\xADrect API it al\\xADways ex\\xADposed:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"RedisAPI redis = RedisAPI.api(client);\\n\\nredis.set(Arrays.asList(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"key1\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"value1\\\"\"), \"), set -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// ...\"), \"\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"vertx-amqp-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-amqp-client\"\n  })), \"Vert.x AMQP Client\"), mdx(\"p\", null, \"The Vert.x AMQP client al\\xADlows re\\xADceiv\\xADing and send\\xADing AMQP mes\\xADsages. It su\\xADper\\xADsedes the cur\\xADrent AMQP bridge and pro\\xADvide an API more\\nflex\\xADi\\xADble and very much user-\\u200Bfriendly.\"), mdx(\"p\", null, \"The Vert.x AMQP client al\\xADlows:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Con\\xADnect\\xADing to an AMQP bro\\xADker or router - SASL and TLS con\\xADnec\\xADtions are sup\\xADported\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Con\\xADsum\\xADing mes\\xADsage from a queue or a topic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Send\\xADing mes\\xADsages to a queue or a topic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check\\xADing ac\\xADknowl\\xADedge\\xADment for sent mes\\xADsages\")), mdx(\"p\", null, \"The AMQP 1.0 pro\\xADto\\xADcol sup\\xADport durable sub\\xADscrip\\xADtions, per\\xADsis\\xADtence, se\\xADcu\\xADrity, con\\xADver\\xADsa\\xADtions, so\\xADphis\\xADti\\xADcated rout\\xADing\\u2026 More\\nde\\xADtails on the pro\\xADto\\xADcol can be found on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.amqp.org/\"\n  }), \"AMQP home\\xADpage\"), \".\"), mdx(\"p\", null, \"The Vert.x AMQP client is based on Vert.x Pro\\xADton. If you need fine-\\u200Bgrain con\\xADtrol, we rec\\xADom\\xADmend using\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-proton\"\n  }), \"Vert.x Pro\\xADton\"), \" di\\xADrectly.\"), mdx(\"p\", null, \"To use this new mod\\xADule, add the fol\\xADlow\\xADing to the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"de\\xADpen\\xADden\\xADcies\"), \" sec\\xADtion of your Maven POM file:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-xml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"io.vertx\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"vertx-amqp-client\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"3.7.0\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n\")), mdx(\"p\", null, \"Or, if you use Gra\\xADdle:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-gradle\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"compile\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx:vertx-amqp-client:3.7.0'\"), \"\\n\")), mdx(\"p\", null, \"Then, you can con\\xADnect to an AMQP bro\\xADker:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"AmqpClientOptions options = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" AmqpClientOptions()\\n      .setHost(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"localhost\\\"\"), \")\\n      .setPort(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"5672\"), \")\\n      .setUsername(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"user\\\"\"), \")\\n      .setPassword(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"secret\\\"\"), \");\\n    \\nAmqpClient client = AmqpClient.create(vertx, options);\\n\\nclient.connect(ar -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.failed()) {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Unable to connect to the broker\\\"\"), \");\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Connection succeeded\\\"\"), \");\\n    AmqpConnection connection = ar.result();\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// You can create receivers and senders\"), \"\\n    connection.createReceiver(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my-queue\\\"\"), \",\\n      msg -> {\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// called on every received messages\"), \"\\n        System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Received \\\"\"), \" + msg.bodyAsString());\\n      },\\n      done -> {\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (done.failed()) {\\n          System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Unable to create receiver\\\"\"), \");\\n        } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n          AmqpReceiver receiver = done.result();\\n        }\\n      }\\n    );\\n\\n    connection.createSender(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my-queue\\\"\"), \", done -> {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (done.failed()) {\\n        System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Unable to create a sender\\\"\"), \");\\n      } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n        AmqpSender sender = done.result();\\n        sender.send(AmqpMessage.create().withBody(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"hello\\\"\"), \").build());\\n      }\\n    });\\n\\n  }\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"stream-pipes\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#stream-pipes\"\n  })), \"Stream pipes\"), mdx(\"p\", null, \"When it comes to stream\\xADing, back-\\u200Bpressure is some\\xADthing you need to care about.\"), mdx(\"p\", null, \"You have very much likely heard or used the Vert.x \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pump\"), \" API to trans\\xADfer data from a read stream to a write stream while\\nre\\xADspect\\xADing the write stream back-\\u200Bpressure.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pipe\"), \" a new API su\\xADper\\xADsed\\xADing the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pump\"), \" to achieve the same ef\\xADfect and even more, it acts like a pump and han\\xADdles for you\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"read stream pause/re\\xADsume\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"write stream ter\\xADmi\\xADna\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stream fail\\xADures han\\xADdling\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"asyn\\xADchro\\xADnous re\\xADsult upon stream\\xADing com\\xADple\\xADtion\")), mdx(\"p\", null, \"You can trans\\xADfer a read stream to a write stream sim\\xADply, the write stream will be ended upon com\\xADple\\xADtion of the stream\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"readStream.pipeTo(writeStream);\\n\")), mdx(\"p\", null, \"You can also be no\\xADti\\xADfied when the pipe com\\xADpletes:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"readStream.pipeTo(writeStream, ar -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"done\\\"\"), \");\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"failed \\\"\"), \" + ar.cause());\\n  }\\n});\\n\")), mdx(\"p\", null, \"Cre\\xADat\\xADing and using an asyn\\xADchro\\xADnous pipe is easy\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// The read stream will be paused until the pipe is used\"), \"\\nPipe<Buffer> pipe = readStream.pipe();\\ngetAsyncPipe(ar -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    pipe.to(writeStream);\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    pipe.close();\\n  }\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"kafka-admin-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#kafka-admin-client\"\n  })), \"Kafka admin client\"), mdx(\"p\", null, \"The new ver\\xADsion brings a Vert.x based first im\\xADple\\xADmen\\xADta\\xADtion of the na\\xADtive \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://kafka.apache.org/documentation/#adminapi\"\n  }), \"Kafka Admin Client API\"), \"\\nwhich are in Java, in\\xADstead of Scala used in the pre\\xADvi\\xADous ver\\xADsion.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AdminUtils\"), \" is now dep\\xADre\\xADcated and the new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"KafkaAdminClient\"), \" is avail\\xADable in\\xADstead.\\nIt al\\xADlows to re\\xADmove the last Scala ar\\xADti\\xADfact de\\xADpen\\xADdency.\"), mdx(\"p\", null, \"While the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AdminUtils\"), \" im\\xADple\\xADmen\\xADta\\xADtion needs to con\\xADnect to Zookeeper for ad\\xADmin\\xADis\\xADtra\\xADtion pur\\xADposes,\\nthe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"KafkaAdminClient\"), \" only uses the Kafka boot\\xADstrap bro\\xADkers con\\xADnec\\xADtion.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Properties config = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" Properties();\\nconfig.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my-kafka-broker:9092\\\"\"), \");\\n\\nKafkaAdminClient adminClient = KafkaAdminClient.create(vertx, config);\\n\")), mdx(\"p\", null, \"The fea\\xADtures cur\\xADrently sup\\xADported are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cre\\xADate and delete top\\xADics\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"list all the top\\xADics\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"de\\xADscribe top\\xADics for get\\xADting in\\xADfor\\xADma\\xADtion about leader par\\xADti\\xADtion, fol\\xADlower repli\\xADcas and ISR (in-\\u200Bsync repli\\xADcas) list\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"alter top\\xADics con\\xADfig\\xADu\\xADra\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"list all con\\xADsumer groups\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"de\\xADscribe con\\xADsumer groups for get\\xADting in\\xADfor\\xADma\\xADtion like the state, the co\\xADor\\xADdi\\xADna\\xADtor host, con\\xADsumers per top\\xADics and so on\")), mdx(\"p\", null, \"If you are using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AdminUtils\"), \" today, con\\xADsider mi\\xADgrate to the new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"KafkaAdminClient\"), \" be\\xADcause the for\\xADmer will be re\\xADmoved in Vert.x 4.0.\"), mdx(\"h2\", {\n    \"id\": \"and-more\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#and-more\"\n  })), \"And more\\u2026\"), mdx(\"p\", null, \"Here are some other im\\xADpor\\xADtant im\\xADprove\\xADments you can find in this re\\xADlease:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Shared data struc\\xADtures avail\\xADable in local-\\u200Bonly mode even when Vert.x is clus\\xADtered\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JSON de\\xADcod\\xADing with\\xADout prior knowl\\xADedge of the struc\\xADture (ob\\xADject, array, string, \\u2026etc)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In\\xADfin\\xADis\\xADpan Clus\\xADter Man\\xADager up\\xADgraded to \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://infinispan.org\"\n  }), \"In\\xADfin\\xADis\\xADpan\"), \" 9.4.10.Final\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"And ob\\xADvi\\xADously we have the usual bug fixes!\")), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.7.0-Release-Notes\"\n  }), \"3.7.0 re\\xADlease notes\"), \" can be found on the wiki, as well as the\\nlist of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.7.0-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\")), mdx(\"p\", null, \"Docker im\\xADages are avail\\xADable on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \".\"), mdx(\"p\", null, \"The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion can be down\\xADloaded on the web\\xADsite but is also avail\\xADable from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"The event bus client using the SockJS bridge is avail\\xADable from:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"NPM\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"Bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"We\\xADb\\xADJars\"))), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.7.0%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.7.0/view\"\n  }), \"Bin\\xADtray\"), \".\"), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(Link, {\n    href: \"/community\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"chan\\xADnels\")), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are ex­tremely pleased to an­nounce that the Eclipse Vert.x ver­sion 3.7.0 has been re­leased.</p><p>It is an ex­cit­ing mile­stone for a cou­ple of rea­sons:</p><ol><li>it comes with great new fea­tures like the <a href=\"#vertx-web-graphql\">GraphQL ex­ten­sion for Vert.x Web</a>.</li><li>this is the last minor ver­sion be­fore Vert.x 4! </li></ol><p>Be­fore we go throught the most no­table new fea­tures, we would like to thank all the con­trib­u­tors.\nYour par­tic­i­pa­tion has been es­sen­tial to this achieve­ment.</p><h2 id=\"vertx-web-graphql\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-web-graphql\"></a>Vert.x Web GraphQL</h2><p>Vert.x Web GraphQL ex­tends Vert.x Web with the <a href=\"https://www.graphql-java.com\">GraphQL-​Java</a> li­brary so that you can build a GraphQL server.</p><p>To use this new mod­ule, add the fol­low­ing to the <em>de­pen­den­cies</em> sec­tion of your Maven POM file:</p><pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-web-graphql<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.7.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre><p>Or, if you use Gra­dle:</p><pre><code class=\"hljs language-gradle\"><span class=\"hljs-keyword\">compile</span> <span class=\"hljs-string\">&#x27;io.vertx:vertx-web-graphql:3.7.0&#x27;</span>\n</code></pre><p>Then cre­ate a Vert.x Web <code>Route</code> and a <code>GraphQLHandler</code> for it:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Setup the GraphQL-Java object</span>\nGraphQL graphQL = setupGraphQLJava();\n<span class=\"hljs-comment\">// Use it to handle requests on a Vert.x Web route </span>\nrouter.route(<span class=\"hljs-string\">&quot;/graphql&quot;</span>).handler(GraphQLHandler.create(graphQL));\n</code></pre><p>The GraphQL han­dler sup­ports out of the box:</p><ul><li>query con­text cus­tomiza­tion</li><li>GraphQL-​Java data load­ers</li><li>batch­ing on <code>POST</code> re­quests (com­pat­i­ble with the <a href=\"https://www.apollographql.com/docs/link/links/batch-http.html\"><code>apollo-link-batch-http</code></a> trans­port)</li></ul><p>For de­tailed usage in­struc­tions, please refer to the <a href=\"/docs/vertx-web-graphql/java/\">Vert.x Web GraphQL doc­u­men­ta­tion</a>.</p><h2 id=\"vertx-cassandra-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-cassandra-client\"></a>Vert.x Cassandra Client</h2><h3 id=\"object-mapper-support\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#object-mapper-support\"></a>Object mapper support</h3><p>Vert.x Cas­san­dra Client now sup­ports the <a href=\"https://github.com/datastax/java-driver/tree/3.x/manual/object_mapper\">cassandra-​driver-mapping</a> mod­ule.</p><p>To en­able this fea­ture, you need to up­date your class­path by adding:</p><pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.datastax.cassandra<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>cassandra-driver-mapping<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.7.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre><p>Then for a given en­tity: </p><pre><code class=\"hljs language-java\"><span class=\"hljs-meta\">@Table(keyspace = &quot;test&quot;, name = &quot;users&quot;)</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">User</span> </span>{\n  <span class=\"hljs-meta\">@PartitionKey</span> String name;\n  <span class=\"hljs-comment\">// ... other fields and methods </span>\n}\n</code></pre><p>You can re­trieve a map­per and ex­e­cute CRUD op­er­a­tions:</p><pre><code class=\"hljs language-java\">VertxMappingManager manager = VertxMappingManager.create(cassandraClient);\nVertxMapper&lt;User&gt; mapper = manager.mapper(User.class, vertx);\nmapper.save(<span class=\"hljs-keyword\">new</span> User(<span class=\"hljs-string\">&quot;john&quot;</span>, hander -&gt; {}));\n</code></pre><h3 id=\"collector-api\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#collector-api\"></a>Collector API</h3><p>The fea­ture al­lows to use Java <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collector.html\">col­lec­tors</a> for query re­sults:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Create a collector projecting a row set to a string in the form (last_name_1,last_name_2,...)</span>\nCollector&lt;Row, ?, String&gt; collector = Collectors.mapping(\n    row -&gt; row.getString(<span class=\"hljs-string\">&quot;last_name&quot;</span>),\n    Collectors.joining(<span class=\"hljs-string\">&quot;,&quot;</span>, <span class=\"hljs-string\">&quot;(&quot;</span>, <span class=\"hljs-string\">&quot;)&quot;</span>)\n);\n\n<span class=\"hljs-comment\">// Run the query with the collector</span>\nclient.execute(<span class=\"hljs-string\">&quot;SELECT * FROM users&quot;</span>, collector, ar -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    <span class=\"hljs-comment\">// Result in the form (last_name_1,last_name_2,...)</span>\n    String result = ar.result();\n  } <span class=\"hljs-keyword\">else</span> {\n    System.out.println(<span class=\"hljs-string\">&quot;Failure: &quot;</span> + ar.cause().getMessage());\n  }\n});\n</code></pre><h3 id=\"cursor-api\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#cursor-api\"></a>Cursor API</h3><p>The <code>ResultSet</code> ob­ject has been en­hanced with <code>ResultSet#several</code> method, al­low­ing you to ob­tain sev­eral rows at once:</p><pre><code class=\"hljs language-java\">resultSet.several(<span class=\"hljs-number\">30</span>, ar -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    List&lt;Row&gt; result = ar.result();\n  } <span class=\"hljs-keyword\">else</span> {\n    System.out.println(<span class=\"hljs-string\">&quot;Failure: &quot;</span> + ar.cause().getMessage());\n  }\n});\n</code></pre><p>A very use­ful fea­ture for re­sult batch it­er­a­tions with­out re­sort­ing to stream­ing or fetch­ing all rows in mem­ory.</p><h3 id=\"client-lifecyle\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#client-lifecyle\"></a>Client lifecyle</h3><p>The client life­cyle has been re­vis­ited in 3.7.</p><p>Pre­vi­ously users ex­pected to <code>connect</code> man­u­ally be­fore send­ing re­quests. It was also pos­si­ble to <code>disconnect</code> a shared client\nthus fail­ing re­quests sent from an­other ver­ti­cle or part of the ap­pli­ca­tion.</p><p>Now it is no longer re­quired to man­u­ally con­nect a client (in fact, the method has been re­moved).</p><p>As soon as you re­trieve an in­stance you can start using it, the life­cyle is au­to­mat­i­cally man­aged:</p><pre><code class=\"hljs language-java\">CassandraClientOptions options = <span class=\"hljs-keyword\">new</span> CassandraClientOptions()\n  .addContactPoint(<span class=\"hljs-string\">&quot;node1.address&quot;</span>)\n  .addContactPoint(<span class=\"hljs-string\">&quot;node2.address&quot;</span>)\n  .addContactPoint(<span class=\"hljs-string\">&quot;node3.address&quot;</span>)\n  .setKeyspace(<span class=\"hljs-string\">&quot;my_keyspace&quot;</span>);\nCassandraClient sharedClient = CassandraClient.createShared(vertx, <span class=\"hljs-string\">&quot;sharedClientName&quot;</span>, options);\n<span class=\"hljs-comment\">// Start sending requests to Cassandra with the client instance</span>\n</code></pre><p>Sim­i­larly, when the new <code>close</code> method is in­voked on a shared client, only the last ac­tive in­stance will ac­tu­ally dis­con­nect from Cas­san­dra:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Disconnects only if this is the last running instance of the shared client</span>\nsharedClient.close();\n</code></pre><h2 id=\"vertx-redis-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-redis-client\"></a>Vert.x Redis Client</h2><p>The Vert.x Redis client has been re­worked in­ter­nally and pro­vides now a new (more evo­lu­tion friendly) API.</p><p>The cur­rent API had the lim­i­ta­tion of being man­u­ally crafted after the redis API and in­volved many non con­tro­lable fea­tures\nsuch as auto re­con­nect, un­lim­ited buffer­ing of re­quests, etc… The new API of­fers a more <em>vert.x-y</em> ex­pe­ri­ence.</p><p>It just ex­poses the base client:</p><pre><code class=\"hljs language-java\">Redis\n  .createClient(vertx, inetSocketAddress(<span class=\"hljs-number\">7006</span>, <span class=\"hljs-string\">&quot;127.0.0.1&quot;</span>))\n  .connect(create -&gt; {\n    <span class=\"hljs-keyword\">final</span> Redis redis = create.result();\n\n    redis.send(Request.cmd(Command.PING), send -&gt; {\n      <span class=\"hljs-comment\">// ... should reply with PONG</span>\n    });\n  });\n</code></pre><p>This has the ben­e­fits that you can now con­nect to Redis in any of it’s op­er­a­tion modes:</p><ul><li>Sin­gle server</li><li>HA mode</li><li>Clus­ter mode</li></ul><p>The API is de­cou­pled from the hand­crafted com­mands, which means that you can use new fea­tures such as:</p><ul><li><a href=\"https://redis.io/commands#stream\">streams</a></li><li><a href=\"https://redis.io/commands#hyperloglog\">hy­per­loglog</a></li><li><a href=\"https://github.com/RedisLabsModules\">any ex­ten­sion mod­ule</a></li></ul><p>A gen­er­ated helper <code>RedisAPI</code> is avail­able that can wrap the client to pro­vide a sim­i­lar ex­pe­ri­ence to the old API.</p><p>The main dif­fer­ence is that this new wrap­per is gen­er­ated from the <a href=\"https://redis.io/commands/command\">COM­MAND</a> com­mand,\nso the cor­rect API it al­ways ex­posed:</p><pre><code class=\"hljs language-java\">RedisAPI redis = RedisAPI.api(client);\n\nredis.set(Arrays.asList(<span class=\"hljs-string\">&quot;key1&quot;</span>, <span class=\"hljs-string\">&quot;value1&quot;</span>), set -&gt; {\n  <span class=\"hljs-comment\">// ...</span>\n});\n</code></pre><h2 id=\"vertx-amqp-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-amqp-client\"></a>Vert.x AMQP Client</h2><p>The Vert.x AMQP client al­lows re­ceiv­ing and send­ing AMQP mes­sages. It su­per­sedes the cur­rent AMQP bridge and pro­vide an API more\nflex­i­ble and very much user-​friendly.</p><p>The Vert.x AMQP client al­lows:</p><ul><li>Con­nect­ing to an AMQP bro­ker or router - SASL and TLS con­nec­tions are sup­ported</li><li>Con­sum­ing mes­sage from a queue or a topic</li><li>Send­ing mes­sages to a queue or a topic</li><li>Check­ing ac­knowl­edge­ment for sent mes­sages</li></ul><p>The AMQP 1.0 pro­to­col sup­port durable sub­scrip­tions, per­sis­tence, se­cu­rity, con­ver­sa­tions, so­phis­ti­cated rout­ing… More\nde­tails on the pro­to­col can be found on the <a href=\"https://www.amqp.org/\">AMQP home­page</a>.</p><p>The Vert.x AMQP client is based on Vert.x Pro­ton. If you need fine-​grain con­trol, we rec­om­mend using\n<a href=\"https://github.com/vert-x3/vertx-proton\">Vert.x Pro­ton</a> di­rectly.</p><p>To use this new mod­ule, add the fol­low­ing to the <em>de­pen­den­cies</em> sec­tion of your Maven POM file:</p><pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-amqp-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.7.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre><p>Or, if you use Gra­dle:</p><pre><code class=\"hljs language-gradle\"><span class=\"hljs-keyword\">compile</span> <span class=\"hljs-string\">&#x27;io.vertx:vertx-amqp-client:3.7.0&#x27;</span>\n</code></pre><p>Then, you can con­nect to an AMQP bro­ker:</p><pre><code class=\"hljs language-java\">AmqpClientOptions options = <span class=\"hljs-keyword\">new</span> AmqpClientOptions()\n      .setHost(<span class=\"hljs-string\">&quot;localhost&quot;</span>)\n      .setPort(<span class=\"hljs-number\">5672</span>)\n      .setUsername(<span class=\"hljs-string\">&quot;user&quot;</span>)\n      .setPassword(<span class=\"hljs-string\">&quot;secret&quot;</span>);\n    \nAmqpClient client = AmqpClient.create(vertx, options);\n\nclient.connect(ar -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.failed()) {\n    System.out.println(<span class=\"hljs-string\">&quot;Unable to connect to the broker&quot;</span>);\n  } <span class=\"hljs-keyword\">else</span> {\n    System.out.println(<span class=\"hljs-string\">&quot;Connection succeeded&quot;</span>);\n    AmqpConnection connection = ar.result();\n\n    <span class=\"hljs-comment\">// You can create receivers and senders</span>\n    connection.createReceiver(<span class=\"hljs-string\">&quot;my-queue&quot;</span>,\n      msg -&gt; {\n        <span class=\"hljs-comment\">// called on every received messages</span>\n        System.out.println(<span class=\"hljs-string\">&quot;Received &quot;</span> + msg.bodyAsString());\n      },\n      done -&gt; {\n        <span class=\"hljs-keyword\">if</span> (done.failed()) {\n          System.out.println(<span class=\"hljs-string\">&quot;Unable to create receiver&quot;</span>);\n        } <span class=\"hljs-keyword\">else</span> {\n          AmqpReceiver receiver = done.result();\n        }\n      }\n    );\n\n    connection.createSender(<span class=\"hljs-string\">&quot;my-queue&quot;</span>, done -&gt; {\n      <span class=\"hljs-keyword\">if</span> (done.failed()) {\n        System.out.println(<span class=\"hljs-string\">&quot;Unable to create a sender&quot;</span>);\n      } <span class=\"hljs-keyword\">else</span> {\n        AmqpSender sender = done.result();\n        sender.send(AmqpMessage.create().withBody(<span class=\"hljs-string\">&quot;hello&quot;</span>).build());\n      }\n    });\n\n  }\n});\n</code></pre><h2 id=\"stream-pipes\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#stream-pipes\"></a>Stream pipes</h2><p>When it comes to stream­ing, back-​pressure is some­thing you need to care about.</p><p>You have very much likely heard or used the Vert.x <code>Pump</code> API to trans­fer data from a read stream to a write stream while\nre­spect­ing the write stream back-​pressure.</p><p>The <code>Pipe</code> a new API su­per­sed­ing the <code>Pump</code> to achieve the same ef­fect and even more, it acts like a pump and han­dles for you</p><ul><li>read stream pause/re­sume</li><li>write stream ter­mi­na­tion</li><li>stream fail­ures han­dling</li><li>asyn­chro­nous re­sult upon stream­ing com­ple­tion</li></ul><p>You can trans­fer a read stream to a write stream sim­ply, the write stream will be ended upon com­ple­tion of the stream</p><pre><code class=\"hljs language-java\">readStream.pipeTo(writeStream);\n</code></pre><p>You can also be no­ti­fied when the pipe com­pletes:</p><pre><code class=\"hljs language-java\">readStream.pipeTo(writeStream, ar -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    System.out.println(<span class=\"hljs-string\">&quot;done&quot;</span>);\n  } <span class=\"hljs-keyword\">else</span> {\n    System.out.println(<span class=\"hljs-string\">&quot;failed &quot;</span> + ar.cause());\n  }\n});\n</code></pre><p>Cre­at­ing and using an asyn­chro­nous pipe is easy</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// The read stream will be paused until the pipe is used</span>\nPipe&lt;Buffer&gt; pipe = readStream.pipe();\ngetAsyncPipe(ar -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    pipe.to(writeStream);\n  } <span class=\"hljs-keyword\">else</span> {\n    pipe.close();\n  }\n});\n</code></pre><h2 id=\"kafka-admin-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#kafka-admin-client\"></a>Kafka admin client</h2><p>The new ver­sion brings a Vert.x based first im­ple­men­ta­tion of the na­tive <a href=\"https://kafka.apache.org/documentation/#adminapi\">Kafka Admin Client API</a>\nwhich are in Java, in­stead of Scala used in the pre­vi­ous ver­sion.</p><p>The <code>AdminUtils</code> is now dep­re­cated and the new <code>KafkaAdminClient</code> is avail­able in­stead.\nIt al­lows to re­move the last Scala ar­ti­fact de­pen­dency.</p><p>While the <code>AdminUtils</code> im­ple­men­ta­tion needs to con­nect to Zookeeper for ad­min­is­tra­tion pur­poses,\nthe <code>KafkaAdminClient</code> only uses the Kafka boot­strap bro­kers con­nec­tion.</p><pre><code class=\"hljs language-java\">Properties config = <span class=\"hljs-keyword\">new</span> Properties();\nconfig.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, <span class=\"hljs-string\">&quot;my-kafka-broker:9092&quot;</span>);\n\nKafkaAdminClient adminClient = KafkaAdminClient.create(vertx, config);\n</code></pre><p>The fea­tures cur­rently sup­ported are:</p><ul><li>cre­ate and delete top­ics</li><li>list all the top­ics</li><li>de­scribe top­ics for get­ting in­for­ma­tion about leader par­ti­tion, fol­lower repli­cas and ISR (in-​sync repli­cas) list</li><li>alter top­ics con­fig­u­ra­tion</li><li>list all con­sumer groups</li><li>de­scribe con­sumer groups for get­ting in­for­ma­tion like the state, the co­or­di­na­tor host, con­sumers per top­ics and so on</li></ul><p>If you are using the <code>AdminUtils</code> today, con­sider mi­grate to the new <code>KafkaAdminClient</code> be­cause the for­mer will be re­moved in Vert.x 4.0.</p><h2 id=\"and-more\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#and-more\"></a>And more…</h2><p>Here are some other im­por­tant im­prove­ments you can find in this re­lease:</p><ul><li>Shared data struc­tures avail­able in local-​only mode even when Vert.x is clus­tered</li><li>JSON de­cod­ing with­out prior knowl­edge of the struc­ture (ob­ject, array, string, …etc)</li><li>In­fin­is­pan Clus­ter Man­ager up­graded to <a href=\"https://infinispan.org\">In­fin­is­pan</a> 9.4.10.Final</li><li>And ob­vi­ously we have the usual bug fixes!</li></ul><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/3.7.0-Release-Notes\">3.7.0 re­lease notes</a> can be found on the wiki, as well as the\nlist of <a href=\"https://github.com/vert-x3/wiki/wiki/3.7.0-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a></p><p>Docker im­ages are avail­able on <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>.</p><p>The Vert.x dis­tri­b­u­tion can be down­loaded on the web­site but is also avail­able from <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>The event bus client using the SockJS bridge is avail­able from:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">NPM</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">Bower</a></li><li><a href=\"http://www.webjars.org/\">We­b­Jars</a></li></ul><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.7.0%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.7.0/view\">Bin­tray</a>.</p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"/community/\">chan­nels</a>.</p>","scope":{}}},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.7.1","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.7.1, a bug fix release of Vert.x 3.7.x and a few small features."},"date":"2019-05-27","slug":"eclipse-vert-x-3-7-1"},"nextPost":{"meta":{"title":"Eclipse Vert.x 3.6.3","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.6.3, a bug fix release of Vert.x 3.6.x."},"date":"2019-02-04","slug":"eclipse-vert-x-3-6-3"},"relatedPosts":[{"meta":{"title":"Building services and APIs with AMQP 1.0","category":"guides","authors":[{"name":"Jakub Scholz","github_id":"scholzj"}],"summary":"Microservices and APIs are everywhere. Everyone talks about them, presentation slides are full of them ... some people are actually even building them."},"date":"2017-01-25","slug":"building-services-and-apis-with-amqp-1-0"},{"meta":{"title":"Eclipse Vert.x 4 milestone 5 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are extremely pleased to announce the fifth 4.0 milestone release of Eclipse Vert.x. This release aims to provide a reliable distribution of the current development of Vert.x 4."},"date":"2020-06-10","slug":"eclipse-vert-x-4-milestone-5-released"},{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"}]},"__N_SSG":true}