{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Presentation of the Vert.x-Swagger project","category":"guides","authors":[{"name":"Florent Chamfroy","github_id":"phiz71"}],"summary":"This post is an introduction to the Vert.x-Swagger project, and describe how to use the Swagger-Codegen plugin and the SwaggerRouter class."},"date":"2017-05-22","slug":"presentation-of-the-vert-x-swagger-project","readingTime":{"text":"5 min read","minutes":4.705,"time":282300,"words":941},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This post is an in\\xADtro\\xADduc\\xADtion to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/phiz71/vertx-swagger\"\n  }), \"Vert.x-\\u200BSwagger\"), \" project, and de\\xADscribe how to use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Swagger-Codegen\"), \" plug\\xADin and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SwaggerRouter\"), \" class.\"), mdx(\"h2\", {\n    \"id\": \"eclipse-vertx--swagger\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#eclipse-vertx--swagger\"\n  })), \"Eclipse Vert.x & Swagger\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/vertx-core/java/\"\n  }), \"Vert.x\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/vertx-web/java/\"\n  }), \"Vert.x Web\"), \" are very con\\xADve\\xADnient to write REST API and es\\xADpe\\xADcially the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\"\n  }), \"Router\"), \" which is very use\\xADful to man\\xADage all re\\xADsources of an API.\"), mdx(\"p\", null, \"But when I start a new API, I usu\\xADally use the \\u201Cdesign-\\u200Bfirst\\u201D ap\\xADproach and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://swagger.io/specification/\"\n  }), \"Swag\\xADger\"), \" is my best friend to de\\xADfine what my API is sup\\xADposed to do. And then, comes the \\u201Cbor\\xADing\\u201D part of the job : con\\xADvert the swag\\xADger file con\\xADtent into java code. That\\u2019s al\\xADways the same : re\\xADsources, op\\xADer\\xADa\\xADtions, mod\\xADels\\u2026\"), mdx(\"p\", null, \"For\\xADtu\\xADnately, Swag\\xADger pro\\xADvides a code\\xADgen tool : \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/swagger-api/swagger-codegen\"\n  }), \"Swagger-\\u200BCodegen\"), \". With this tool, you can gen\\xADer\\xADate a server stub based on your swag\\xADger de\\xADf\\xADi\\xADn\\xADi\\xADtion file.\\nHow\\xADever, even if this gen\\xADer\\xADa\\xADtor pro\\xADvides many dif\\xADfer\\xADent lan\\xADguages and frame\\xADwork, Vert.X is miss\\xADing.\"), mdx(\"p\", null, \"This is where the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/phiz71/vertx-swagger\"\n  }), \"Vert.x-\\u200BSwagger\"), \" project comes in.\"), mdx(\"h2\", {\n    \"id\": \"the-project\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#the-project\"\n  })), \"The project\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Vert.x-\\u200BSwagger\"), \" is a maven project pro\\xADvid\\xADing 2 mod\\xADules.\"), mdx(\"h3\", {\n    \"id\": \"vertx-swagger-codegen\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-swagger-codegen\"\n  })), \"vertx-swagger-codegen\"), mdx(\"p\", null, \"It\\u2019s a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/swagger-api/swagger-codegen\"\n  }), \"Swagger-\\u200BCodegen\"), \" plug\\xADin, which add the ca\\xADpa\\xADbil\\xADity of gen\\xADer\\xADat\\xADing a Java Vert.x Web\\xADServer to the gen\\xADer\\xADa\\xADtor.\"), mdx(\"p\", null, \"The gen\\xADer\\xADated server mainly con\\xADtains :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"POJOs for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"definitions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"one Ver\\xADti\\xADcle per \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tag\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"one Main\\xADVer\\xADti\\xADcle, which man\\xADage oth\\xADers APIVer\\xADti\\xADcle and start an HttpServer.\")), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"The Main\\xADVer\\xADti\\xADcle use \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"vertx-\\u200Bswagger-router\"))), mdx(\"h3\", {\n    \"id\": \"vertx-swagger-router\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-swagger-router\"\n  })), \"vertx-swagger-router\"), mdx(\"p\", null, \"The main class of this mod\\xADule is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SwaggerRouter\"), \". It\\u2019s more or less a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Fac\\xADtory\"), \" (and maybe I should re\\xADname the class) that can cre\\xADate a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\"\n  }), \"Router\"), \", using the swag\\xADger de\\xADf\\xADi\\xADn\\xADi\\xADtion file to con\\xADfig\\xADure all the routes. For each route, it ex\\xADtracts pa\\xADra\\xADme\\xADters from the re\\xADquest (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Query\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Path\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Header\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Body\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Form\"), \") and send them on the event\\xADBus, using ei\\xADther the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"operationId\"), \" as the ad\\xADdress or a com\\xADputed id (just a pa\\xADra\\xADme\\xADter in the con\\xADstruc\\xADtor).\"), mdx(\"h2\", {\n    \"id\": \"let-see-how-it-works\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#let-see-how-it-works\"\n  })), \"Let see how it works\"), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"For this post, I will use a sim\\xADpli\\xADfied swag\\xADger file but you can find a more com\\xADplex ex\\xADam\\xADple \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/phiz71/vertx-swagger/tree/master/sample/petstore-vertx-server\"\n  }), \"here\"), \" based on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://petstore.swagger.io/\"\n  }), \"pet\\xADstore\"), \" swag\\xADger file\")), mdx(\"h3\", {\n    \"id\": \"generating-the-server\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#generating-the-server\"\n  })), \"Generating the server\"), mdx(\"p\", null, \"First, choose your swag\\xADger de\\xADf\\xADi\\xADn\\xADi\\xADtion. Here\\u2019s a YAML File, but it could be a JSON file:\"), mdx(Gist, {\n    url: \"https://gist.github.com/phiz71/6c654f3da2d4124d3fe65e5aaaaedf55\",\n    mdxType: \"Gist\"\n  }), mdx(\"p\", null, \"Then, down\\xADload these li\\xADbraries :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://central.maven.org/maven2/io/swagger/swagger-codegen-cli/2.2.2/swagger-codegen-cli-2.2.2.jar\"\n  }), \"swagger-\\u200Bcodegen-cli\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://central.maven.org/maven2/com/github/phiz71/vertx-swagger-codegen/1.0.0/vertx-swagger-codegen-1.0.0.jar\"\n  }), \"vertx-\\u200Bswagger-codegen\"))), mdx(\"p\", null, \"Fi\\xADnally, run this com\\xADmand\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"java -cp /path/to/swagger-codegen-cli-2.2.2.jar:/path/to/vertx-swagger-codegen-1.0.0.jar io.swagger.codegen.SwaggerCodegen generate \\\\\\n  -l java-vertx \\\\\\n  -o path/to/destination/folder \\\\\\n  -i path/to/swagger/definition \\\\\\n  --group-id your.group.id \\\\\\n  --artifact-id your.artifact.id\\n\")), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"For more In\\xADfor\\xADma\\xADtion about how Swag\\xADger\\xADCode\\xADgen works, you can read this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/swagger-api/swagger-codegen#getting-started\"\n  }), \"https://github.com/swagger-\\u200Bapi/swagger-\\u200Bcodegen#getting-\\u200Bstarted\"))), mdx(\"p\", null, \"You should have some\\xADthing like that in your con\\xADsole:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-gradle\"\n  }), \"[main] INFO io.swagger.parser.Swagger20Parser - reading \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"from\"), \" ./wineCellarSwagger.yaml\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/model/\"), \"Bottle.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/model/\"), \"CellarInformation.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/verticle/\"), \"BottlesApi.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/verticle/\"), \"BottlesApiVerticle.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/verticle/I\"), \"nformationApi.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/verticle/I\"), \"nformationApiVerticle.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"resources/swagger.json\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api/MainApiVerticle.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"resources/vertx-\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"default\"), \"-jul-logging.properties\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"pom.xml\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"README.md\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \".swagger-codegen-ignore\\n\")), mdx(\"p\", null, \"And this in your des\\xADti\\xADna\\xADtion folder:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/blog/vertx-swagger-presentation/GeneratedProject.png\",\n    \"alt\": \"Generated sources\"\n  }))), mdx(\"h3\", {\n    \"id\": \"what-have-been-created-\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#what-have-been-created-\"\n  })), \"What have been created ?\"), mdx(\"p\", null, \"As you can see in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1\"), \",  the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"vertx-\\u200Bswagger-codegen\"), \" plug\\xADin has cre\\xADated one POJO by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"definition\"), \" in the swag\\xADger file.\"), mdx(\"h4\", {\n    \"id\": \"example--the-bottle-definition\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#example--the-bottle-definition\"\n  })), \"Example : the bottle definition\"), mdx(Gist, {\n    url: \"https://gist.github.com/phiz71/eabafda440b24881126089128d677121\",\n    mdxType: \"Gist\"\n  }), mdx(\"p\", null, \"In \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2a\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2b\"), \" you can find :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"an in\\xADter\\xADface which con\\xADtains a func\\xADtion per \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"operation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a ver\\xADti\\xADcle which de\\xADfines all \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"operationId\"), \" and cre\\xADate \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://vertx.io/docs/vertx-core/java/#_the_event_bus_api\"\n  }), \"Event\\xADBus\"), \" con\\xADsumers \")), mdx(\"h4\", {\n    \"id\": \"example--the-bottles-interface\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#example--the-bottles-interface\"\n  })), \"Example : the Bottles interface\"), mdx(Gist, {\n    url: \"https://gist.github.com/phiz71/be1ca2f550f44aea7fb2710b383e26ed\",\n    mdxType: \"Gist\"\n  }), mdx(\"h4\", {\n    \"id\": \"example--the-bottles-verticle\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#example--the-bottles-verticle\"\n  })), \"Example : the Bottles verticle\"), mdx(Gist, {\n    url: \"https://gist.github.com/phiz71/c0aadbb4f26ebed8e2e145d0b4a8d210\",\n    mdxType: \"Gist\"\n  }), mdx(\"h3\", {\n    \"id\": \"-and-now-\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#-and-now-\"\n  })), \"\\u2026 and now ?\"), mdx(\"p\", null, \"Line \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"23\"), \" of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BottlesApiVerticle.java\"), \", you can see this\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"BottlesApi service = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" BottlesApiImpl();\\n\")), mdx(\"p\", null, \"This line will not com\\xADpile until the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BottlesApiImpl\"), \" class is cre\\xADated.\"), mdx(\"p\", null, \"In all \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XXXAPI\"), \"Ver\\xADti\\xADcles, you will find a vari\\xADable called \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ser\\xADvice\"), \". It is a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XXXAPI\"), \" type and it is in\\xADstan\\xADci\\xADated with a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XXXAPI\"), \"Impl con\\xADtruc\\xADtor. This class does not exist yet since it is the busi\\xADness of your API.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"And so you will have to cre\\xADate these im\\xADple\\xADmen\\xADta\\xADtions.\")), mdx(\"h2\", {\n    \"id\": \"fine-but-what-if-i-dont-want-to-build-my-api-like-this-\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#fine-but-what-if-i-dont-want-to-build-my-api-like-this-\"\n  })), \"Fine, but what if I don\\u2019t want to build my API like this ?\"), mdx(\"p\", null, \"Well, Vert.x is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"un\\xADopin\\xADion\\xADated\"), \" but the way the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"vertx-\\u200Bswagger-codegen\"), \" cre\\xADates the server stub \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"is not\"), \".\\nSo if you want to im\\xADple\\xADment your API the way you want, while en\\xADjoy\\xADing dy\\xADnamic rout\\xADing based on a swag\\xADger file, the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"vertx-\\u200Bswagger-router\"), \" li\\xADbrary can be used stand\\xADalone. \"), mdx(\"p\", null, \"Just im\\xADport this jar into your project:\"), mdx(Gist, {\n    url: \"https://gist.github.com/phiz71/56e723362a1d1370c7262bff246fb087\",\n    mdxType: \"Gist\"\n  }), mdx(\"p\", null, \"You will be able to cre\\xADate your \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\"\n  }), \"Router\"), \" like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"FileSystem vertxFileSystem = vertx.fileSystem();\\nvertxFileSystem.readFile(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"***YOUR_SWAGGER_FILE***\\\"\"), \", readFile -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (readFile.succeeded()) {\\n        Swagger swagger = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" SwaggerParser().parse(readFile.result().toString(Charset.forName(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"utf-8\\\"\"), \"))); \\n        Router swaggerRouter = SwaggerRouter.swaggerRouter(Router.router(vertx), swagger, vertx.eventBus(), \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" OperationIdServiceIdResolver());\\n        [...]\\n   } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n        [...]\\n   }\\n});\\n\")), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"You can ig\\xADnore the last pa\\xADra\\xADme\\xADter in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SwaggerRouter.swaggerRouter(...)\"), \". As a re\\xADsult, ad\\xADdresses will be com\\xADputed in\\xADstead of using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"operationId\"), \" from the swag\\xADger file.\\nFor in\\xADstance, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET /bottles/{bottle_id}\"), \" will be\\xADcome \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"GET_bot\\xADtles_bottle-\\u200Bid\"))), mdx(\"h2\", {\n    \"id\": \"conclusion\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#conclusion\"\n  })), \"Conclusion\"), mdx(\"p\", null, \"Vert.x and Swag\\xADger are great tools to build and doc\\xADu\\xADment an API but using both in the same project can be painful. The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/phiz71/vertx-swagger\"\n  }), \"Vert.x-\\u200BSwagger\"), \" project was made to save time, let\\xADting the de\\xADvel\\xADop\\xADers fo\\xADcus\\xADing on busi\\xADness code.\\nIt can be seen as an API frame\\xADwork over Vert.X.\"), mdx(\"p\", null, \"You can also use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SwaggerRouter\"), \" in your own project with\\xADout using Swagger-\\u200BCodegen.\"), mdx(\"p\", null, \"In fu\\xADture re\\xADleases, more in\\xADfor\\xADma\\xADtion from the swag\\xADger file will be used to con\\xADfig\\xADure the router and cer\\xADtainly oth\\xADers lan\\xADguages will be sup\\xADported.\"), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"Though Vert.x is poly\\xADglot, Vert.x-\\u200BSwagger project only sup\\xADports Java. If you want to con\\xADtribute to sup\\xADport more lan\\xADguages, you\\u2019re wel\\xADcome :)\")), mdx(\"p\", null, \"Thanks for read\\xADing.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>This post is an in­tro­duc­tion to the <a href=\"https://github.com/phiz71/vertx-swagger\">Vert.x-​Swagger</a> project, and de­scribe how to use the <code>Swagger-Codegen</code> plug­in and the <code>SwaggerRouter</code> class.</p><h2 id=\"eclipse-vertx--swagger\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#eclipse-vertx--swagger\"></a>Eclipse Vert.x &amp; Swagger</h2><p><a href=\"http://vertx.io/docs/vertx-core/java/\">Vert.x</a> and <a href=\"http://vertx.io/docs/vertx-web/java/\">Vert.x Web</a> are very con­ve­nient to write REST API and es­pe­cially the <a href=\"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\">Router</a> which is very use­ful to man­age all re­sources of an API.</p><p>But when I start a new API, I usu­ally use the “design-​first” ap­proach and <a href=\"http://swagger.io/specification/\">Swag­ger</a> is my best friend to de­fine what my API is sup­posed to do. And then, comes the “bor­ing” part of the job : con­vert the swag­ger file con­tent into java code. That’s al­ways the same : re­sources, op­er­a­tions, mod­els…</p><p>For­tu­nately, Swag­ger pro­vides a code­gen tool : <a href=\"https://github.com/swagger-api/swagger-codegen\">Swagger-​Codegen</a>. With this tool, you can gen­er­ate a server stub based on your swag­ger de­f­i­n­i­tion file.\nHow­ever, even if this gen­er­a­tor pro­vides many dif­fer­ent lan­guages and frame­work, Vert.X is miss­ing.</p><p>This is where the <a href=\"https://github.com/phiz71/vertx-swagger\">Vert.x-​Swagger</a> project comes in.</p><h2 id=\"the-project\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#the-project\"></a>The project</h2><p><strong>Vert.x-​Swagger</strong> is a maven project pro­vid­ing 2 mod­ules.</p><h3 id=\"vertx-swagger-codegen\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-swagger-codegen\"></a>vertx-swagger-codegen</h3><p>It’s a <a href=\"https://github.com/swagger-api/swagger-codegen\">Swagger-​Codegen</a> plug­in, which add the ca­pa­bil­ity of gen­er­at­ing a Java Vert.x Web­Server to the gen­er­a­tor.</p><p>The gen­er­ated server mainly con­tains :</p><ul><li>POJOs for <code>definitions</code></li><li>one Ver­ti­cle per <code>tag</code></li><li>one Main­Ver­ti­cle, which man­age oth­ers APIVer­ti­cle and start an HttpServer.</li></ul><div class=\"alert info\"><p>The Main­Ver­ti­cle use <em>vertx-​swagger-router</em></p></div><h3 id=\"vertx-swagger-router\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-swagger-router\"></a>vertx-swagger-router</h3><p>The main class of this mod­ule is <code>SwaggerRouter</code>. It’s more or less a <em>Fac­tory</em> (and maybe I should re­name the class) that can cre­ate a <a href=\"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\">Router</a>, using the swag­ger de­f­i­n­i­tion file to con­fig­ure all the routes. For each route, it ex­tracts pa­ra­me­ters from the re­quest (<code>Query</code>, <code>Path</code>, <code>Header</code>, <code>Body</code>, <code>Form</code>) and send them on the event­Bus, using ei­ther the <code>operationId</code> as the ad­dress or a com­puted id (just a pa­ra­me­ter in the con­struc­tor).</p><h2 id=\"let-see-how-it-works\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#let-see-how-it-works\"></a>Let see how it works</h2><div class=\"alert info\"><p>For this post, I will use a sim­pli­fied swag­ger file but you can find a more com­plex ex­am­ple <a href=\"https://github.com/phiz71/vertx-swagger/tree/master/sample/petstore-vertx-server\">here</a> based on the <a href=\"http://petstore.swagger.io/\">pet­store</a> swag­ger file</p></div><h3 id=\"generating-the-server\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#generating-the-server\"></a>Generating the server</h3><p>First, choose your swag­ger de­f­i­n­i­tion. Here’s a YAML File, but it could be a JSON file:</p><div>...waiting for Gist...</div><p>Then, down­load these li­braries :</p><ul><li><a href=\"http://central.maven.org/maven2/io/swagger/swagger-codegen-cli/2.2.2/swagger-codegen-cli-2.2.2.jar\">swagger-​codegen-cli</a></li><li><a href=\"http://central.maven.org/maven2/com/github/phiz71/vertx-swagger-codegen/1.0.0/vertx-swagger-codegen-1.0.0.jar\">vertx-​swagger-codegen</a></li></ul><p>Fi­nally, run this com­mand</p><pre><code class=\"hljs language-bash\">java -cp /path/to/swagger-codegen-cli-2.2.2.jar:/path/to/vertx-swagger-codegen-1.0.0.jar io.swagger.codegen.SwaggerCodegen generate \\\n  -l java-vertx \\\n  -o path/to/destination/folder \\\n  -i path/to/swagger/definition \\\n  --group-id your.group.id \\\n  --artifact-id your.artifact.id\n</code></pre><div class=\"alert info\"><p>For more In­for­ma­tion about how Swag­ger­Code­gen works, you can read this <a href=\"https://github.com/swagger-api/swagger-codegen#getting-started\">https://github.com/swagger-​api/swagger-​codegen#getting-​started</a></p></div><p>You should have some­thing like that in your con­sole:</p><pre><code class=\"hljs language-gradle\">[main] INFO io.swagger.parser.Swagger20Parser - reading <span class=\"hljs-keyword\">from</span> ./wineCellarSwagger.yaml\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api<span class=\"hljs-regexp\">/model/</span>Bottle.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api<span class=\"hljs-regexp\">/model/</span>CellarInformation.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api<span class=\"hljs-regexp\">/verticle/</span>BottlesApi.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api<span class=\"hljs-regexp\">/verticle/</span>BottlesApiVerticle.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api<span class=\"hljs-regexp\">/verticle/I</span>nformationApi.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api<span class=\"hljs-regexp\">/verticle/I</span>nformationApiVerticle.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>resources/swagger.json\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api/MainApiVerticle.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>resources/vertx-<span class=\"hljs-keyword\">default</span>-jul-logging.properties\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>pom.xml\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>README.md\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>.swagger-codegen-ignore\n</code></pre><p>And this in your des­ti­na­tion folder:</p><p><img src=\"/images/blog/vertx-swagger-presentation/GeneratedProject.png\" alt=\"Generated sources\"/></p><h3 id=\"what-have-been-created-\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#what-have-been-created-\"></a>What have been created ?</h3><p>As you can see in <strong>1</strong>,  the <em>vertx-​swagger-codegen</em> plug­in has cre­ated one POJO by <code>definition</code> in the swag­ger file.</p><h4 id=\"example--the-bottle-definition\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#example--the-bottle-definition\"></a>Example : the bottle definition</h4><div>...waiting for Gist...</div><p>In <strong>2a</strong> and <strong>2b</strong> you can find :</p><ul><li>an in­ter­face which con­tains a func­tion per <code>operation</code></li><li>a ver­ti­cle which de­fines all <code>operationId</code> and cre­ate <a href=\"http://vertx.io/docs/vertx-core/java/#_the_event_bus_api\">Event­Bus</a> con­sumers </li></ul><h4 id=\"example--the-bottles-interface\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#example--the-bottles-interface\"></a>Example : the Bottles interface</h4><div>...waiting for Gist...</div><h4 id=\"example--the-bottles-verticle\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#example--the-bottles-verticle\"></a>Example : the Bottles verticle</h4><div>...waiting for Gist...</div><h3 id=\"-and-now-\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#-and-now-\"></a>… and now ?</h3><p>Line <code>23</code> of <code>BottlesApiVerticle.java</code>, you can see this</p><pre><code class=\"hljs language-java\">BottlesApi service = <span class=\"hljs-keyword\">new</span> BottlesApiImpl();\n</code></pre><p>This line will not com­pile until the <code>BottlesApiImpl</code> class is cre­ated.</p><p>In all <strong>XXXAPI</strong>Ver­ti­cles, you will find a vari­able called <em>ser­vice</em>. It is a <strong>XXXAPI</strong> type and it is in­stan­ci­ated with a <strong>XXXAPI</strong>Impl con­truc­tor. This class does not exist yet since it is the busi­ness of your API.</p><p><strong>And so you will have to cre­ate these im­ple­men­ta­tions.</strong></p><h2 id=\"fine-but-what-if-i-dont-want-to-build-my-api-like-this-\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#fine-but-what-if-i-dont-want-to-build-my-api-like-this-\"></a>Fine, but what if I don’t want to build my API like this ?</h2><p>Well, Vert.x is <strong>un­opin­ion­ated</strong> but the way the <em>vertx-​swagger-codegen</em> cre­ates the server stub <strong>is not</strong>.\nSo if you want to im­ple­ment your API the way you want, while en­joy­ing dy­namic rout­ing based on a swag­ger file, the <em>vertx-​swagger-router</em> li­brary can be used stand­alone. </p><p>Just im­port this jar into your project:</p><div>...waiting for Gist...</div><p>You will be able to cre­ate your <a href=\"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\">Router</a> like this:</p><pre><code class=\"hljs language-java\">FileSystem vertxFileSystem = vertx.fileSystem();\nvertxFileSystem.readFile(<span class=\"hljs-string\">&quot;***YOUR_SWAGGER_FILE***&quot;</span>, readFile -&gt; {\n    <span class=\"hljs-keyword\">if</span> (readFile.succeeded()) {\n        Swagger swagger = <span class=\"hljs-keyword\">new</span> SwaggerParser().parse(readFile.result().toString(Charset.forName(<span class=\"hljs-string\">&quot;utf-8&quot;</span>))); \n        Router swaggerRouter = SwaggerRouter.swaggerRouter(Router.router(vertx), swagger, vertx.eventBus(), <span class=\"hljs-keyword\">new</span> OperationIdServiceIdResolver());\n        [...]\n   } <span class=\"hljs-keyword\">else</span> {\n        [...]\n   }\n});\n</code></pre><div class=\"alert info\"><p>You can ig­nore the last pa­ra­me­ter in <code>SwaggerRouter.swaggerRouter(...)</code>. As a re­sult, ad­dresses will be com­puted in­stead of using <code>operationId</code> from the swag­ger file.\nFor in­stance, <code>GET /bottles/{bottle_id}</code> will be­come <em>GET_bot­tles_bottle-​id</em></p></div><h2 id=\"conclusion\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#conclusion\"></a>Conclusion</h2><p>Vert.x and Swag­ger are great tools to build and doc­u­ment an API but using both in the same project can be painful. The <a href=\"https://github.com/phiz71/vertx-swagger\">Vert.x-​Swagger</a> project was made to save time, let­ting the de­vel­op­ers fo­cus­ing on busi­ness code.\nIt can be seen as an API frame­work over Vert.X.</p><p>You can also use the <code>SwaggerRouter</code> in your own project with­out using Swagger-​Codegen.</p><p>In fu­ture re­leases, more in­for­ma­tion from the swag­ger file will be used to con­fig­ure the router and cer­tainly oth­ers lan­guages will be sup­ported.</p><div class=\"alert info\"><p>Though Vert.x is poly­glot, Vert.x-​Swagger project only sup­ports Java. If you want to con­tribute to sup­port more lan­guages, you’re wel­come :)</p></div><p>Thanks for read­ing.</p>","scope":{}}},"prevPost":{"meta":{"title":"Preview of a guide for Java developers","category":"news","authors":[{"name":"Julien Ponge","github_id":"jponge"}],"summary":"We are introducing the book “A gentle guide to asynchronous programming with Eclipse Vert.x for enterprise application developers”."},"date":"2017-06-09","slug":"preview-of-a-guide-for-java-developers"},"nextPost":{"meta":{"title":"Time scheduling with Chime","category":"guides","authors":[{"name":"Lisi","github_id":"LisiLisenok"}],"summary":"Eclipse Vert.x executes periodic and delayed actions with periodic and one-shot timers. Chime is a time scheduler verticle that works on the Vert.x event bus."},"date":"2017-05-09","slug":"time-scheduling-with-chime"},"relatedPosts":[{"meta":{"title":"My first Vert.x 3 Application","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let's say, you heard someone saying that Vert.x is awesome. Ok great, but you may want to try it by yourself. Well, the next natural question is “where do I start ?”"},"date":"2015-07-14","slug":"my-first-vert-x-3-application"},{"meta":{"title":"TCP Client using Eclipse Vert.x, Kotlin and Gradle build","category":"guides","authors":[{"name":"Usman Saleem","github_id":"usmansaleem"}],"summary":"In this blog post, I demonstrate how to write a very simple TCP client that keeps a connection open to a custom-written server in cloud."},"date":"2017-12-20","slug":"tcp-client-using-eclipse-vert-x-kotlin-and-gradle-build"},{"meta":{"title":"Using the asynchronous SQL client","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Finally, back... This post is the fifth post of the introduction to vert.x blog series, after a not-that-small break. In this post we are going to see how we can use JDBC in a vert.x application."},"date":"2015-10-19","slug":"using-the-asynchronous-sql-client"}]},"__N_SSG":true}