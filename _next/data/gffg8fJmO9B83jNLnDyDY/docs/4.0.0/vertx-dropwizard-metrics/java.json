{"pageProps":{"slug":"4.0.0/vertx-dropwizard-metrics/java","title":"Metrics","fallbackGitHubStars":null,"toc":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_features\">特性</a></li>\n<li><a href=\"#_getting_started\">入门</a></li>\n<li><a href=\"#_command_line_activation\">命令行模式激活指标监控</a></li>\n<li><a href=\"#_metrics_service\">指标监控服务</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_naming\">监控指标命名</a></li>\n<li><a href=\"#_retrieving_metrics\">获取监控指标</a></li>\n</ul>\n</li>\n<li><a href=\"#_data\">指标数据</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#gauge\">测量值</a></li>\n<li><a href=\"#counter\">计数器</a></li>\n<li><a href=\"#histogram\">柱状图</a></li>\n<li><a href=\"#meter\">仪表（Meter）</a></li>\n<li><a href=\"#throughput_meter\">吞吐量统计</a></li>\n<li><a href=\"#timer\">计时器</a></li>\n<li><a href=\"#throughput_timer\">吞吐量计时器</a></li>\n</ul>\n</li>\n<li><a href=\"#_the_metrics\">监控指标</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_vertx_metrics\">Vert.x 指标</a></li>\n<li><a href=\"#_event_bus_metrics\">Event bus 指标</a></li>\n<li><a href=\"#http-server-metrics\">Http server 指标</a></li>\n<li><a href=\"#_http_client_metrics\">Http 客户端指标</a></li>\n<li><a href=\"#net-server-metrics\">Net 服务指标</a></li>\n<li><a href=\"#_net_client_metrics\">Net 客户端指标</a></li>\n<li><a href=\"#_client_metrics\">客户端指标</a></li>\n<li><a href=\"#_datagram_socket_metrics\">数据报套接字指标</a></li>\n<li><a href=\"#_pool_metrics\">池的指标</a></li>\n</ul>\n</li>\n<li><a href=\"#jmx\">JMX</a></li>\n<li><a href=\"#_enabling_remote_jmx\">启用远程 JMX</a></li>\n<li><a href=\"#dropwizard-registry\">访问 Dropwizard Registry</a></li>\n<li><a href=\"#_using_already_existing_dropwizard_registry\">使用已有的 Dropwizard Registry</a></li>\n<li><a href=\"#_using_jolokia_and_hawtio\">使用 Jolokia 和 Hawtio</a></li>\n<li><a href=\"#_using_jolokia_and_jmx4perl_to_expose_metrics_to_nagios\">使用 Jolokia 和 JMX4Perl 向 Nagios 开放监控指标</a></li>\n<li><a href=\"#_metrics_commands_via_telnet_or_ssh_in_vert_x_shell_service\">在 Vert.x Shell 服务中通过 Telnet 或 SSH 执行的监控指标命令</a></li>\n</ul>\n</div>","contents":"<h1>Metrics</h1>\n\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>本项目基于 <a href=\"https://github.com/dropwizard/metrics\">Dropwizard metrics</a>\n实现了 Vert.x 指标监控的SPI（Service Provider Interface，服务供应接口）。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_features\"><a class=\"anchor\" href=\"#_features\"></a>特性</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x 提供了一个相当易用的API接口 <code><a href=\"../../apidocs/io/vertx/core/metrics/Measured.html\">Measured</a></code> 用于查询监控指标，\n很多 Vert.x 组件都实现了这个接口，包括 <code><a href=\"../../apidocs/io/vertx/core/http/HttpServer.html\">HttpServer</a></code>，\n<code><a href=\"../../apidocs/io/vertx/core/net/NetServer.html\">NetServer</a></code>，以及 <code><a href=\"../../apidocs/io/vertx/core/Vertx.html\">Vertx</a></code> 本身等等。</p>\n</div>\n<div class=\"paragraph\">\n<p>本项目基于 Dropwizard 实现了可配置的 JMX 上报服务，可将 Vert.x 作为 JMX 的 MBean 使用。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_getting_started\"><a class=\"anchor\" href=\"#_getting_started\"></a>入门</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>使用 Vert.x 指标监控需要在您项目的构建配置增加以下 <em>依赖</em> ：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Maven（位于 <code>pom.xml</code>）：</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-xml\" data-lang=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-dropwizard-metrics<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span></code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Gradle（位于 <code>build.gradle</code>）：</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-groovy\" data-lang=\"groovy\">compile <span class=\"hljs-string\">'io.vertx:vertx-dropwizard-metrics:4.0.0'</span></code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>创建 Vertx 实例时通过 <code><a href=\"../../apidocs/io/vertx/ext/dropwizard/DropwizardMetricsOptions.html\">DropwizardMetricsOptions</a></code> 启用指标监控：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions().setMetricsOptions(\n    <span class=\"hljs-keyword\">new</span> DropwizardMetricsOptions().setEnabled(<span class=\"hljs-keyword\">true</span>)\n));</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>也可以启用 JMX 支持：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions().setMetricsOptions(\n    <span class=\"hljs-keyword\">new</span> DropwizardMetricsOptions().setJmxEnabled(<span class=\"hljs-keyword\">true</span>)\n));</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>更多关于 JMX 的信息请参阅文末的 <a href=\"#jmx\">JMX</a> 章节。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_command_line_activation\"><a class=\"anchor\" href=\"#_command_line_activation\"></a>命令行模式激活指标监控</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>在命令行模式（Vert.x CLI）启动的 Vert.x 应用可以通过 JVM 系统属性启用指标监控。\n<em>vertx.metrics.options.</em> 开头的系统属性会被传递到指标监控的配置。</p>\n</div>\n<div class=\"paragraph\">\n<p><em>vertx.metrics.options.enabled</em> 是一个标准 Vert.x Core 配置，用于启用指标监控，\n（欲启用指标监控）此选项必须设置为 <code>true</code> ：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>java -jar your-fat-jar -Dvertx.metrics.options.enabled=true</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><code><a href=\"../../apidocs/io/vertx/ext/dropwizard/DropwizardMetricsOptions.html#setRegistryName-java.lang.String-\">vertx.metrics.options.registryName</a></code>\n配置项用于设置要使用的（现存的） <a href=\"#dropwizard-registry\">Dropwizard Registry</a> ：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>java -jar your-fat-jar -Dvertx.metrics.options.enabled=true -Dvertx.metrics.options.registryName=my-registry</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><code><a href=\"../../apidocs/io/vertx/ext/dropwizard/DropwizardMetricsOptions.html#setJmxEnabled-boolean-\">vertx.metrics.options.jmxEnabled</a></code> 和\n<code><a href=\"../../apidocs/io/vertx/ext/dropwizard/DropwizardMetricsOptions.html#setJmxDomain-java.lang.String-\">vertx.metrics.options.jmxDomain</a></code>\n配置项用于配置 <a href=\"#jmx\">JMX</a> 注册信息：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>java -jar your-fat-jar -Dvertx.metrics.options.enabled=true -Dvertx.metrics.options.jmxEnabled=true ...</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><code><a href=\"../../apidocs/io/vertx/ext/dropwizard/DropwizardMetricsOptions.html#setConfigPath-java.lang.String-\">vertx.metrics.options.configPath</a></code>\n配置项用于指定监控配置文件。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_metrics_service\"><a class=\"anchor\" href=\"#_metrics_service\"></a>指标监控服务</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x core 定了了上报监控指标的 SPI （本项目已实现），\n但并没有定义读取监控指标的 API （因为某些指标监控的实现只上报监控指标，不做其他事情）。</p>\n</div>\n<div class=\"paragraph\">\n<p><code><a href=\"../../apidocs/io/vertx/ext/dropwizard/MetricsService.html\">MetricsService</a></code> 封装了 Dropwizard Registry，\n提供了获取监控指标快照（snapshot）的API。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_naming\"><a class=\"anchor\" href=\"#_naming\"></a>监控指标命名</h3>\n<div class=\"paragraph\">\n<p>下面列出的每个可监控组件（Vertx除外）都有与之关联的基本指标名（baseName，译者注：即指标名的前缀）。\n所有监控指标都可以通过 Vertx 对象，使用全限定指标名 &lt;fqn&gt; （<code>baseName</code> + <code>.</code> + <code>metricName</code>）获取。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">JsonObject metrics = metricsService.getMetricsSnapshot(vertx);\nmetrics.getJsonObject(<span class=\"hljs-string\">\"vertx.eventbus.handlers\"</span>);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>或者通过要监控的组件对象，使用指标名（<code>metricName</code>）获取监控指标：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">EventBus eventBus = vertx.eventBus();\nJsonObject metrics = metricsService.getMetricsSnapshot(eventBus);\nmetrics.getJsonObject(<span class=\"hljs-string\">\"handlers\"</span>);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>更多关于从指定组件对象获取/使用监控指标的例子，请参见下文。</p>\n</div>\n<div class=\"paragraph\">\n<p>您可以可以列出所有监控指标名：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Set&lt;String&gt; metricsNames = metricsService.metricsNames();\n<span class=\"hljs-keyword\">for</span> (String metricsName : metricsNames) {\n  System.out.println(<span class=\"hljs-string\">\"Known metrics name \"</span> + metricsName);\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>基本指标名（<code>baseName</code>） 默认是 <code>vertx</code>，但也可以自定义一个基本指标名：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">DropwizardMetricsOptions metricsOptions =\n  <span class=\"hljs-keyword\">new</span> DropwizardMetricsOptions().setBaseName(<span class=\"hljs-string\">\"foo\"</span>);</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_retrieving_metrics\"><a class=\"anchor\" href=\"#_retrieving_metrics\"></a>获取监控指标</h3>\n<div class=\"paragraph\">\n<p>启用指标监控后， <code><a href=\"../../apidocs/io/vertx/ext/dropwizard/MetricsService.html\">MetricsService</a></code> 可以从\n<code><a href=\"../../apidocs/io/vertx/core/metrics/Measured.html\">Measured</a></code> 实例获取监控指标的快照（snapshot）；\n快照是一个键为指标名、值为指标值的 <code><a href=\"../../apidocs/io/vertx/core/json/JsonObject.html\">JsonObject</a></code> 对象。\n下面的例子打印了 Vertx 实例所有的监控指标（快照）：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">MetricsService metricsService = MetricsService.create(vertx);\nJsonObject metrics = metricsService.getMetricsSnapshot(vertx);\nSystem.out.println(metrics);</code></pre>\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">注意</div>\n</td>\n<td class=\"content\">\n有关 <code><a href=\"../../apidocs/io/vertx/core/json/JsonObject.html\">JsonObject</a></code> 快照实例包含的实际内容（实际监控指标）详情，\n请参阅具体指标实现的文档，如 <a href=\"https://github.com/vert-x3/vertx-metrics\">vertx-metrics</a>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>通常您只需获取特定组件（例如 http 服务器）的特定指标，\n而不必知道每个指标的命名细节（留给 SPI 的实现处理）。</p>\n</div>\n<div class=\"paragraph\">\n<p><code><a href=\"../../apidocs/io/vertx/core/http/HttpServer.html\">HttpServer</a></code> 实现了 <code><a href=\"../../apidocs/io/vertx/core/metrics/Measured.html\">Measured</a></code>，\n因此您可以轻松获取到指定 http 服务器的所有监控指标。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">MetricsService metricsService = MetricsService.create(vertx);\nHttpServer server = vertx.createHttpServer();\n<span class=\"hljs-comment\">// 设置 HTTP 服务器</span>\nJsonObject metrics = metricsService.getMetricsSnapshot(server);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>使用基本指标名（baseName）也可以获取到监控指标：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">MetricsService metricsService = MetricsService.create(vertx);\nJsonObject metrics = metricsService.getMetricsSnapshot(<span class=\"hljs-string\">\"vertx.eventbus.message\"</span>);</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_data\"><a class=\"anchor\" href=\"#_data\"></a>指标数据</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>下面是（快照）JSON 中的所有 dropwizard 监控指标。\n每个监控指标的详情请参阅 <a href=\"https://github.com/dropwizard/metrics\">Dropwizard metrics</a> 文档。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"gauge\"><a class=\"anchor\" href=\"#gauge\"></a>测量值</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-javascript\" data-lang=\"javascript\">{\n <span class=\"hljs-string\">\"type\"</span>  : <span class=\"hljs-string\">\"gauge\"</span>,\n <span class=\"hljs-string\">\"value\"</span> : value <span class=\"hljs-comment\">// 任一json值（译者注：数字、字符串、数组、对象等）</span>\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"counter\"><a class=\"anchor\" href=\"#counter\"></a>计数器</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">{\n <span class=\"hljs-string\">\"type\"</span>  : <span class=\"hljs-string\">\"counter\"</span>,\n <span class=\"hljs-string\">\"count\"</span> : <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// 数字</span>\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"histogram\"><a class=\"anchor\" href=\"#histogram\"></a>柱状图</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-javascript\" data-lang=\"javascript\">{\n <span class=\"hljs-string\">\"type\"</span>   : <span class=\"hljs-string\">\"histogram\"</span>,\n <span class=\"hljs-string\">\"count\"</span>  : <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// long</span>\n <span class=\"hljs-string\">\"min\"</span>    : <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// long</span>\n <span class=\"hljs-string\">\"max\"</span>    : <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// long</span>\n <span class=\"hljs-string\">\"mean\"</span>   : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"stddev\"</span> : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"median\"</span> : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"75%\"</span>    : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"95%\"</span>    : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"98%\"</span>    : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"99%\"</span>    : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"99.9%\"</span>  : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"meter\"><a class=\"anchor\" href=\"#meter\"></a>仪表（Meter）</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">{\n <span class=\"hljs-string\">\"type\"</span>              : <span class=\"hljs-string\">\"meter\"</span>,\n <span class=\"hljs-string\">\"count\"</span>             : <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// long</span>\n <span class=\"hljs-string\">\"meanRate\"</span>          : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"oneMinuteRate\"</span>     : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"fiveMinuteRate\"</span>    : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"fifteenMinuteRate\"</span> : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"rate\"</span>              : <span class=\"hljs-string\">\"events/second\"</span> <span class=\"hljs-comment\">// 速率，字符串</span>\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"throughput_meter\"><a class=\"anchor\" href=\"#throughput_meter\"></a>吞吐量统计</h3>\n<div class=\"paragraph\">\n<p>即时吞吐量统计，扩展自 <a href=\"#meter\">仪表</a> 。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">{\n <span class=\"hljs-string\">\"type\"</span>              : <span class=\"hljs-string\">\"meter\"</span>,\n <span class=\"hljs-string\">\"count\"</span>             : <span class=\"hljs-number\">40</span> <span class=\"hljs-comment\">// long</span>\n <span class=\"hljs-string\">\"meanRate\"</span>          : <span class=\"hljs-number\">2.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"oneSecondRate\"</span>     : <span class=\"hljs-number\">3</span> <span class=\"hljs-comment\">// long - 最近一秒的取值</span>\n <span class=\"hljs-string\">\"oneMinuteRate\"</span>     : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"fiveMinuteRate\"</span>    : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"fifteenMinuteRate\"</span> : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"rate\"</span>              : <span class=\"hljs-string\">\"events/second\"</span> <span class=\"hljs-comment\">// 速率，字符串</span>\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"timer\"><a class=\"anchor\" href=\"#timer\"></a>计时器</h3>\n<div class=\"paragraph\">\n<p>A timer is basically a combination of Histogram + Meter.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">{\n <span class=\"hljs-string\">\"type\"</span>: <span class=\"hljs-string\">\"timer\"</span>,\n\n <span class=\"hljs-comment\">// 柱状图数据</span>\n <span class=\"hljs-string\">\"count\"</span>  : <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// long</span>\n <span class=\"hljs-string\">\"min\"</span>    : <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// long</span>\n <span class=\"hljs-string\">\"max\"</span>    : <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// long</span>\n <span class=\"hljs-string\">\"mean\"</span>   : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"stddev\"</span> : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"median\"</span> : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"75%\"</span>    : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"95%\"</span>    : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"98%\"</span>    : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"99%\"</span>    : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"99.9%\"</span>  : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n\n <span class=\"hljs-comment\">// 仪表（meter）数据</span>\n <span class=\"hljs-string\">\"meanRate\"</span>          : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"oneMinuteRate\"</span>     : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"fiveMinuteRate\"</span>    : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"fifteenMinuteRate\"</span> : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"rate\"</span>              : <span class=\"hljs-string\">\"events/second\"</span> <span class=\"hljs-comment\">// 速率，字符串</span>\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"throughput_timer\"><a class=\"anchor\" href=\"#throughput_timer\"></a>吞吐量计时器</h3>\n<div class=\"paragraph\">\n<p>扩展了 <a href=\"#timer\">计时器</a> ，可提供即时吞吐量指标。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">{\n <span class=\"hljs-string\">\"type\"</span>: <span class=\"hljs-string\">\"timer\"</span>,\n\n <span class=\"hljs-comment\">// 柱状图数据</span>\n <span class=\"hljs-string\">\"count\"</span>      : <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// long</span>\n <span class=\"hljs-string\">\"min\"</span>        : <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// long</span>\n <span class=\"hljs-string\">\"max\"</span>        : <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// long</span>\n <span class=\"hljs-string\">\"mean\"</span>       : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"stddev\"</span>     : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"median\"</span>     : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"75%\"</span>        : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"95%\"</span>        : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"98%\"</span>        : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"99%\"</span>        : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"99.9%\"</span>      : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n\n <span class=\"hljs-comment\">// 仪表（meter）数据</span>\n <span class=\"hljs-string\">\"meanRate\"</span>          : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"oneSecondRate\"</span>     : <span class=\"hljs-number\">3</span> <span class=\"hljs-comment\">// long - 最近一秒的取值</span>\n <span class=\"hljs-string\">\"oneMinuteRate\"</span>     : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"fiveMinuteRate\"</span>    : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"fifteenMinuteRate\"</span> : <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">// double</span>\n <span class=\"hljs-string\">\"rate\"</span>              : <span class=\"hljs-string\">\"events/second\"</span> <span class=\"hljs-comment\">// 速率，字符串</span>\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_the_metrics\"><a class=\"anchor\" href=\"#_the_metrics\"></a>监控指标</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x 目前提供以下指标。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_vertx_metrics\"><a class=\"anchor\" href=\"#_vertx_metrics\"></a>Vert.x 指标</h3>\n<div class=\"paragraph\">\n<p>目前提供以下指标：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>vertx.event-loop-size</code> - 类型：<a href=\"#gauge\">测量值</a>，含义：event-loop 线程池的线程数量</p>\n</li>\n<li>\n<p><code>vertx.worker-pool-size</code> - 类型：<a href=\"#gauge\">测量值</a>，含义：worker-pool 线程池的线程数量</p>\n</li>\n<li>\n<p><code>vertx.cluster-host</code> - 类型：<a href=\"#gauge\">测量值</a>，含义：cluster-host 配置值</p>\n</li>\n<li>\n<p><code>vertx.cluster-port</code> - 类型：<a href=\"#gauge\">测量值</a>，含义：cluster-port 配置值</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_event_bus_metrics\"><a class=\"anchor\" href=\"#_event_bus_metrics\"></a>Event bus 指标</h3>\n<div class=\"paragraph\">\n<p>基本指标名（baseName）： <code>vertx.eventbus</code></p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>handlers</code> - 类型：<a href=\"#counter\">计数器</a>，含义：eventbus 中已注册的处理器数量</p>\n</li>\n<li>\n<p><code>handlers.myaddress</code> - 类型：<a href=\"#timer\">计时器</a>，含义：名为 <em>myaddress</em> 的处理器处理消息的速率</p>\n</li>\n<li>\n<p><code>messages.bytes-read</code> - 类型：<a href=\"#meter\">仪表（Meter）</a>，含义：接收到的远程消息总字节量</p>\n</li>\n<li>\n<p><code>messages.bytes-written</code> - 类型：<a href=\"#meter\">仪表（Meter）</a>，含义：发送到远程地址的消息总字节量</p>\n</li>\n<li>\n<p><code>messages.pending</code> - 类型：<a href=\"#counter\">计数器</a>，含义：已经被 eventbus 接收，但是还未被处理器所处理的消息数。</p>\n</li>\n<li>\n<p><code>messages.pending-local</code> - 类型：<a href=\"#counter\">计数器</a>，含义：已经被本地 eventbus 接收，但是还未被处理器所处理的消息数。</p>\n</li>\n<li>\n<p><code>messages.pending-remote</code> - 类型：<a href=\"#counter\">计数器</a>，含义：已经被远程 eventbus 接收，但是还未被处理器所处理的消息数。</p>\n</li>\n<li>\n<p><code>messages.discarded</code> - 类型：<a href=\"#counter\">计数器</a>，含义：已被处理器丢弃的消息数</p>\n</li>\n<li>\n<p><code>messages.discarded-local</code> - 类型：<a href=\"#counter\">计数器</a>，含义：已被本地处理器丢弃的消息数</p>\n</li>\n<li>\n<p><code>messages.discarded-remote</code> - 类型：<a href=\"#counter\">计数器</a>，含义：已被远程处理器丢弃的消息数</p>\n</li>\n<li>\n<p><code>messages.received</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：接受消息的速率</p>\n</li>\n<li>\n<p><code>messages.received-local</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：接受本地消息的速率</p>\n</li>\n<li>\n<p><code>messages.received-remote</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：接受远程消息的速率</p>\n</li>\n<li>\n<p><code>messages.delivered</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：消息被传递到处理器的速率</p>\n</li>\n<li>\n<p><code>messages.delivered-local</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：本地消息被传递到处理器的速率</p>\n</li>\n<li>\n<p><code>messages.delivered-remote</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：远程消息被传递到处理器的速率</p>\n</li>\n<li>\n<p><code>messages.sent</code> - 类型：<a href=\"#throughput_metert\">[throughput_metert]</a>，含义：发送消息的速率</p>\n</li>\n<li>\n<p><code>messages.sent-local</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：本地发送消息的速率</p>\n</li>\n<li>\n<p><code>messages.sent-remote</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：远程发送消息的速率</p>\n</li>\n<li>\n<p><code>messages.published</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：发布消息的速率</p>\n</li>\n<li>\n<p><code>messages.published-local</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：本地发布消息的速率</p>\n</li>\n<li>\n<p><code>messages.published-remote</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：远程发布消息的速率</p>\n</li>\n<li>\n<p><code>messages.reply-failures</code> - 类型：<a href=\"#meter\">仪表（Meter）</a>，含义：回复消息失败的速率</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>可以通过 Event Bus 订阅地址的字符串匹配设置需要监控的 Event Bus 处理器。\nVert.x 可能注册了大量的 Event Bus ，\n因此最佳的监控默认配置是不监控任何 Event Bus 处理器。</p>\n</div>\n<div class=\"paragraph\">\n<p>使用 <code><a href=\"../../apidocs/io/vertx/ext/dropwizard/DropwizardMetricsOptions.html\">DropwizardMetricsOptions</a></code>\n可以通过字符串匹配或正则匹配设置需要监控的 Event Bus 处理器。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions().setMetricsOptions(\n    <span class=\"hljs-keyword\">new</span> DropwizardMetricsOptions().\n        setEnabled(<span class=\"hljs-keyword\">true</span>).\n        addMonitoredEventBusHandler(\n            <span class=\"hljs-keyword\">new</span> Match().setValue(<span class=\"hljs-string\">\"some-address\"</span>)).\n        addMonitoredEventBusHandler(\n            <span class=\"hljs-keyword\">new</span> Match().setValue(<span class=\"hljs-string\">\"business-.*\"</span>).setType(MatchType.REGEX))\n));</code></pre>\n</div>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">警告</div>\n</td>\n<td class=\"content\">\n使用正则匹配时，错误的正则表达式可能会匹配上很多处理器。\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"http-server-metrics\"><a class=\"anchor\" href=\"#http-server-metrics\"></a>Http server 指标</h3>\n<div class=\"paragraph\">\n<p>基本指标名（baseName）： <code>vertx.http.servers.&lt;host&gt;:&lt;port&gt;</code></p>\n</div>\n<div class=\"paragraph\">\n<p>Http 服务器的指标包括 <a href=\"#net-server-metrics\">Net 服务</a> 的所有指标以及以下内容：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>requests</code> - 类型：<a href=\"#throughput_timer\">吞吐量计时器</a>，含义：单个请求及其出现的频率</p>\n</li>\n<li>\n<p><code>&lt;http-method&gt;-requests</code> - 类型：<a href=\"#throughput_timer\">吞吐量计时器</a>，含义：指定 HTTP 方法（译者注：由 &lt;http-method&gt; 指定）的请求及其频率。</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>例如： <code>get-requests</code>， <code>post-requests</code></p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><code>&lt;http-method&gt;-requests./&lt;uri&gt;</code> - 类型：<a href=\"#throughput_timer\">吞吐量计时器</a>，含义：指定 HTTP 方法和 URI 的请求及其频率。</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>例如： <code>get-requests./some/uri</code>， <code>post-requests./some/uri?foo=bar</code></p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><code>responses-1xx</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：1xx响应的频次</p>\n</li>\n<li>\n<p><code>responses-2xx</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：2xx响应的频次</p>\n</li>\n<li>\n<p><code>responses-3xx</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：3xx响应的频次</p>\n</li>\n<li>\n<p><code>responses-4xx</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：4xx响应的频次</p>\n</li>\n<li>\n<p><code>responses-5xx</code> - 类型：<a href=\"#throughput_meter\">吞吐量统计</a>，含义：5xx响应的频次</p>\n</li>\n<li>\n<p><code>open-websockets</code> - 类型：<a href=\"#counter\">计数器</a>，含义：打开的网络套接字连接数量</p>\n</li>\n<li>\n<p><code>open-websockets.&lt;remote-host&gt;</code> - 类型：<a href=\"#counter\">计数器</a>，含义：连接到指定远程主机（译者注：由 &lt;remote-host&gt; 指定）所打开网络套接字的连接数量</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Http URI 指标必须在 MetricsOptions 中显式配置，可以使用完全匹配或正则表达式匹配：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions().setMetricsOptions(\n    <span class=\"hljs-keyword\">new</span> DropwizardMetricsOptions().\n        setEnabled(<span class=\"hljs-keyword\">true</span>).\n        addMonitoredHttpServerUri(\n            <span class=\"hljs-keyword\">new</span> Match().setValue(<span class=\"hljs-string\">\"/\"</span>)).\n        addMonitoredHttpServerUri(\n            <span class=\"hljs-keyword\">new</span> Match().setValue(<span class=\"hljs-string\">\"/foo/.*\"</span>).setType(MatchType.REGEX))\n));</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>对于带路径参数的 uri，如 <code>/users/:userId</code>，每个用户ID对应的入口 uri 分别注册监控指标没有意义\n（比如 <code>get-requests./users/1</code> ， <code>get-requests./users/2</code> 等等），应该统一注册一个监控 uri。\n为此，可以为 Match 实例设置别名，该别名将作为注册指标名的一部分，如： <code>&lt;http-method&gt;-requests.&lt;别名&gt;</code> 。\n此外，对于已定义别名的监控 uri，每个响应组有单独的监控指标（计数器），如： <code>responses-&lt;code&gt;.&lt;别名&gt;</code> 。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions().setMetricsOptions(\n    <span class=\"hljs-keyword\">new</span> DropwizardMetricsOptions().\n        setEnabled(<span class=\"hljs-keyword\">true</span>).\n        addMonitoredHttpServerUri(<span class=\"hljs-keyword\">new</span> Match().setValue(<span class=\"hljs-string\">\"/users/.*\"</span>).setAlias(<span class=\"hljs-string\">\"users\"</span>).setType(MatchType.REGEX))\n));</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><strong><code>bytes-read</code> 和 <code>bytes-written</code> 监控指标只统计了请求体/响应体的字节数，不包括 header 等。</strong></p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_http_client_metrics\"><a class=\"anchor\" href=\"#_http_client_metrics\"></a>Http 客户端指标</h3>\n<div class=\"paragraph\">\n<p>基本指标名（baseName）： <code>vertx.http.clients</code> （默认），或 <code>vertx.http.clients.&lt;id&gt;</code> ，其中 <code>&lt;id&gt;</code> 是由\n<code><a href=\"../../apidocs/io/vertx/core/http/HttpClientOptions.html#setMetricsName-java.lang.String-\">setMetricsName</a></code> 设置的非空字符串。</p>\n</div>\n<div class=\"paragraph\">\n<p>HTTP 客户端的指标包括 <a href=\"#http-server-metrics\">Http 服务</a> 的所有指标以及下述指标：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>connections.max-pool-size</code> - 类型：<a href=\"#gauge\">测量值</a>，含义：连接池规模</p>\n</li>\n<li>\n<p><code>connections.pool-ratio</code> - 类型：ratio <a href=\"#gauge\">测量值</a>，含义：已打开的连接与连接池规模的比率</p>\n</li>\n<li>\n<p><code>responses-1xx</code> - 类型：<a href=\"#meter\">仪表（Meter）</a>，含义：1xx响应码</p>\n</li>\n<li>\n<p><code>responses-2xx</code> - 类型：<a href=\"#meter\">仪表（Meter）</a>，含义：2xx响应码</p>\n</li>\n<li>\n<p><code>responses-3xx</code> - 类型：<a href=\"#meter\">仪表（Meter）</a>，含义：3xx响应码</p>\n</li>\n<li>\n<p><code>responses-4xx</code> - 类型：<a href=\"#meter\">仪表（Meter）</a>，含义：4xx响应码</p>\n</li>\n<li>\n<p><code>responses-5xx</code> - 类型：<a href=\"#meter\">仪表（Meter）</a>，含义：5xx响应码</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>HTTP 客户端使用延迟请求队列管理每个远程 HTTP 服务节点的连接池。</p>\n</div>\n<div class=\"paragraph\">\n<p>远程HTTP服务节点的可用监控指标如下：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>endpoint.&lt;host:port&gt;.queue-delay</code> - 类型：<a href=\"#timer\">计时器</a>，含义：队列中延迟请求的等待时间</p>\n</li>\n<li>\n<p><code>endpoint.&lt;host:port&gt;.queue-size</code> - 类型：<a href=\"#counter\">计数器</a>，含义：队列实际大小</p>\n</li>\n<li>\n<p><code>endpoint.&lt;host:port&gt;.open-netsockets</code> - 类型：<a href=\"#counter\">计数器</a>，含义：连接到HTTP服务节点所开启的套接字数量</p>\n</li>\n<li>\n<p><code>endpoint.&lt;host:port&gt;.usage</code> - 类型：<a href=\"#timer\">计时器</a>，含义：请求开始到响应结束的耗时</p>\n</li>\n<li>\n<p><code>endpoint.&lt;host:port&gt;.in-use</code> - 类型：<a href=\"#counter\">计数器</a>，含义：实际请求/响应数</p>\n</li>\n<li>\n<p><code>endpoint.&lt;host:port&gt;.ttfb</code> - 类型：<a href=\"#timer\">计时器</a>，含义：请求结束到响应开始之间的等待时间</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>其中 &lt;host&gt; 是HTTP服务节点的主机名（可能未解析），而 &lt;port&gt; 是 TCP 端口。</p>\n</div>\n<div class=\"paragraph\">\n<p>可以通过 HTTP 服务的 <code>$主机:$端口</code> 的文本匹配来配置 HTTP 服务节点监控。\n默认没有配置 HTTP 服务节点的监控。</p>\n</div>\n<div class=\"paragraph\">\n<p>使用 <code><a href=\"../../apidocs/io/vertx/ext/dropwizard/DropwizardMetricsOptions.html\">DropwizardMetricsOptions</a></code>\n可以通过字符串匹配或正则匹配设置需要监控的 HTTP 服务节点：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions().setMetricsOptions(\n    <span class=\"hljs-keyword\">new</span> DropwizardMetricsOptions().\n        setEnabled(<span class=\"hljs-keyword\">true</span>).\n        addMonitoredHttpClientEndpoint(\n            <span class=\"hljs-keyword\">new</span> Match().setValue(<span class=\"hljs-string\">\"some-host:80\"</span>)).\n        addMonitoredHttpClientEndpoint(\n            <span class=\"hljs-keyword\">new</span> Match().setValue(<span class=\"hljs-string\">\"another-host:.*\"</span>).setType(MatchType.REGEX))\n));</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"net-server-metrics\"><a class=\"anchor\" href=\"#net-server-metrics\"></a>Net 服务指标</h3>\n<div class=\"paragraph\">\n<p>基本指标名（baseName）： <code>vertx.net.servers.&lt;host&gt;:&lt;port&gt;</code></p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>open-netsockets</code> - 类型：<a href=\"#counter\">计数器</a>，含义：打开 net 套接字的连接数</p>\n</li>\n<li>\n<p><code>open-netsockets.&lt;remote-host&gt;</code> - 类型：<a href=\"#counter\">计数器</a>，含义：连接到指定远程主机所打开的 net 套接字连接数</p>\n</li>\n<li>\n<p><code>connections</code> - 类型：<a href=\"#timer\">计时器</a>，含义：连接及其创建频率</p>\n</li>\n<li>\n<p><code>exceptions</code> - 类型：<a href=\"#counter\">计数器</a>，含义：出现异常的次数</p>\n</li>\n<li>\n<p><code>bytes-read</code> - 类型：<a href=\"#counter\">计数器</a>，含义：读取的字节数</p>\n</li>\n<li>\n<p><code>bytes-written</code> - 类型：<a href=\"#counter\">计数器</a>，含义：写入的字节数</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_net_client_metrics\"><a class=\"anchor\" href=\"#_net_client_metrics\"></a>Net 客户端指标</h3>\n<div class=\"paragraph\">\n<p>基本指标名（baseName）： <code>vertx.net.clients</code>（默认）， 或 <code>vertx.net.clients.&lt;id&gt;</code> ，其中 <code>&lt;id&gt;</code> 是\n<code><a href=\"../../apidocs/io/vertx/core/net/NetClientOptions.html#setMetricsName-java.lang.String-\">setMetricsName</a></code> 配置的非空字符串。</p>\n</div>\n<div class=\"paragraph\">\n<p>Net 客户端的指标包括 <a href=\"#net-server-metrics\">Net 服务</a> 的所有指标。</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_client_metrics\"><a class=\"anchor\" href=\"#_client_metrics\"></a>客户端指标</h3>\n<div class=\"paragraph\">\n<p>基本指标名（baseName）： <code>vertx.&lt;type&gt;.clients</code> （默认）或 <code>vertx.&lt;type&gt;.clients.&lt;id&gt;</code> ，其中 <code>&lt;id&gt;</code>\n是客户端指标的标识符，而 <code>&lt;type&gt;</code> 是指标的类型。</p>\n</div>\n<div class=\"paragraph\">\n<p>SQL 客户端的 <code>&lt;type&gt;</code> 为 <code>sql</code>， <code>&lt;id&gt;</code> 为客户端选项所配置的 <code>metricsName</code> 。</p>\n</div>\n<div class=\"paragraph\">\n<p>客户指标包括以下内容：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>endpoint.&lt;host:port&gt;.requests</code> - 类型：<a href=\"#timer\">计时器</a>，含义：请求等待时间</p>\n</li>\n<li>\n<p><code>endpoint.&lt;host:port&gt;.queue-delay</code> - 类型：<a href=\"#timer\">计时器</a>，含义：队列中待处理请求的等待时间</p>\n</li>\n<li>\n<p><code>endpoint.&lt;host:port&gt;.queue-size</code> - 类型：<a href=\"#counter\">计数器</a>，含义：队列实际大小</p>\n</li>\n<li>\n<p><code>endpoint.&lt;host:port&gt;.in-use</code> - 类型：<a href=\"#counter\">计数器</a>，含义：实际请求/响应数</p>\n</li>\n<li>\n<p><code>endpoint.&lt;host:port&gt;.ttfb</code> - 类型：<a href=\"#timer\">计时器</a>，含义：请求结束到响应开始之间的等待时间</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_datagram_socket_metrics\"><a class=\"anchor\" href=\"#_datagram_socket_metrics\"></a>数据报套接字指标</h3>\n<div class=\"paragraph\">\n<p>基本指标名（baseName）： <code>vertx.datagram</code></p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>sockets</code> - 类型：<a href=\"#counter\">计数器</a>，含义：数据报套接字数量</p>\n</li>\n<li>\n<p><code>exceptions</code> - 类型：<a href=\"#counter\">计数器</a>，含义：异常数量</p>\n</li>\n<li>\n<p><code>bytes-written</code> - 类型：<a href=\"#counter\">计数器</a>，含义：已写入字节数</p>\n</li>\n<li>\n<p><code>&lt;host&gt;:&lt;port&gt;.bytes-read</code> - 类型：<a href=\"#counter\">计数器</a>，含义：已读取字节数</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>此指标仅当数据报套接字正在监听时可用</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_pool_metrics\"><a class=\"anchor\" href=\"#_pool_metrics\"></a>池的指标</h3>\n<div class=\"paragraph\">\n<p>基本指标名（baseName）： <code>vertx.pools.&lt;type&gt;.&lt;name&gt;</code> 。其中 <code>type</code> 是池类型（如 <em>worker</em>， <em>datasource</em>），\n<code>name</code> 是池的名字（如 <code>vert.x-worker-thread</code> ）。</p>\n</div>\n<div class=\"paragraph\">\n<p>用于运行阻塞任务的工作线程池类型为 <em>worker</em> 。Vert.x将其用于 <em>vert.x-worker-thread</em> 线程和\n<em>vert.x-internal-blocking</em> 线程。名为 worker 的执行线程都是由 <code><a href=\"../../apidocs/io/vertx/core/WorkerExecutor.html\">WorkerExecutor</a></code> 创建的。</p>\n</div>\n<div class=\"paragraph\">\n<p>Vert.x JDBC客户端创建的数据源使用的池名为 <em>datasource</em>。</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>queue-delay</code> - 类型：<a href=\"#timer\">计时器</a>，含义：获取某个资源的等待时间，例如在队列中的等待时间。</p>\n</li>\n<li>\n<p><code>queue-size</code> - 类型：<a href=\"#counter\">计数器</a>，含义：在队列中等待的资源数</p>\n</li>\n<li>\n<p><code>usage</code> - 类型：<a href=\"#timer\">计时器</a>，含义：某个资源被持续使用的时间</p>\n</li>\n<li>\n<p><code>in-use</code> - 类型：<a href=\"#count\">[count]</a>，含义：使用资源的实际数量</p>\n</li>\n<li>\n<p><code>pool-ratio</code> - A ratio <a href=\"#gauge\">测量值</a>，含义：已使用的资源和池规模的比率</p>\n</li>\n<li>\n<p><code>max-pool-size</code> - 类型：<a href=\"#gauge\">测量值</a>，含义：池的最大规模</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>当池没有声明最大规模时，<code>pool-ratio</code> 和 <code>max_pool_size</code>\n将没有任何数据。</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"jmx\"><a class=\"anchor\" href=\"#jmx\"></a>JMX</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>默认禁用 JMX。</p>\n</div>\n<div class=\"paragraph\">\n<p>使用 JMX 需要手动启用，如下：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions().setMetricsOptions(\n    <span class=\"hljs-keyword\">new</span> DropwizardMetricsOptions().setJmxEnabled(<span class=\"hljs-keyword\">true</span>)\n));</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>如果从命令行运行 Vert.x，可以通过取消注释 <code>vertx</code> 或 <code>vertx.bat</code>\n脚本中的 JMX_OPTS 行来启用指标监控和 JMX：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>JMX_OPTS=\"-Dcom.sun.management.jmxremote -Dvertx.metrics.options.jmxEnabled=true\"</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>您可以配置创建 MBean 时使用的域：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions().setMetricsOptions(\n    <span class=\"hljs-keyword\">new</span> DropwizardMetricsOptions().\n        setJmxEnabled(<span class=\"hljs-keyword\">true</span>).\n        setJmxDomain(<span class=\"hljs-string\">\"mydomain\"</span>)\n));</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>在命令行中，只需将以下系统属性添加到您的应用程序即可（适用于 <code>vertx</code> 命令行和\nfat-jar ）：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>-Dvertx.metrics.options.jmxEnabled=true -Dvertx.metrics.options.jmxDomain=vertx</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_enabling_remote_jmx\"><a class=\"anchor\" href=\"#_enabling_remote_jmx\"></a>启用远程 JMX</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>如果希望通过 JMX 开放监控指标的远程访问，则至少需要设置以下系统属性：</p>\n</div>\n<div class=\"paragraph\">\n<p><code>com.sun.management.jmxremote</code></p>\n</div>\n<div class=\"paragraph\">\n<p>如果从命令行运行 Vert.x，可以通过取消注释 <code>vertx</code> 或 <code>vertx.bat</code>\n脚本中的 <code>JMX_OPTS</code> 行来启用远程 JMX。</p>\n</div>\n<div class=\"paragraph\">\n<p>关于配置 JMX 的更多信息请参阅 <a href=\"http://docs.oracle.com/javase/8/docs/technotes/guides/management/agent.html\">Oracle JMX 文档</a> 。</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>如果在公共服务器上运行 Vert.x，请谨慎开放远程 JMX 访问</strong></p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"dropwizard-registry\"><a class=\"anchor\" href=\"#dropwizard-registry\"></a>访问 Dropwizard Registry</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>配置指标服务时，可以指定一个可选的注册名（Registry Name），\n用于在 <a href=\"https://dropwizard.github.io/metrics/3.1.0/apidocs/com/codahale/metrics/SharedMetricRegistries.html\">Dropwizard Shared Registry</a>\n中注册底层的 <a href=\"https://dropwizard.github.io/metrics/3.1.0/getting-started/#the-registry\">Dropwizard Registry</a> 对象。\n可以使用这个注册名获取 MetricRegistry 对象并按需使用。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">VertxOptions options = <span class=\"hljs-keyword\">new</span> VertxOptions().setMetricsOptions(\n    <span class=\"hljs-keyword\">new</span> DropwizardMetricsOptions().setEnabled(<span class=\"hljs-keyword\">true</span>).setRegistryName(<span class=\"hljs-string\">\"my-registry\"</span>)\n);\nVertx vertx = Vertx.vertx(options);\n<span class=\"hljs-comment\">// 获取 MetricRegistry 对象</span>\nMetricRegistry registry = SharedMetricRegistries.getOrCreate(<span class=\"hljs-string\">\"my-registry\"</span>);}</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_using_already_existing_dropwizard_registry\"><a class=\"anchor\" href=\"#_using_already_existing_dropwizard_registry\"></a>使用已有的 Dropwizard Registry</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>您也可以利用已有的 <a href=\"https://dropwizard.github.io/metrics/3.1.0/getting-started/#the-registry\">Dropwizard Registry</a> 对象。\n只需在 <code>VertxOptions</code> 对象上调用 <code>setMetricRegistry</code> 方法，并传入 <code>MetricRegistry</code> 实例。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">MetricRegistry metricRegistry = <span class=\"hljs-keyword\">new</span> MetricRegistry();\nVertxOptions options = <span class=\"hljs-keyword\">new</span> VertxOptions().setMetricsOptions(\n   <span class=\"hljs-keyword\">new</span> DropwizardMetricsOptions().setEnabled(<span class=\"hljs-keyword\">true</span>).setMetricRegistry(metricRegistry)\n);\nVertx vertx = Vertx.vertx(options);</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_using_jolokia_and_hawtio\"><a class=\"anchor\" href=\"#_using_jolokia_and_hawtio\"></a>使用 Jolokia 和 Hawtio</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><a href=\"https://jolokia.org/\">Jolokia</a> 是 JMX-HTTP 的桥接，为 JSR-160 连接器提供了替代方案。\nJolokia 基于代理实现，支持许多平台。 除了基本的 JMX 操作外，它还有一些增强了 JMX 远程处理能力的特性，\n如批量请求等。</p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"http://hawt.io/\">Hawtio</a> 是一个模块化的Web控制台，使用了 Jolokia 开放的数据。\n您可以使用它创建仪表板并从 JMX 检索数据，例如内存，cpu 或任意 vert.x 指标。</p>\n</div>\n<div class=\"paragraph\">\n<p>本节介绍了如何配置 vert.x 应用程序，以便 Hawtio 获取监控指标。</p>\n</div>\n<div class=\"paragraph\">\n<p>首先，您需要使用以下选项来配置 vert.x 实例：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions().setMetricsOptions(\n    <span class=\"hljs-keyword\">new</span> DropwizardMetricsOptions()\n        .setEnabled(<span class=\"hljs-keyword\">true</span>)\n        .setJmxEnabled(<span class=\"hljs-keyword\">true</span>)\n        .setJmxDomain(<span class=\"hljs-string\">\"vertx-metrics\"</span>)));</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>您可以将 JMX 域更改为任意值。 Vert.x 集群的实例可以使用相同的配置。\n此配置可以让 vertx-dropwizard-metrics 将监控指标开放给本地 MBean 服务，\n由此，Jolokia 可以获取这些监控指标。</p>\n</div>\n<div class=\"paragraph\">\n<p>然后需要 <em>引入</em> Jolokia 以开放监控数据。 有多种 <em>引入</em> Jolokia 的方法。\n请参考 <a href=\"https://jolokia.org/reference/html/architecture.html\">详情文档</a>。\n这里介绍如何以默认配置使用 Jolokia Agent（译者注：代理，指JMX 的 Agent）。\n可以参考 <a href=\"https://jolokia.org/reference/html/\">Jolokia 文档</a> 进行配置。</p>\n</div>\n<div class=\"paragraph\">\n<p>Jolokia Agent 既可以在启动应用程序时配置，也可以附加在正在运行的 JVM 上（需要特殊权限才能访问该进程）。\n对于第一种情况，请使用以下命令启动应用程序：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>java -javaagent:/.../agents/jolokia-jvm.jar=port=7777,host=localhost -jar ...</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><code>-javaagent</code> 参数指定了 Jolokia Agent 的 jar 包路径。 您可以在命令行中指定主机地址和端口。\n在上面的例子里，配置了 REST 服务地址为 <code><a href=\"http://localhost:7777\" class=\"bare\">http://localhost:7777</a></code> 。</p>\n</div>\n<div class=\"paragraph\">\n<p>您也可以将 Jolokia Agent 注册到运行中的 JVM 上：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>java -jar jolokia-jvm.jar start PID</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>其中 <code>PID</code> 请替换为 JVM 的进程ID。</p>\n</div>\n<div class=\"paragraph\">\n<p>Jolokia 配置好并启动后，就可以用 Hawtio 消费监控数据。</p>\n</div>\n<div class=\"paragraph\">\n<p>在 Hawtio 可以进入连接详情：</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"../../images/hawtio-connect.png\" alt=\"hawtio connect\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>然后打开 <em>JMX</em> 标签页，可以看到一个 <em>目录</em>，\n其名为您在 Vert.x 配置中设定的 JMX 域：</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"../../images/hawtio-jmx.png\" alt=\"hawtio jmx\">\n</div>\n</div>\n<div class=\"paragraph\">\n<p>由此，您可以配置仪表板，并获取 Vert.x 开放的所有监控指标。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_using_jolokia_and_jmx4perl_to_expose_metrics_to_nagios\"><a class=\"anchor\" href=\"#_using_jolokia_and_jmx4perl_to_expose_metrics_to_nagios\"></a>使用 Jolokia 和 JMX4Perl 向 Nagios 开放监控指标</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><a href=\"http://search.cpan.org/~roland/jmx4perl/scripts/check_jmx4perl\">Check_jmx4perl</a> 是 Nagios 的一款插件，基于 jmx4perl 实现，可以访问远程 JMX 数据。\n通过这款插件可以将 Vert.x 的监控指标开放给 Nagios。</p>\n</div>\n<div class=\"paragraph\">\n<p>首先需要在启动您的应用程序时配置 Jolokia Agent。\n配置附加 Jolokia Agent 有多种方法。查阅 <a href=\"https://jolokia.org/reference/html/architecture.html\">获得更多详情</a>。\n本文介绍如何用默认配置启用 Jolokia Agent 。\n详细配置可参考 <a href=\"https://jolokia.org/reference/html/\">Jolokia 文档</a>。</p>\n</div>\n<div class=\"paragraph\">\n<p>Jolokia Agent 既可以在启动应用程序时配置，也可以附加在正在运行的 JVM 上（需要特殊权限才能访问该进程）。\n对于第一种情况，请使用以下命令启动应用程序：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>java -javaagent:/.../agents/jolokia-jvm.jar=port=7777,host=localhost -jar ...</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><code>-javaagent</code> 参数指定了 Jolokia Agent 的 jar 包路径。 您可以在命令行中指定主机地址和端口。\n在上面的例子里，配置了 REST 服务地址为 <code><a href=\"http://localhost:7777\" class=\"bare\">http://localhost:7777</a></code> 。</p>\n</div>\n<div class=\"paragraph\">\n<p>您也可以将 Jolokia Agent 注册到运行中的 JVM 上：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>java -jar jolokia-jvm.jar start PID</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>其中 <code>PID</code> 请替换为 JVM 的进程ID。</p>\n</div>\n<div class=\"paragraph\">\n<p>Jolokia 配置好并启动后，可以参考下面命令配置 Nagios：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>check_jmx4perl --url http://10.0.2.2:8778/jolokia --name eventloops --mbean vertx:name=vertx.event-loop-size\n--attribute Value --warning 4</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>请参阅 <a href=\"http://search.cpan.org/~roland/jmx4perl/scripts/check_jmx4perl\">check_jmx4perl 文档</a>\n获取更多关于检查配置的详情。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_metrics_commands_via_telnet_or_ssh_in_vert_x_shell_service\"><a class=\"anchor\" href=\"#_metrics_commands_via_telnet_or_ssh_in_vert_x_shell_service\"></a>在 Vert.x Shell 服务中通过 Telnet 或 SSH 执行的监控指标命令</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Metrics commands via Telnet or SSH in Vert.x Shell service</p>\n</div>\n<div class=\"paragraph\">\n<p>可以使用内置的 <em>help</em> 命令查找可用的监控指标命令：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>可用的命令</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>metrics-ls ：列出当前 Vert.x 实例的已知监控指标</p>\n</li>\n<li>\n<p>metrics-info ：以 JSON 格式显示当前 Vert.x 实例的监控指标信息</p>\n</li>\n<li>\n<p>metrics-histogram ：实时显示当前 Vert.x 实例的监控指标柱状图</p>\n</li>\n</ol>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>","version":"4.0.0"},"__N_SSG":true}