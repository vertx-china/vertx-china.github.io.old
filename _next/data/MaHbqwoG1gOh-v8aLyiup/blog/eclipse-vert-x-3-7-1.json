{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Eclipse Vert.x 3.7.1","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.7.1, a bug fix release of Vert.x 3.7.x and a few small features."},"date":"2019-05-27","slug":"eclipse-vert-x-3-7-1","readingTime":{"text":"4 min read","minutes":3.32,"time":199200,"words":664},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We have just re\\xADleased Vert.x 3.7.1, a bug fix re\\xADlease of Vert.x 3.7.x and a few small fea\\xADtures.\"), mdx(\"p\", null, \"Since the re\\xADlease of Vert.x 3.7.0, quite a few bugs have been re\\xADported. We would like to thank you all for re\\xADport\\xADing these is\\xADsues.\"), mdx(\"p\", null, \"In ad\\xADdi\\xADtion of bug fixes, this re\\xADlease pre\\xADpares the ground for Vert.x 4 with a few en\\xADhance\\xADments and dep\\xADre\\xADca\\xADtions.\"), mdx(\"h2\", {\n    \"id\": \"http-client-unix-domain-sockets\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#http-client-unix-domain-sockets\"\n  })), \"HTTP client Unix Domain Sockets\"), mdx(\"p\", null, \"Since this re\\xADlease the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HttpClient\"), \" sup\\xADports \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Unix_domain_socket\"\n  }), \"Unix Do\\xADmain Sock\\xADets\"), \" when using\\nNetty\\u2019s na\\xADtive trans\\xADports, which can be re\\xADally use\\xADful if you need to con\\xADnect to a local dae\\xADmon such as Docker\\u2019s Dae\\xADmon:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"HttpClient httpClient = vertx.createHttpClient();\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Only available on BSD and Linux with native transport\"), \"\\nSocketAddress addr = SocketAddress.domainSocketAddress(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/var/tmp/myservice.sock\\\"\"), \");\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Send request to the server\"), \"\\nhttpClient.request(HttpMethod.GET, addr, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8080\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"localhost\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/\\\"\"), \", resp -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Process response\"), \"\\n}).end();\\n\")), mdx(\"h2\", {\n    \"id\": \"http-client-websocket-connect-revisited\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#http-client-websocket-connect-revisited\"\n  })), \"HTTP client WebSocket connect revisited\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HttpClient\"), \" Web\\xADSocket meth\\xADods have been re\\xADvis\\xADited, in\\xADdeed these meth\\xADods were lack\\xADing of us\\xADabil\\xADity in gen\\xADeral or\\nwith vertx-\\u200Brx due to the op\\xADtional error han\\xADdling:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"HttpClient client = vertx.createHttpClient();\\nclient.websocket(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"80\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"example.com\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/\\\"\"), \", websocket -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// connected\"), \"\\n});\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// or\"), \"\\n\\nclient.websocket(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"80\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"example.com\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/\\\"\"), \", websocket -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// connected\"), \"\\n}, err -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// handle error\"), \"\\n});\\n\\n\")), mdx(\"p\", null, \"The new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webSocket\"), \" method pro\\xADvides now the best de\\xADvel\\xADoper ex\\xADpe\\xADri\\xADence for con\\xADnect\\xADing a Web\\xADSocket:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"HttpClient client = vertx.createHttpClient();\\nclient.webSocket(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"80\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"example.com\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/\\\"\"), \", ar -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// connected\"), \"\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// handler error\"), \"\\n  }\\n});\\n\")), mdx(\"p\", null, \"With Rx\\xADJava2, you can use now:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"HttpClient client = vertx.createHttpClient();\\nSingle<WebSocket> single = client.rxWebSocket(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"80\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"example.com\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/\\\"\"), \");\\nsingle.subscribe(\\n  ws -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// connected\"), \"\\n  },\\n  err -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// handle error\"), \"\\n  });\\n\")), mdx(\"h2\", {\n    \"id\": \"vertx-rx-usability-improvements\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-rx-usability-improvements\"\n  })), \"Vert.x Rx usability improvements\"), mdx(\"p\", null, \"As you may know, the \", mdx(Link, {\n    href: \"/docs/vertx-rx/java2/#_rxified_api\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x \", mdx(\"em\", {\n    parentName: \"a\"\n  }, \"Rx\\xADi\\xADfied\"), \" API\")), \" is gen\\xADer\\xADated from the bare Vert.x API.\"), mdx(\"p\", null, \"In this re\\xADlease, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-codegen\"), \" has been im\\xADproved to de\\xADter\\xADmine if an API ob\\xADject is an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Iterable\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Iterator\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Function\"), \".\\nThen its \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Rx\\xADi\\xADfied\"), \" equiv\\xADa\\xADlent will be an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Iterable\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Iterator\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Function\"), \" too.\"), mdx(\"p\", null, \"Let\\u2019s take an ex\\xADam\\xADple.\\nThe Vert.x \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MultiMap\"), \" class rep\\xADre\\xADsents a multi-\\u200Bmap of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"String\"), \" keys to a list of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"String\"), \" val\\xADues.\\nIt\\u2019s use\\xADful to rep\\xADre\\xADsent things like HTTP head\\xADers and pa\\xADra\\xADme\\xADters which allow mul\\xADti\\xADple val\\xADues for keys.\"), mdx(\"p\", null, \"Since the bare \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"io.vertx.core.MultiMap\"), \" im\\xADple\\xADments \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Iterable<Map.Entry<String, String>>\"), \", you can it\\xADer\\xADate through the con\\xADtent with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"for-each\"), \" loop.\\nStart\\xADing with 3.7.1, the same is pos\\xADsi\\xADble with the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Rx\\xADi\\xADfied\"), \" ver\\xADsion:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"io.vertx.reactivex.core.MultiMap headers = request.headers();\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"for\"), \" (Entry<String, String> header : headers) {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// inspect header  \"), \"\\n}\\n\")), mdx(\"p\", null, \"Or, for ad\\xADvanced trans\\xADfor\\xADma\\xADtions:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Flowable<Entry<String, String>> headers = Flowable.fromIterable(request.headers());\\n\")), mdx(\"h2\", {\n    \"id\": \"graphiql-ide\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#graphiql-ide\"\n  })), \"GraphiQL IDE\"), mdx(\"p\", null, \"Vert.x 3.7.0 added sup\\xADport for build\\xADing \", mdx(Link, {\n    href: \"/docs/vertx-web-graphql/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"GraphQL servers\")), \" with Vert.x Web and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://graphql-java.com/\"\n  }), \"GraphQL-\\u200BJava\"), \".\"), mdx(\"p\", null, \"In 3.7.1, the GraphQL han\\xADdler can be con\\xADfig\\xADured to ex\\xADpose the GraphiQL IDE:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"GraphQLHandlerOptions options = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" GraphQLHandlerOptions()\\n  .setGraphiQLOptions(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" GraphiQLOptions()\\n    .setEnabled(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"true\"), \")\\n  );\\n\\nrouter.route(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/graphql\\\"\"), \").handler(GraphQLHandler.create(graphQL, options));\\n\")), mdx(\"h2\", {\n    \"id\": \"vertx-380-is-the-next-release\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-380-is-the-next-release\"\n  })), \"Vert.x 3.8.0 is the next release\"), mdx(\"p\", null, \"The next ver\\xADsion of Vert.x will be 3.8 and tar\\xADgets end of June / early July with the fol\\xADlow\\xADing themes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In\\xADtro\\xADduc\\xADing a Promise in\\xADter\\xADface to be used in\\xADstead of Fu\\xADture in a cou\\xADple of places of the code\\xADbase such as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Verticle\"), \" start or\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"executeBlocking\"), \". The goal is to move the com\\xADple\\xADtion part in Vert.x 4 from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Future\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Promise\"), \" which be\\xADcomes the ob\\xADject to be\\ncom\\xADpleted and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Future\"), \" is a view that is con\\xADsumed by clients\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Json Pointer sup\\xADport\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The new SQL client will be re\\xADleased as tech pre\\xADview (until v4)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re\\xADdis\\xADPool as tech pre\\xADview (until v4) bring back con\\xADnec\\xADtion man\\xADage\\xADment, lazy re\\xADcon\\xADnect and scal\\xADing to all client modes (Sin\\xADgle, Sen\\xADtinel and Clus\\xADter)\")), mdx(\"p\", null, \"Vert.x 3.7.1 re\\xADlease notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.7.1-Release-Notes\"\n  }), \"https://github.com/vert-\\u200Bx3/wiki/wiki/3.7.1-\\u200BRelease-Notes\"))), mdx(\"p\", null, \"Vert.x 3.7.1 dep\\xADre\\xADca\\xADtions and break\\xADing changes\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.7.1-Deprecations-and-breaking-changes\"\n  }), \"https://github.com/vert-\\u200Bx3/wiki/wiki/3.7.1-\\u200BDeprecations-and-breaking-changes\")), mdx(\"p\", null, \"The event bus client using the SockJS bridge are avail\\xADable from NPM, Bower and as a We\\xADb\\xADJar:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"https://www.npmjs.com/pack\\xADage/vertx3-\\u200Beventbus-client\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"https://github.com/vert-\\u200Bx3/vertx-\\u200Bbus-bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"http://www.we\\xADb\\xADjars.org/\"))), mdx(\"p\", null, \"Docker im\\xADages are also avail\\xADable on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \". The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion is also avail\\xADable from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"The ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.6.3%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.7.1/view\"\n  }), \"Bin\\xADtray\"), \".\"), mdx(\"p\", null, \"Happy cod\\xADing and see you soon on our user or dev \", mdx(Link, {\n    href: \"/community\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"chan\\xADnels\")), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We have just re­leased Vert.x 3.7.1, a bug fix re­lease of Vert.x 3.7.x and a few small fea­tures.</p><p>Since the re­lease of Vert.x 3.7.0, quite a few bugs have been re­ported. We would like to thank you all for re­port­ing these is­sues.</p><p>In ad­di­tion of bug fixes, this re­lease pre­pares the ground for Vert.x 4 with a few en­hance­ments and dep­re­ca­tions.</p><h2 id=\"http-client-unix-domain-sockets\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#http-client-unix-domain-sockets\"></a>HTTP client Unix Domain Sockets</h2><p>Since this re­lease the <code>HttpClient</code> sup­ports <a href=\"https://en.wikipedia.org/wiki/Unix_domain_socket\">Unix Do­main Sock­ets</a> when using\nNetty’s na­tive trans­ports, which can be re­ally use­ful if you need to con­nect to a local dae­mon such as Docker’s Dae­mon:</p><pre><code class=\"hljs language-java\">HttpClient httpClient = vertx.createHttpClient();\n\n<span class=\"hljs-comment\">// Only available on BSD and Linux with native transport</span>\nSocketAddress addr = SocketAddress.domainSocketAddress(<span class=\"hljs-string\">&quot;/var/tmp/myservice.sock&quot;</span>);\n\n<span class=\"hljs-comment\">// Send request to the server</span>\nhttpClient.request(HttpMethod.GET, addr, <span class=\"hljs-number\">8080</span>, <span class=\"hljs-string\">&quot;localhost&quot;</span>, <span class=\"hljs-string\">&quot;/&quot;</span>, resp -&gt; {\n  <span class=\"hljs-comment\">// Process response</span>\n}).end();\n</code></pre><h2 id=\"http-client-websocket-connect-revisited\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#http-client-websocket-connect-revisited\"></a>HTTP client WebSocket connect revisited</h2><p>The <code>HttpClient</code> Web­Socket meth­ods have been re­vis­ited, in­deed these meth­ods were lack­ing of us­abil­ity in gen­eral or\nwith vertx-​rx due to the op­tional error han­dling:</p><pre><code class=\"hljs language-java\">HttpClient client = vertx.createHttpClient();\nclient.websocket(<span class=\"hljs-number\">80</span>, <span class=\"hljs-string\">&quot;example.com&quot;</span>, <span class=\"hljs-string\">&quot;/&quot;</span>, websocket -&gt; {\n  <span class=\"hljs-comment\">// connected</span>\n});\n\n<span class=\"hljs-comment\">// or</span>\n\nclient.websocket(<span class=\"hljs-number\">80</span>, <span class=\"hljs-string\">&quot;example.com&quot;</span>, <span class=\"hljs-string\">&quot;/&quot;</span>, websocket -&gt; {\n  <span class=\"hljs-comment\">// connected</span>\n}, err -&gt; {\n  <span class=\"hljs-comment\">// handle error</span>\n});\n\n</code></pre><p>The new <code>webSocket</code> method pro­vides now the best de­vel­oper ex­pe­ri­ence for con­nect­ing a Web­Socket:</p><pre><code class=\"hljs language-java\">HttpClient client = vertx.createHttpClient();\nclient.webSocket(<span class=\"hljs-number\">80</span>, <span class=\"hljs-string\">&quot;example.com&quot;</span>, <span class=\"hljs-string\">&quot;/&quot;</span>, ar -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    <span class=\"hljs-comment\">// connected</span>\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// handler error</span>\n  }\n});\n</code></pre><p>With Rx­Java2, you can use now:</p><pre><code class=\"hljs language-java\">HttpClient client = vertx.createHttpClient();\nSingle&lt;WebSocket&gt; single = client.rxWebSocket(<span class=\"hljs-number\">80</span>, <span class=\"hljs-string\">&quot;example.com&quot;</span>, <span class=\"hljs-string\">&quot;/&quot;</span>);\nsingle.subscribe(\n  ws -&gt; {\n    <span class=\"hljs-comment\">// connected</span>\n  },\n  err -&gt; {\n    <span class=\"hljs-comment\">// handle error</span>\n  });\n</code></pre><h2 id=\"vertx-rx-usability-improvements\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-rx-usability-improvements\"></a>Vert.x Rx usability improvements</h2><p>As you may know, the <a href=\"/docs/vertx-rx/java2/#_rxified_api\">Vert.x <em>Rx­i­fied</em> API</a> is gen­er­ated from the bare Vert.x API.</p><p>In this re­lease, <code>vertx-codegen</code> has been im­proved to de­ter­mine if an API ob­ject is an <code>Iterable</code>, <code>Iterator</code>, or <code>Function</code>.\nThen its <em>Rx­i­fied</em> equiv­a­lent will be an <code>Iterable</code>, <code>Iterator</code>, or <code>Function</code> too.</p><p>Let’s take an ex­am­ple.\nThe Vert.x <code>MultiMap</code> class rep­re­sents a multi-​map of <code>String</code> keys to a list of <code>String</code> val­ues.\nIt’s use­ful to rep­re­sent things like HTTP head­ers and pa­ra­me­ters which allow mul­ti­ple val­ues for keys.</p><p>Since the bare <code>io.vertx.core.MultiMap</code> im­ple­ments <code>Iterable&lt;Map.Entry&lt;String, String&gt;&gt;</code>, you can it­er­ate through the con­tent with a <code>for-each</code> loop.\nStart­ing with 3.7.1, the same is pos­si­ble with the <em>Rx­i­fied</em> ver­sion:</p><pre><code class=\"hljs language-java\">io.vertx.reactivex.core.MultiMap headers = request.headers();\n<span class=\"hljs-keyword\">for</span> (Entry&lt;String, String&gt; header : headers) {\n  <span class=\"hljs-comment\">// inspect header  </span>\n}\n</code></pre><p>Or, for ad­vanced trans­for­ma­tions:</p><pre><code class=\"hljs language-java\">Flowable&lt;Entry&lt;String, String&gt;&gt; headers = Flowable.fromIterable(request.headers());\n</code></pre><h2 id=\"graphiql-ide\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#graphiql-ide\"></a>GraphiQL IDE</h2><p>Vert.x 3.7.0 added sup­port for build­ing <a href=\"/docs/vertx-web-graphql/java/\">GraphQL servers</a> with Vert.x Web and <a href=\"http://graphql-java.com/\">GraphQL-​Java</a>.</p><p>In 3.7.1, the GraphQL han­dler can be con­fig­ured to ex­pose the GraphiQL IDE:</p><pre><code class=\"hljs language-java\">GraphQLHandlerOptions options = <span class=\"hljs-keyword\">new</span> GraphQLHandlerOptions()\n  .setGraphiQLOptions(<span class=\"hljs-keyword\">new</span> GraphiQLOptions()\n    .setEnabled(<span class=\"hljs-keyword\">true</span>)\n  );\n\nrouter.route(<span class=\"hljs-string\">&quot;/graphql&quot;</span>).handler(GraphQLHandler.create(graphQL, options));\n</code></pre><h2 id=\"vertx-380-is-the-next-release\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-380-is-the-next-release\"></a>Vert.x 3.8.0 is the next release</h2><p>The next ver­sion of Vert.x will be 3.8 and tar­gets end of June / early July with the fol­low­ing themes:</p><ul><li>In­tro­duc­ing a Promise in­ter­face to be used in­stead of Fu­ture in a cou­ple of places of the code­base such as <code>Verticle</code> start or\n<code>executeBlocking</code>. The goal is to move the com­ple­tion part in Vert.x 4 from <code>Future</code> to <code>Promise</code> which be­comes the ob­ject to be\ncom­pleted and <code>Future</code> is a view that is con­sumed by clients</li><li>Json Pointer sup­port</li><li>The new SQL client will be re­leased as tech pre­view (until v4)</li><li>Re­dis­Pool as tech pre­view (until v4) bring back con­nec­tion man­age­ment, lazy re­con­nect and scal­ing to all client modes (Sin­gle, Sen­tinel and Clus­ter)</li></ul><p>Vert.x 3.7.1 re­lease notes</p><ul><li><a href=\"https://github.com/vert-x3/wiki/wiki/3.7.1-Release-Notes\">https://github.com/vert-​x3/wiki/wiki/3.7.1-​Release-Notes</a></li></ul><p>Vert.x 3.7.1 dep­re­ca­tions and break­ing changes</p><p><a href=\"https://github.com/vert-x3/wiki/wiki/3.7.1-Deprecations-and-breaking-changes\">https://github.com/vert-​x3/wiki/wiki/3.7.1-​Deprecations-and-breaking-changes</a></p><p>The event bus client using the SockJS bridge are avail­able from NPM, Bower and as a We­b­Jar:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">https://www.npmjs.com/pack­age/vertx3-​eventbus-client</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">https://github.com/vert-​x3/vertx-​bus-bower</a></li><li><a href=\"http://www.webjars.org/\">http://www.we­b­jars.org/</a></li></ul><p>Docker im­ages are also avail­able on the <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>. The Vert.x dis­tri­b­u­tion is also avail­able from <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>The ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.6.3%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.7.1/view\">Bin­tray</a>.</p><p>Happy cod­ing and see you soon on our user or dev <a href=\"/community/\">chan­nels</a>.</p>","scope":{}}},"prevPost":{"meta":{"title":"VS Code Vert.x Starter Extension","category":"news","authors":[{"name":"Daniel Petisme","github_id":"danielpetisme"}],"summary":"Today, we are really excited to announce the Visual Studio Code Vert.x Starter extension. It allows you to create a Vert.x project, customize the creation, and search for dependencies."},"date":"2019-05-29","slug":"vs-code-vert-x-starter-extension"},"nextPost":{"meta":{"title":"Eclipse Vert.x 3.7.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are extremely pleased to announce that the Eclipse Vert.x version 3.7.0 has been released."},"date":"2019-04-02","slug":"eclipse-vert-x-3-7-0-released"},"relatedPosts":[{"meta":{"title":"Building services and APIs with AMQP 1.0","category":"guides","authors":[{"name":"Jakub Scholz","github_id":"scholzj"}],"summary":"Microservices and APIs are everywhere. Everyone talks about them, presentation slides are full of them ... some people are actually even building them."},"date":"2017-01-25","slug":"building-services-and-apis-with-amqp-1-0"},{"meta":{"title":"Eclipse Vert.x 3.7.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are extremely pleased to announce that the Eclipse Vert.x version 3.7.0 has been released."},"date":"2019-04-02","slug":"eclipse-vert-x-3-7-0-released"},{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"}]},"__N_SSG":true}