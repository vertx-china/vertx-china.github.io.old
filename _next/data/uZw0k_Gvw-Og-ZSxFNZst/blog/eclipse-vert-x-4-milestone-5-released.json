{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Eclipse Vert.x 4 milestone 5 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are extremely pleased to announce the fifth 4.0 milestone release of Eclipse Vert.x. This release aims to provide a reliable distribution of the current development of Vert.x 4."},"date":"2020-06-10","slug":"eclipse-vert-x-4-milestone-5-released","readingTime":{"text":"7 min read","minutes":6.295,"time":377700,"words":1259},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are ex\\xADtremely pleased to an\\xADnounce the fifth 4.0 mile\\xADstone re\\xADlease of Eclipse Vert.x.\"), mdx(\"p\", null, \"Vert.x 4 is the evo\\xADlu\\xADtion of the Vert.x 3.x se\\xADries that will bring key fea\\xADtures to Vert.x.\"), mdx(\"p\", null, \"This re\\xADlease aims to pro\\xADvide a re\\xADli\\xADable dis\\xADtri\\xADb\\xADu\\xADtion of the cur\\xADrent de\\xADvel\\xADop\\xADment of Vert.x 4 for peo\\xADple that\\nwant to try it and pro\\xADvide feed\\xADback.\"), mdx(\"h2\", {\n    \"id\": \"new-kids-on-the-block-json-schema-web-validation-and-web-openapi\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#new-kids-on-the-block-json-schema-web-validation-and-web-openapi\"\n  })), \"New kids on the block: Json Schema, Web Validation and Web OpenAPI\"), mdx(\"p\", null, \"we de\\xADcide to take HTTP re\\xADquest val\\xADi\\xADda\\xADtion in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-web\"), \" and Con\\xADtract Dri\\xADven de\\xADvel\\xADop\\xADment using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/OAI/OpenAPI-Specification\"\n  }), \"Ope\\xADnAPI\"), \"\\nto a next level in Vert.x 4, allow us to in\\xADtro\\xADduce:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/eclipse-vertx/vertx-json-schema\"\n  }), \"Vert.x Json Schema\"), \": Ex\\xADten\\xADsi\\xADble sync/async json-\\u200Bschema val\\xADida\\xADtor de\\xADsigned for Vert.x JSON types, sup\\xADport\\xADing Json Schema Draft-\\u200B7 and Ope\\xADnAPI di\\xADalect.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-web/tree/master/vertx-web-validation\"\n  }), \"Vert.x Web Val\\xADi\\xADda\\xADtion\"), \": Ex\\xADten\\xADsi\\xADble sync/async HTTP re\\xADquest val\\xADida\\xADtor, pro\\xADvid\\xADing a DSL to de\\xADscribe ex\\xADpected HTTP re\\xADquests.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-web/tree/master/vertx-web-openapi\"\n  }), \"Vert.x Web Ope\\xADnAPI\"), \": New sup\\xADport for Con\\xADtract Dri\\xADven de\\xADvel\\xADop\\xADment based on Ope\\xADnAPI\")), mdx(\"p\", null, \"Vert.x Json Schema is a pow\\xADer\\xADful \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://json-schema.org/\"\n  }), \"Json Schema\"), \" val\\xADida\\xADtor which in\\xADcludes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Async \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"$ref\"), \" res\\xADo\\xADlu\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cus\\xADtom key\\xADwords/Cus\\xADtom di\\xADalects sup\\xADport\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A DSL to build schemas\")), mdx(\"p\", null, \"Com\\xADbin\\xADing Vert.x Json Schema and Vert.x Web Val\\xADi\\xADda\\xADtion you can eas\\xADily val\\xADi\\xADdate HTTP re\\xADquests:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"ValidationHandler handler = ValidationHandler\\n  .builder(schemaParser)\\n  .pathParameter(Parameters.param(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"myPathParam\\\"\"), \", stringSchema()))\\n  .queryParameter(Parameters.optionalParam(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"myQueryParam\\\"\"), \", intSchema()))\\n  .body(Bodies.json(Schemas.ref(JsonPointer.fromURI(URI.create(\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"some_schema.json\\\"\"), \"\\n  )))))\\n  .build();\\n\\nrouter.post(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/{myPathParam}\\\"\"), \").handler(handler);\\n\")), mdx(\"p\", null, \"Check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-web/blob/master/vertx-web-validation/src/main/java/examples/WebValidationExamples.java\"\n  }), \"Web val\\xADi\\xADda\\xADtion ex\\xADam\\xADples\"), \" and pro\\xADvide feed\\xADback on the APIs!\"), mdx(\"p\", null, \"Vert.x Web Val\\xADi\\xADda\\xADtion al\\xADlows you to use Vert.x Web API Ser\\xADvice with\\xADout Vert.x Web API Con\\xADtract:\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-web/tree/master/vertx-web-api-service/src/main/java/examples\"\n  }), \"Vert.x Web API Ser\\xADvice ex\\xADam\\xADple\")), mdx(\"p\", null, \"You can achieve Con\\xADtract Dri\\xADven de\\xADvel\\xADop\\xADment, with Vert.x Web Ope\\xADnAPI:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"RouterFactory.create(vertx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"src/main/resources/petstore.yaml\\\"\"), \",\\n  routerFactoryAsyncResult -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (routerFactoryAsyncResult.succeeded()) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Spec loaded with success, retrieve the router\"), \"\\n    RouterFactory routerFactory = routerFactoryAsyncResult.result();\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// You can enable or disable different features of router factory using RouterFactoryOptions\"), \"\\n    RouterFactoryOptions options = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" RouterFactoryOptions();\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Set the options\"), \"\\n    routerFactory.setOptions(options);\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Add an handler to operation listPets\"), \"\\n    routerFactory.operation(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"listPets\\\"\"), \").handler(routingContext -> {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle listPets operation\"), \"\\n      routingContext.response().setStatusMessage(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Called listPets\\\"\"), \").end();\\n    }).failureHandler(routingContext -> { \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Add a failure handler to the same operation\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// This is the failure handler\"), \"\\n      Throwable failure = routingContext.failure();\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (failure \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"instanceof\"), \" BadRequestException)\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle Validation Exception\"), \"\\n        routingContext\\n          .response()\\n          .setStatusCode(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"400\"), \")\\n          .putHeader(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"content-type\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"application/json\\\"\"), \")\\n          .end(((BadRequestException)failure).toJson().toBuffer());\\n    });\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Add a security handler\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle security here\"), \"\\n    routerFactory.securityHandler(\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"api_key\\\"\"), \",\\n      JWTAuthHandler.create(jwtAuth)\\n    );\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Now you have to generate the router\"), \"\\n    Router router = routerFactory.createRouter();\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Something went wrong during router factory initialization\"), \"\\n  }\\n});\\n\")), mdx(\"p\", null, \"Vert.x Web Ope\\xADnAPI is the new way to do Vert.x Web API Con\\xADtract, how\\xADever Vert.x Web API Con\\xADtract re\\xADmains sup\\xADported\\nfor the whole life\\xADtime of Vert.x 4 to pro\\xADvide a mi\\xADgra\\xADtion path: we will pro\\xADvide soon a mi\\xADgra\\xADtion guide for Vert.x Web API Con\\xADtract.\"), mdx(\"p\", null, \"Check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-web/blob/master/vertx-web-openapi/src/main/java/examples/OpenAPI3Examples.java\"\n  }), \"Web Ope\\xADnAPI ex\\xADam\\xADples\")), mdx(\"h2\", {\n    \"id\": \"sql-client-templates\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#sql-client-templates\"\n  })), \"SQL Client templates\"), mdx(\"p\", null, \"SQL Client Tem\\xADplates is a small li\\xADbrary de\\xADsigned to fa\\xADcil\\xADi\\xADtate the ex\\xADe\\xADcu\\xADtion of SQL queries.\"), mdx(\"p\", null, \"Sim\\xADply put you ex\\xADe\\xADcute pre\\xADpared SQL queries with a map in\\xADstead of a tuple:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Map<String, Object> parameters = Collections.singletonMap(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"id\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"1\"), \");\\n\\nSqlTemplate\\n  .forQuery(client, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT * FROM users WHERE id=#{id}\\\"\"), \")\\n  .execute(parameters)\\n  .onSuccess(users -> {\\n    users.forEach(row -> {\\n      System.out.println(row.getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"first_name\\\"\"), \") + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\" \\\"\"), \" + row.getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"last_name\\\"\"), \"));\\n    });\\n  });\\n\")), mdx(\"p\", null, \"A tem\\xADplate can per\\xADform tuple to ob\\xADject map\\xADping for pa\\xADra\\xADme\\xADters and rows.\"), mdx(\"p\", null, \"Here is row map\\xADping using Jack\\xADson Data\\xADbind.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"SqlTemplate\\n  .forQuery(client, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT * FROM users WHERE id=#{id}\\\"\"), \")\\n  .mapTo(User.class)\\n  .execute(Collections.singletonMap(\\\"id\\\", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"1\"), \"))\\n  .onSuccess(users -> {\\n    users.forEach(user -> {\\n      System.out.println(user.firstName + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\" \\\"\"), \" + user.lastName);\\n    });\\n  });\\n\")), mdx(\"p\", null, \"You can also uses Vert.x data ob\\xADjects to gen\\xADer\\xADate map\\xADpers in\\xADstead: when a data ob\\xADject is an\\xADno\\xADtate with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@RowMapped\"), \" a row map\\xADper\\nfunc\\xADtion will be gen\\xADer\\xADated\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@DataObject\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@RowMapped\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"User\"), \" \"), \"{\\n  ...\\n}\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Generated by SQL template code generator\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"UserRowMapper\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"implements\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"java\"), \".\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"util\"), \".\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"function\"), \".\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"Function\"), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"io\"), \".\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"vertx\"), \".\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"sqlclient\"), \".\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"Row\"), \", \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"User\"), \"> \"), \"{\\n  ...\\n}\\n\")), mdx(\"p\", null, \"You can then use this map\\xADper in\\xADstead of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"User.class\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"SqlTemplate\\n  .forQuery(client, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT * FROM users WHERE id=#{id}\\\"\"), \")\\n  .mapTo(UserRowMapper.INSTANCE)\\n  .execute(Collections.singletonMap(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"id\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"1\"), \"))\\n  .onSuccess(users -> {\\n    users.forEach(user -> {\\n      System.out.println(user.firstName + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\" \\\"\"), \" + user.lastName);\\n    });\\n  });\\n\")), mdx(\"h2\", {\n    \"id\": \"a-new-clustering-spi\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#a-new-clustering-spi\"\n  })), \"A new clustering SPI\"), mdx(\"p\", null, \"This mile\\xADstone in\\xADtro\\xADduces the clus\\xADter\\xADing SPI re\\xADdesign that al\\xADlows to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sim\\xADplify both Vert.x core and clus\\xADter man\\xADager im\\xADple\\xADmen\\xADta\\xADtions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lever\\xADage ca\\xADpa\\xADbil\\xADi\\xADties of some clus\\xADter man\\xADagers (e.g. data loss pro\\xADtec\\xADtion)\")), mdx(\"p\", null, \"Read the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/RFC:-clustering-SPI-revisited\"\n  }), \"RFC\"), \" doc\\xADu\\xADment if you would like to know more.\"), mdx(\"p\", null, \"As a de\\xADvel\\xADoper, you should not see much dif\\xADfer\\xADence, the Event\\xADBus and Shared data API re\\xADmain un\\xADchanged.\"), mdx(\"p\", null, \"How\\xADever, if you op\\xADer\\xADate a clus\\xADter in pro\\xADduc\\xADtion, you can\\xADnot mix Vert.x 3 and Vert.x 4 nodes.\"), mdx(\"p\", null, \"The fol\\xADlow\\xADing clus\\xADter man\\xADagers im\\xADple\\xADmen\\xADta\\xADtions have been up\\xADdated: \", mdx(Link, {\n    href: \"/docs/vertx-hazelcast/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-hazelcast\"))), \", \", mdx(Link, {\n    href: \"/docs/vertx-infinispan/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-infinispan\"))), \" and \", mdx(Link, {\n    href: \"/docs/vertx-ignite/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-iginite\"))), \" (thanks \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/zyclonite\"\n  }), \"Lukas Pret\\xADten\\xADthaler\"), \" for your help).\\nThe \", mdx(Link, {\n    href: \"/docs/vertx-zookeeper/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-zookeeper\"))), \" up\\xADdate will be avail\\xADable in the next re\\xADlease.\"), mdx(\"h2\", {\n    \"id\": \"upgrade-to-infinispan-10-and-ignite-280\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#upgrade-to-infinispan-10-and-ignite-280\"\n  })), \"Upgrade to Infinispan 10 and Ignite 2.8.0\"), mdx(\"p\", null, \"Following-\\u200Bup on the clus\\xADter\\xADing SPI up\\xADdate :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the In\\xADfin\\xADis\\xADpan clus\\xADter man\\xADager now de\\xADpends on In\\xADfin\\xADis\\xADpan 10\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the Apache Ig\\xADnite clus\\xADter man\\xADager on 2.8.0\")), mdx(\"h2\", {\n    \"id\": \"complete-refactoring-on-vertx-auth-authnauthz-split\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#complete-refactoring-on-vertx-auth-authnauthz-split\"\n  })), \"Complete refactoring on vertx-auth authn/authz split\"), mdx(\"p\", null, \"Au\\xADthen\\xADti\\xADca\\xADtion has been de\\xADcou\\xADpled from au\\xADtho\\xADriza\\xADtion, all mod\\xADules now im\\xADple\\xADment at least one of the two in\\xADter\\xADfaces:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AuthenticationProvider\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AuthorizationProvider\"))), mdx(\"p\", null, \"This im\\xADprove\\xADment pro\\xADvides more flex\\xADi\\xADb\\xADlity such as user au\\xADthen\\xADti\\xADca\\xADtion using a prop\\xADerty file and au\\xADtho\\xADriza\\xADtion against a data\\xADbase.\"), mdx(\"p\", null, \"This mile\\xADstone also in\\xADcludes a few new im\\xADple\\xADmen\\xADta\\xADtions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertx-auth-ldap\"), \" su\\xADper\\xADsedes \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shiro\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertx-authproperties\"), \" su\\xADper\\xADsedes \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shiro\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertx-auth-sql\"), \" to use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sql-client\"), \"s as source of user data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertx-auth-webauthn\"), \" pro\\xADvides \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"FIDO2\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"webauthn\"), \" au\\xADthen\\xADti\\xADca\\xADtion\")), mdx(\"p\", null, \"Many bug fixes have been done and miss\\xADing fea\\xADtures such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JWK\"), \" ro\\xADta\\xADtion sup\\xADport for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OAuth2/OIDC\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JWT\"), \" is now im\\xADple\\xADmented.\"), mdx(\"h2\", {\n    \"id\": \"vertx-web-updates\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-web-updates\"\n  })), \"Vertx-web updates\"), mdx(\"p\", null, \"Vert.x-Web also got some up\\xADdates.\"), mdx(\"p\", null, \"The ses\\xADsion han\\xADdler code now al\\xADlows other stor\\xADages:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cookie-session-store\"), \" - stores all ses\\xADsion data in a cookie\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"redis-session-store\"), \" - store all ses\\xADsion data in a redis key store data\\xADbase\")), mdx(\"p\", null, \"Ses\\xADsions fol\\xADlows the lat\\xADest OWASP rec\\xADom\\xADmen\\xADda\\xADtions and al\\xADlows to now use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cookieless\"), \" ses\\xADsions, where the ses\\xADsion key is passed in the URL.\"), mdx(\"p\", null, \"Routers are now proxy aware: when en\\xADabled, routers can parse the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Forward\"), \" head\\xADers and re\\xADbind the in\\xADter\\xADnal val\\xADues\\nfor pro\\xADto\\xADcol, host and port for user con\\xADvinience. This is quite use\\xADful when ap\\xADpli\\xADca\\xADtions are de\\xADployed be\\xADhind\\na caching server, which can mod\\xADify the orig\\xADi\\xADnal re\\xADquest.\"), mdx(\"h2\", {\n    \"id\": \"junit-5-support-updates\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#junit-5-support-updates\"\n  })), \"JUnit 5 support updates\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-junit5\"), \" mod\\xADule has had the fol\\xADlow\\xADing up\\xADdates since the last mile\\xADstone.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes#split-the-core-implementation-and-extensions\"\n  }), \"The in\\xADter\\xADnals have been refac\\xADtored\"), \" to split the im\\xADple\\xADmen\\xADta\\xADtion and ex\\xADten\\xADsions around a service-\\u200Bprovider in\\xADter\\xADface.\\nWhile this is largely trans\\xADpar\\xADent in terms of API, you need to be aware that:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the Vertx pa\\xADra\\xADme\\xADter should be placed be\\xADfore any pa\\xADra\\xADme\\xADter that re\\xADquires it for cre\\xADation, such as when in\\xADject\\xADing a We\\xADb\\xADClient,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the vertx-\\u200Bjunit5 mod\\xADule now only of\\xADfers APIs for the Vert.x core mod\\xADule (vertx-\\u200Bcore),\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/reactiverse/reactiverse-junit5-extensions\"\n  }), \"reactiverse-\\u200Bjunit5-\\u200Bextensions mod\\xADule\"), \" now hosts ex\\xADten\\xADsions that offer extra pa\\xADra\\xADme\\xADter types like We\\xADb\\xADClient,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the Rx\\xADJava 1 and 2 bind\\xADings are now of\\xADfered as vertx-\\u200Bjunit5-\\u200Brx-java and vertx-\\u200Bjunit5-\\u200Brx-java2 mod\\xADules in the vertx-\\u200Bjunit5-\\u200Bextensions repos\\xADi\\xADtory.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"succeeding()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"failing()\"), \" meth\\xADods in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"VertxTestContext\"), \" have been dep\\xADre\\xADcated to im\\xADprove er\\xADgonom\\xADics, you should in\\xADstead use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"succeedingThenComplete()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"failingThenComplete()\"), \".\")), mdx(\"h2\", {\n    \"id\": \"ramping-up-to-vertx-4\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#ramping-up-to-vertx-4\"\n  })), \"Ramping up to Vert.x 4\"), mdx(\"p\", null, \"In\\xADstead of de\\xADvel\\xADop\\xADing all new fea\\xADtures ex\\xADclu\\xADsively in Vert.x 4, we in\\xADtro\\xADduce some of these fea\\xADtures in the 3.x branch\\nso the com\\xADmu\\xADnity can ben\\xADe\\xADfit from them. The Vert.x 4 de\\xADvel\\xADop\\xADment focus on more fun\\xADda\\xADmen\\xADtal changes that can\\xADnot be done\\nin the 3.x se\\xADries.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/blog/vertx-4-milestone4-release/vertx-4-timeline.png\",\n    \"alt\": \"Screenshot\"\n  }))), mdx(\"p\", null, \"This is the fifth mile\\xADstone of Vert.x 4, you can of course ex\\xADpect more mile\\xADstones to out\\xADline the progress of the ef\\xADfort.\"), mdx(\"p\", null, \"You can also read the pre\\xADvi\\xADous mile\\xADstone an\\xADnounces:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    href: \"/blog/eclipse-vert-x-4-milestone-4-released\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-4-\\u200Breleased\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    href: \"/blog/eclipse-vert-x-4-milestone-3-released\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-3-\\u200Breleased\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    href: \"/blog/eclipse-vert-x-4-milestone-2-released\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-2-\\u200Breleased\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    href: \"/blog/eclipse-vert-x-4-milestone-1-released\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-1-\\u200Breleased\")))), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\"), \"\\ncan be found on the wiki.\"), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone5\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone5/\"\n  }), \"Maven Cen\\xADtral\"), \".\"), mdx(\"p\", null, \"You can boot\\xADstrap a Vert.x 4.0.0-\\u200Bmilestone5 project using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://start.vertx.io\"\n  }), \"https://start.vertx.io\"), \".\"), mdx(\"p\", null, \"The doc\\xADu\\xADmen\\xADta\\xADtion has been de\\xADployed on this pre\\xADview web-\\u200Bsite \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx-ci.github.io/vertx-4-preview/docs/\"\n  }), \"https://vertx-\\u200Bci.github.io/vertx-\\u200B4-\\u200Bpreview/docs/\")), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(Link, {\n    href: \"/community\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"chan\\xADnels\")), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are ex­tremely pleased to an­nounce the fifth 4.0 mile­stone re­lease of Eclipse Vert.x.</p><p>Vert.x 4 is the evo­lu­tion of the Vert.x 3.x se­ries that will bring key fea­tures to Vert.x.</p><p>This re­lease aims to pro­vide a re­li­able dis­tri­b­u­tion of the cur­rent de­vel­op­ment of Vert.x 4 for peo­ple that\nwant to try it and pro­vide feed­back.</p><h2 id=\"new-kids-on-the-block-json-schema-web-validation-and-web-openapi\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#new-kids-on-the-block-json-schema-web-validation-and-web-openapi\"></a>New kids on the block: Json Schema, Web Validation and Web OpenAPI</h2><p>we de­cide to take HTTP re­quest val­i­da­tion in <code>vertx-web</code> and Con­tract Dri­ven de­vel­op­ment using <a href=\"https://github.com/OAI/OpenAPI-Specification\">Ope­nAPI</a>\nto a next level in Vert.x 4, allow us to in­tro­duce:</p><ul><li><a href=\"https://github.com/eclipse-vertx/vertx-json-schema\">Vert.x Json Schema</a>: Ex­ten­si­ble sync/async json-​schema val­ida­tor de­signed for Vert.x JSON types, sup­port­ing Json Schema Draft-​7 and Ope­nAPI di­alect.</li><li><a href=\"https://github.com/vert-x3/vertx-web/tree/master/vertx-web-validation\">Vert.x Web Val­i­da­tion</a>: Ex­ten­si­ble sync/async HTTP re­quest val­ida­tor, pro­vid­ing a DSL to de­scribe ex­pected HTTP re­quests.</li><li><a href=\"https://github.com/vert-x3/vertx-web/tree/master/vertx-web-openapi\">Vert.x Web Ope­nAPI</a>: New sup­port for Con­tract Dri­ven de­vel­op­ment based on Ope­nAPI</li></ul><p>Vert.x Json Schema is a pow­er­ful <a href=\"https://json-schema.org/\">Json Schema</a> val­ida­tor which in­cludes:</p><ul><li>Async <code>$ref</code> res­o­lu­tion</li><li>Cus­tom key­words/Cus­tom di­alects sup­port</li><li>A DSL to build schemas</li></ul><p>Com­bin­ing Vert.x Json Schema and Vert.x Web Val­i­da­tion you can eas­ily val­i­date HTTP re­quests:</p><pre><code class=\"hljs language-java\">ValidationHandler handler = ValidationHandler\n  .builder(schemaParser)\n  .pathParameter(Parameters.param(<span class=\"hljs-string\">&quot;myPathParam&quot;</span>, stringSchema()))\n  .queryParameter(Parameters.optionalParam(<span class=\"hljs-string\">&quot;myQueryParam&quot;</span>, intSchema()))\n  .body(Bodies.json(Schemas.ref(JsonPointer.fromURI(URI.create(\n    <span class=\"hljs-string\">&quot;some_schema.json&quot;</span>\n  )))))\n  .build();\n\nrouter.post(<span class=\"hljs-string\">&quot;/{myPathParam}&quot;</span>).handler(handler);\n</code></pre><p>Check out the <a href=\"https://github.com/vert-x3/vertx-web/blob/master/vertx-web-validation/src/main/java/examples/WebValidationExamples.java\">Web val­i­da­tion ex­am­ples</a> and pro­vide feed­back on the APIs!</p><p>Vert.x Web Val­i­da­tion al­lows you to use Vert.x Web API Ser­vice with­out Vert.x Web API Con­tract:\n<a href=\"https://github.com/vert-x3/vertx-web/tree/master/vertx-web-api-service/src/main/java/examples\">Vert.x Web API Ser­vice ex­am­ple</a></p><p>You can achieve Con­tract Dri­ven de­vel­op­ment, with Vert.x Web Ope­nAPI:</p><pre><code class=\"hljs language-java\">RouterFactory.create(vertx, <span class=\"hljs-string\">&quot;src/main/resources/petstore.yaml&quot;</span>,\n  routerFactoryAsyncResult -&gt; {\n  <span class=\"hljs-keyword\">if</span> (routerFactoryAsyncResult.succeeded()) {\n    <span class=\"hljs-comment\">// Spec loaded with success, retrieve the router</span>\n    RouterFactory routerFactory = routerFactoryAsyncResult.result();\n    <span class=\"hljs-comment\">// You can enable or disable different features of router factory using RouterFactoryOptions</span>\n    RouterFactoryOptions options = <span class=\"hljs-keyword\">new</span> RouterFactoryOptions();\n    <span class=\"hljs-comment\">// Set the options</span>\n    routerFactory.setOptions(options);\n    <span class=\"hljs-comment\">// Add an handler to operation listPets</span>\n    routerFactory.operation(<span class=\"hljs-string\">&quot;listPets&quot;</span>).handler(routingContext -&gt; {\n      <span class=\"hljs-comment\">// Handle listPets operation</span>\n      routingContext.response().setStatusMessage(<span class=\"hljs-string\">&quot;Called listPets&quot;</span>).end();\n    }).failureHandler(routingContext -&gt; { <span class=\"hljs-comment\">// Add a failure handler to the same operation</span>\n      <span class=\"hljs-comment\">// This is the failure handler</span>\n      Throwable failure = routingContext.failure();\n      <span class=\"hljs-keyword\">if</span> (failure <span class=\"hljs-keyword\">instanceof</span> BadRequestException)\n        <span class=\"hljs-comment\">// Handle Validation Exception</span>\n        routingContext\n          .response()\n          .setStatusCode(<span class=\"hljs-number\">400</span>)\n          .putHeader(<span class=\"hljs-string\">&quot;content-type&quot;</span>, <span class=\"hljs-string\">&quot;application/json&quot;</span>)\n          .end(((BadRequestException)failure).toJson().toBuffer());\n    });\n\n    <span class=\"hljs-comment\">// Add a security handler</span>\n    <span class=\"hljs-comment\">// Handle security here</span>\n    routerFactory.securityHandler(\n      <span class=\"hljs-string\">&quot;api_key&quot;</span>,\n      JWTAuthHandler.create(jwtAuth)\n    );\n\n    <span class=\"hljs-comment\">// Now you have to generate the router</span>\n    Router router = routerFactory.createRouter();\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// Something went wrong during router factory initialization</span>\n  }\n});\n</code></pre><p>Vert.x Web Ope­nAPI is the new way to do Vert.x Web API Con­tract, how­ever Vert.x Web API Con­tract re­mains sup­ported\nfor the whole life­time of Vert.x 4 to pro­vide a mi­gra­tion path: we will pro­vide soon a mi­gra­tion guide for Vert.x Web API Con­tract.</p><p>Check out the <a href=\"https://github.com/vert-x3/vertx-web/blob/master/vertx-web-openapi/src/main/java/examples/OpenAPI3Examples.java\">Web Ope­nAPI ex­am­ples</a></p><h2 id=\"sql-client-templates\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#sql-client-templates\"></a>SQL Client templates</h2><p>SQL Client Tem­plates is a small li­brary de­signed to fa­cil­i­tate the ex­e­cu­tion of SQL queries.</p><p>Sim­ply put you ex­e­cute pre­pared SQL queries with a map in­stead of a tuple:</p><pre><code class=\"hljs language-java\">Map&lt;String, Object&gt; parameters = Collections.singletonMap(<span class=\"hljs-string\">&quot;id&quot;</span>, <span class=\"hljs-number\">1</span>);\n\nSqlTemplate\n  .forQuery(client, <span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id=#{id}&quot;</span>)\n  .execute(parameters)\n  .onSuccess(users -&gt; {\n    users.forEach(row -&gt; {\n      System.out.println(row.getString(<span class=\"hljs-string\">&quot;first_name&quot;</span>) + <span class=\"hljs-string\">&quot; &quot;</span> + row.getString(<span class=\"hljs-string\">&quot;last_name&quot;</span>));\n    });\n  });\n</code></pre><p>A tem­plate can per­form tuple to ob­ject map­ping for pa­ra­me­ters and rows.</p><p>Here is row map­ping using Jack­son Data­bind.</p><pre><code class=\"hljs language-java\">SqlTemplate\n  .forQuery(client, <span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id=#{id}&quot;</span>)\n  .mapTo(User.class)\n  .execute(Collections.singletonMap(&quot;id&quot;, <span class=\"hljs-number\">1</span>))\n  .onSuccess(users -&gt; {\n    users.forEach(user -&gt; {\n      System.out.println(user.firstName + <span class=\"hljs-string\">&quot; &quot;</span> + user.lastName);\n    });\n  });\n</code></pre><p>You can also uses Vert.x data ob­jects to gen­er­ate map­pers in­stead: when a data ob­ject is an­no­tate with <code>@RowMapped</code> a row map­per\nfunc­tion will be gen­er­ated</p><pre><code class=\"hljs language-java\"><span class=\"hljs-meta\">@DataObject</span>\n<span class=\"hljs-meta\">@RowMapped</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">User</span> </span>{\n  ...\n}\n\n<span class=\"hljs-comment\">// Generated by SQL template code generator</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserRowMapper</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">java</span>.<span class=\"hljs-title\">util</span>.<span class=\"hljs-title\">function</span>.<span class=\"hljs-title\">Function</span>&lt;<span class=\"hljs-title\">io</span>.<span class=\"hljs-title\">vertx</span>.<span class=\"hljs-title\">sqlclient</span>.<span class=\"hljs-title\">Row</span>, <span class=\"hljs-title\">User</span>&gt; </span>{\n  ...\n}\n</code></pre><p>You can then use this map­per in­stead of <code>User.class</code></p><pre><code class=\"hljs language-java\">SqlTemplate\n  .forQuery(client, <span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id=#{id}&quot;</span>)\n  .mapTo(UserRowMapper.INSTANCE)\n  .execute(Collections.singletonMap(<span class=\"hljs-string\">&quot;id&quot;</span>, <span class=\"hljs-number\">1</span>))\n  .onSuccess(users -&gt; {\n    users.forEach(user -&gt; {\n      System.out.println(user.firstName + <span class=\"hljs-string\">&quot; &quot;</span> + user.lastName);\n    });\n  });\n</code></pre><h2 id=\"a-new-clustering-spi\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#a-new-clustering-spi\"></a>A new clustering SPI</h2><p>This mile­stone in­tro­duces the clus­ter­ing SPI re­design that al­lows to:</p><ul><li>sim­plify both Vert.x core and clus­ter man­ager im­ple­men­ta­tions</li><li>lever­age ca­pa­bil­i­ties of some clus­ter man­agers (e.g. data loss pro­tec­tion)</li></ul><p>Read the <a href=\"https://github.com/vert-x3/wiki/wiki/RFC:-clustering-SPI-revisited\">RFC</a> doc­u­ment if you would like to know more.</p><p>As a de­vel­oper, you should not see much dif­fer­ence, the Event­Bus and Shared data API re­main un­changed.</p><p>How­ever, if you op­er­ate a clus­ter in pro­duc­tion, you can­not mix Vert.x 3 and Vert.x 4 nodes.</p><p>The fol­low­ing clus­ter man­agers im­ple­men­ta­tions have been up­dated: <a href=\"/docs/vertx-hazelcast/java/\"><code>vertx-hazelcast</code></a>, <a href=\"/docs/vertx-infinispan/java/\"><code>vertx-infinispan</code></a> and <a href=\"/docs/vertx-ignite/java/\"><code>vertx-iginite</code></a> (thanks <a href=\"https://github.com/zyclonite\">Lukas Pret­ten­thaler</a> for your help).\nThe <a href=\"/docs/vertx-zookeeper/java/\"><code>vertx-zookeeper</code></a> up­date will be avail­able in the next re­lease.</p><h2 id=\"upgrade-to-infinispan-10-and-ignite-280\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#upgrade-to-infinispan-10-and-ignite-280\"></a>Upgrade to Infinispan 10 and Ignite 2.8.0</h2><p>Following-​up on the clus­ter­ing SPI up­date :</p><ul><li>the In­fin­is­pan clus­ter man­ager now de­pends on In­fin­is­pan 10</li><li>the Apache Ig­nite clus­ter man­ager on 2.8.0</li></ul><h2 id=\"complete-refactoring-on-vertx-auth-authnauthz-split\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#complete-refactoring-on-vertx-auth-authnauthz-split\"></a>Complete refactoring on vertx-auth authn/authz split</h2><p>Au­then­ti­ca­tion has been de­cou­pled from au­tho­riza­tion, all mod­ules now im­ple­ment at least one of the two in­ter­faces:</p><ul><li><code>AuthenticationProvider</code></li><li><code>AuthorizationProvider</code></li></ul><p>This im­prove­ment pro­vides more flex­i­b­lity such as user au­then­ti­ca­tion using a prop­erty file and au­tho­riza­tion against a data­base.</p><p>This mile­stone also in­cludes a few new im­ple­men­ta­tions:</p><ul><li><code>vertx-auth-ldap</code> su­per­sedes <code>shiro</code></li><li><code>vertx-authproperties</code> su­per­sedes <code>shiro</code></li><li><code>vertx-auth-sql</code> to use <code>sql-client</code>s as source of user data</li><li><code>vertx-auth-webauthn</code> pro­vides <code>FIDO2</code> <code>webauthn</code> au­then­ti­ca­tion</li></ul><p>Many bug fixes have been done and miss­ing fea­tures such as <code>JWK</code> ro­ta­tion sup­port for <code>OAuth2/OIDC</code>/<code>JWT</code> is now im­ple­mented.</p><h2 id=\"vertx-web-updates\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-web-updates\"></a>Vertx-web updates</h2><p>Vert.x-Web also got some up­dates.</p><p>The ses­sion han­dler code now al­lows other stor­ages:</p><ul><li><code>cookie-session-store</code> - stores all ses­sion data in a cookie</li><li><code>redis-session-store</code> - store all ses­sion data in a redis key store data­base</li></ul><p>Ses­sions fol­lows the lat­est OWASP rec­om­men­da­tions and al­lows to now use <code>cookieless</code> ses­sions, where the ses­sion key is passed in the URL.</p><p>Routers are now proxy aware: when en­abled, routers can parse the <code>Forward</code> head­ers and re­bind the in­ter­nal val­ues\nfor pro­to­col, host and port for user con­vinience. This is quite use­ful when ap­pli­ca­tions are de­ployed be­hind\na caching server, which can mod­ify the orig­i­nal re­quest.</p><h2 id=\"junit-5-support-updates\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#junit-5-support-updates\"></a>JUnit 5 support updates</h2><p>The <code>vertx-junit5</code> mod­ule has had the fol­low­ing up­dates since the last mile­stone.</p><ul><li><a href=\"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes#split-the-core-implementation-and-extensions\">The in­ter­nals have been refac­tored</a> to split the im­ple­men­ta­tion and ex­ten­sions around a service-​provider in­ter­face.\nWhile this is largely trans­par­ent in terms of API, you need to be aware that:<ul><li>the Vertx pa­ra­me­ter should be placed be­fore any pa­ra­me­ter that re­quires it for cre­ation, such as when in­ject­ing a We­b­Client,</li><li>the vertx-​junit5 mod­ule now only of­fers APIs for the Vert.x core mod­ule (vertx-​core),</li><li>the <a href=\"https://github.com/reactiverse/reactiverse-junit5-extensions\">reactiverse-​junit5-​extensions mod­ule</a> now hosts ex­ten­sions that offer extra pa­ra­me­ter types like We­b­Client,</li><li>the Rx­Java 1 and 2 bind­ings are now of­fered as vertx-​junit5-​rx-java and vertx-​junit5-​rx-java2 mod­ules in the vertx-​junit5-​extensions repos­i­tory.</li></ul></li><li>The <code>succeeding()</code> and <code>failing()</code> meth­ods in <code>VertxTestContext</code> have been dep­re­cated to im­prove er­gonom­ics, you should in­stead use <code>succeedingThenComplete()</code> and <code>failingThenComplete()</code>.</li></ul><h2 id=\"ramping-up-to-vertx-4\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#ramping-up-to-vertx-4\"></a>Ramping up to Vert.x 4</h2><p>In­stead of de­vel­op­ing all new fea­tures ex­clu­sively in Vert.x 4, we in­tro­duce some of these fea­tures in the 3.x branch\nso the com­mu­nity can ben­e­fit from them. The Vert.x 4 de­vel­op­ment focus on more fun­da­men­tal changes that can­not be done\nin the 3.x se­ries.</p><p><img src=\"/images/blog/vertx-4-milestone4-release/vertx-4-timeline.png\" alt=\"Screenshot\"/></p><p>This is the fifth mile­stone of Vert.x 4, you can of course ex­pect more mile­stones to out­line the progress of the ef­fort.</p><p>You can also read the pre­vi­ous mile­stone an­nounces:</p><ul><li><a href=\"/blog/eclipse-vert-x-4-milestone-4-released/\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-4-​released</a></li><li><a href=\"/blog/eclipse-vert-x-4-milestone-3-released/\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-3-​released</a></li><li><a href=\"/blog/eclipse-vert-x-4-milestone-2-released/\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-2-​released</a></li><li><a href=\"/blog/eclipse-vert-x-4-milestone-1-released/\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-1-​released</a></li></ul><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a>\ncan be found on the wiki.</p><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone5\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone5/\">Maven Cen­tral</a>.</p><p>You can boot­strap a Vert.x 4.0.0-​milestone5 project using <a href=\"https://start.vertx.io\">https://start.vertx.io</a>.</p><p>The doc­u­men­ta­tion has been de­ployed on this pre­view web-​site <a href=\"https://vertx-ci.github.io/vertx-4-preview/docs/\">https://vertx-​ci.github.io/vertx-​4-​preview/docs/</a></p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"/community/\">chan­nels</a>.</p>","scope":{}}},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.9.2 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The new Eclipse Vert.x version 3.9.2 has just been released. It includes a few bug fixes, a new reactive DB2 client, and reactive MySQL Client domain socket support."},"date":"2020-07-21","slug":"eclipse-vert-x-3-9-2-released"},"nextPost":{"meta":{"title":"Eclipse Vert.x 3.9.1 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The new version comes with many enhancements including an SQL client for DB2 and out-of-the-box support for HTTP/2 on JDK 8."},"date":"2020-05-22","slug":"eclipse-vert-x-3-9-1-released"},"relatedPosts":[{"meta":{"title":"Building services and APIs with AMQP 1.0","category":"guides","authors":[{"name":"Jakub Scholz","github_id":"scholzj"}],"summary":"Microservices and APIs are everywhere. Everyone talks about them, presentation slides are full of them ... some people are actually even building them."},"date":"2017-01-25","slug":"building-services-and-apis-with-amqp-1-0"},{"meta":{"title":"Eclipse Vert.x 4 beta 1 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are extremely pleased to announce the first 4.0 beta release of Eclipse Vert.x. Highlights of this release are the improved JDBC Client API, event loop affinity, and much more."},"date":"2020-07-28","slug":"eclipse-vert-x-4-beta-1-released"},{"meta":{"title":"OpenAPI (fka Swagger) 3 support in Eclipse Vert.x now in test stage!","category":"guides","authors":[{"name":"Francesco Guardiani","github_id":"slinkydeveloper"}],"summary":"As GSoC 2017's student, I'm working on an embedded support to OpenAPI 3 standard inside Eclipse Vert.x framework. Now, after a lot of work, you can try it!"},"date":"2017-07-04","slug":"openapi-fka-swagger-3-support-in-eclipse-vert-x-now-in-test-stage"}]},"__N_SSG":true}