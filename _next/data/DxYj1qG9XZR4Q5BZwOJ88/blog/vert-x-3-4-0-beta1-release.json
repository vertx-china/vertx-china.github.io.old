{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Vert.x 3.4.0.Beta1 release","category":"guides","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have released 3.4.0.Beta1, this release is the biggest since Vert.x 3.0.0 with plenty of great features."},"date":"2017-02-09","slug":"vert-x-3-4-0-beta1-release","readingTime":{"text":"6 min read","minutes":5.605,"time":336300,"words":1121},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      code: \"code\",\n      ul: \"ul\",\n      li: \"li\",\n      a: \"a\",\n      h2: \"h2\",\n      pre: \"pre\",\n      span: \"span\",\n      em: \"em\"\n    }, props.components), {Link} = _components;\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"We have re­leased 3.4.0.Beta1, this re­lease is the biggest since Vert.x 3.0.0 with plenty of great fea­tures.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can use con­sume it in your projects from Maven or Gra­dle as usual with the ver­sion \", _jsx(_components.code, {\n          children: \"3.4.0.Beta1\"\n        }), \" or read\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"the \", _jsx(Link, {\n            href: \"/docs/3.4.0.Beta1/\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"doc­u­men­ta­tion pre­view\"\n            })\n          })]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"the \", _jsx(_components.a, {\n            href: \"https://gist.github.com/vietj/1ce63b368af127775512afbfc0ab14cc\",\n            children: \"re­lease notes\"\n          })]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"see the \", _jsx(_components.a, {\n            href: \"https://github.com/vert-x3/vertx-examples/tree/3.4.0-SNAPSHOT\",\n            children: \"ac­tual ex­am­ples\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Let me out­line the im­por­tant changes you can al­ready find in this Beta1.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"vertx-web-client\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#vertx-web-client\"\n        }), \"Vert.x Web Client\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In a sim­ple sen­tence “Vert.x Web Client is to Vert.x Http­Client what Vert.x Web is to HttpServer”\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The Web Client makes it easy to do HTTP re­quest/re­sponse in­ter­ac­tions with a web server, and pro­vides ad­vanced fea­tures like:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Json body en­cod­ing / de­cod­ing\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"re­quest/re­sponse pump­ing\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"re­quest pa­ra­me­ters\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"uni­fied error han­dling\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"form sub­mis­sions\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"and more!\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Built on top of Http­Client, it nat­u­rally in­her­its its fea­tures and pro­vides a bet­ter API, let me give an overview in one ex­am­ple:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"WebClient\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"client\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" WebClient.\\nclient\\n  .get(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"8080\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"myserver.mycompany.com\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/some-uri\\\"\"\n          }), \")\\n  .as(BodyCodec.json(User.class))\\n  .send(ar -> {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (ar.succeeded()) {\\n\\n      HttpResponse<User> response = ar.result();\\n      \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"User\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"user\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" response.body();\\n\\n      System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Received response with status code\\\"\"\n          }), \" + response.statusCode() + \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\" with body \\\"\"\n          }), \" +\\n        user.getFirstName() + \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\" \\\"\"\n          }), \" + user.getLastName());\\n    } \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" {\\n      System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Something went wrong \\\"\"\n          }), \" + ar.cause().getMessage());\\n    }\\n  });\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"rxjava-singles\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#rxjava-singles\"\n        }), \"RxJava singles\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Rx­Java is a very pop­u­lar Java ex­ten­sion and in this re­lease we fo­cused on the API us­abil­ity with the sup­port\\nof the \", _jsx(_components.code, {\n          children: \"Single\"\n        }), \" Rx­Java type.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The new meth­ods are pre­fixed by \", _jsx(_components.code, {\n          children: \"rx\"\n        }), \" and dep­re­cates the \", _jsx(_components.code, {\n          children: \"Observable\"\n        }), \" suf­fixed meth­ods.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"So in­stead of start­ing a server with \", _jsx(_components.code, {\n          children: \"listenObservable\"\n        }), \" now you use \", _jsx(_components.code, {\n          children: \"rxListen\"\n        }), \":\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"HttpServer\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"server\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" vertx.createHttpServer();\\nSingle<HttpServer> single = server.rxListen(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"8080\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"localhost\\\"\"\n          }), \");\\nsingle.subscribe(\\n  ok -> System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Server started\\\"\"\n          }), \"),\\n  err -> System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Something went wrong \\\"\"\n          }), \" + err.getMessage()));\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"One no­tice­able dif­fer­ence with the pre­vi­ous API, is that the \", _jsx(_components.code, {\n          children: \"listen\"\n        }), \" method is called when the \", _jsx(_components.code, {\n          children: \"Single\"\n        }), \" is sub­scribed.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This is very handy when com­bined with the new web client:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"Single<HttpResponse<Buffer>> single = client\\n  .get(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"8080\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"myserver.mycompany.com\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/some-uri\\\"\"\n          }), \")\\n  .rxSend();\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Send the request\"\n          }), \"\\nsingle.subscribe(response -> System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"got response \\\"\"\n          }), \" + response.statusCode());\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Send the request again\"\n          }), \"\\nsingle.subscribe(response -> System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"got response \\\"\"\n          }), \" + response.statusCode());\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"polyglot\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#polyglot\"\n        }), \"Polyglot\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"In this beta you can try \", _jsx(_components.em, {\n          children: \"Vert.x for Kotlin\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.em, {\n          children: \"Vert.x for Kotlin\"\n        }), \" is based on the Java API and pro­vides also the ex­e­cu­tion of Kotlin Ver­ti­cles.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-kotlin\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" io.vertx.core.*\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" io.vertx.kotlin.core.http.HttpServerOptions\\n\\n\", _jsxs(_components.span, {\n            className: \"hljs-class\",\n            children: [_jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"class\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-title\",\n              children: \"Server\"\n            }), \" : \", _jsx(_components.span, {\n              className: \"hljs-type\",\n              children: \"AbstractVerticle\"\n            })]\n          }), \"() {\\n\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"override\"\n          }), \" \", _jsxs(_components.span, {\n            className: \"hljs-function\",\n            children: [_jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"fun\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-title\",\n              children: \"start\"\n            }), _jsx(_components.span, {\n              className: \"hljs-params\",\n              children: \"()\"\n            })]\n          }), \" {\\n    vertx.createHttpServer(\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// We provide Kotlin extension methods, allowing to use an idiomatic Kotlin API for building these options\"\n          }), \"\\n        HttpServerOptions(\\n            port = \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"8080\"\n          }), \",\\n            host = \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"localhost\\\"\"\n          }), \"\\n        ))\\n        .requestHandler() { req ->\\n          req.response().end(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Hello from Kotlin\\\"\"\n          }), \")\\n        }\\n        .listen()\\n    println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Server started on 8080\\\"\"\n          }), \")\\n  }\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"It can be di­rectly ran from the com­mand line:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-bash\",\n          children: [\"julien:vertx-kotlin-example julien$ vertx run Server.kt\\nServer started on 8080\\nSucceeded \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"in\"\n          }), \" deploying verticle\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"As you can see, Kotlin is using the Java API di­rectly, and we thought that it might be a cool thing to do the\\nsame with Groovy sup­port. So we have re­con­sid­ered our Groovy sup­port and now it uses the plain Java API,\\nwith­out los­ing the ex­ist­ing fea­tures.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Thanks to Groovy ex­ten­sion meth­ods, id­iomatic Groovy is still sup­ported while ben­e­fit­ing from the full Java API!\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Scala sup­port is also planned for 3.4.0 and will be re­leased soon, watch \", _jsx(_components.a, {\n          href: \"https://twitter.com/vertx_project\",\n          children: \"@vertx_project\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"the-microservices-story-goes-on\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#the-microservices-story-goes-on\"\n        }), \"The microservices story goes on…\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Our APIs have ma­tured and now they have been moved out of tech pre­view, of course this wasn’t enough and we now\\nhave \", _jsx(_components.em, {\n          children: \"Vert.x Con­fig\"\n        }), \", an ex­ten­si­ble way to con­fig­ure Vert.x ap­pli­ca­tions sup­port­ing File, json, ENV, sys­tem prop­er­ties,\\nHTTP, \", _jsx(_components.em, {\n          children: \"Ku­ber­netes Con­figmap\"\n        }), \", \", _jsx(_components.em, {\n          children: \"Con­sul\"\n        }), \", \", _jsx(_components.em, {\n          children: \"Spring Con­fig Server\"\n        }), \", \", _jsx(_components.em, {\n          children: \"Redis\"\n        }), \", \", _jsx(_components.em, {\n          children: \"Git\"\n        }), \", \", _jsx(_components.em, {\n          children: \"Zookeeper\"\n        }), \", … stores as well as\\nsev­eral for­mats: prop­er­ties file, YAML and Hocon.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Here is a small ex­am­ple:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"ConfigStoreOptions\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"httpStore\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"ConfigStoreOptions\"\n          }), \"()\\n  .setType(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"http\\\"\"\n          }), \")\\n  .setConfig(\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"JsonObject\"\n          }), \"()\\n    .put(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"host\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"localhost\\\"\"\n          }), \").put(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"port\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"8080\"\n          }), \").put(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"path\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/conf\\\"\"\n          }), \"));\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"ConfigStoreOptions\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"fileStore\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"ConfigStoreOptions\"\n          }), \"()\\n  .setType(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"file\\\"\"\n          }), \")\\n  .setConfig(\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"JsonObject\"\n          }), \"().put(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"path\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"my-config.json\\\"\"\n          }), \"));\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"ConfigStoreOptions\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"sysPropsStore\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"ConfigStoreOptions\"\n          }), \"().setType(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"sys\\\"\"\n          }), \");\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"ConfigRetrieverOptions\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"options\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"ConfigRetrieverOptions\"\n          }), \"()\\n  .addStore(httpStore).addStore(fileStore).addStore(sysPropsStore);\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"ConfigRetriever\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"retriever\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" ConfigRetriever.create(vertx, options);\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Vert.x Con­fig also sup­ports push based no­ti­fi­ca­tion style:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"ConfigRetriever\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"retriever\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" ConfigRetriever.create(Vertx.vertx(), options);\\nretriever.configStream()\\n  .endHandler(v -> {\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// retriever closed\"\n          }), \"\\n  })\\n  .exceptionHandler(t -> {\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// an error has been caught while retrieving the configuration\"\n          }), \"\\n  })\\n  .handler(conf -> {\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// the configuration\"\n          }), \"\\n  });\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"vertx-mqtt-server\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#vertx-mqtt-server\"\n        }), \"Vertx MQTT Server\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Vert.x MQTT Server is able to han­dle con­nec­tions, com­mu­ni­ca­tion and mes­sages ex­change with re­mote MQTT clients.\\nIts API pro­vides a bunch of events re­lated to pro­to­col mes­sages re­ceived by clients and ex­poses allow to send\\nmes­sages to them.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Here is a small ef­fec­tive ex­am­ple of cre­at­ing, the Vert.x way!\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"MqttServerOptions\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"options\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"MqttServerOptions\"\n          }), \"()\\n  .setPort(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1883\"\n          }), \")\\n  .setHost(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"0.0.0.0\\\"\"\n          }), \");\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"MqttServer\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"server\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" MqttServer.create(vertx, options);\\n\\nserver.endpointHandler(endpoint -> {\\n\\n  System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"connected client \\\"\"\n          }), \" + endpoint.clientIdentifier());\\n\\n  endpoint.publishHandler(message -> {\\n\\n    System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Just received message on [\\\"\"\n          }), \" + message.topicName() + \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"] payload [\\\"\"\n          }), \" +\\n      message.payload() + \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"] with QoS [\\\"\"\n          }), \" +\\n      message.qosLevel() + \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"]\\\"\"\n          }), \");\\n  });\\n\\n  endpoint.accept(\", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \");\\n});\\n\\nserver.listen(ar -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (ar.succeeded()) {\\n    System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"MQTT server started and listening on port \\\"\"\n          }), \" + server.actualPort());\\n  } \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" {\\n    System.err.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"MQTT server error on start\\\"\"\n          }), \" + ar.cause().getMessage());\\n  }\\n});\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"vertx-sql-streaming\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#vertx-sql-streaming\"\n        }), \"Vert.x SQL streaming\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We now sup­port stream­ing style for SQL queries:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"connection.queryStream(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"select * from test\\\"\"\n          }), \", stream -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (stream.succeeded()) {\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"SQLRowStream\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"sqlRowStream\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" stream.result();\\n\\n    sqlRowStream\\n      .handler(row -> {\\n        \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// do something with the row...\"\n          }), \"\\n        System.out.println(row.encode());\\n      })\\n      .endHandler(v -> {\\n        \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// no more data available, close the connection\"\n          }), \"\\n        connection.close(done -> {\\n          \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (done.failed()) {\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"throw\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"RuntimeException\"\n          }), \"(done.cause());\\n          }\\n        });\\n      });\\n  }\\n});\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"And with the Rx­Java API:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-rust\",\n          children: [\"client\\n  .\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"rxGetConnection\"\n          }), \"() \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Connect to the database\"\n          }), \"\\n  .\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"flatMapObservable\"\n          }), \"(conn \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"->\"\n          }), \" { \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// With the connection...\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" conn.\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"rxUpdate\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"CREATE TABLE test(col VARCHAR(20))\\\"\"\n          }), \") \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// ...create test table\"\n          }), \"\\n      .\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"flatMap\"\n          }), \"(result \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"->\"\n          }), \" conn.\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"rxUpdate\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"INSERT INTO test (col) VALUES ('val1')\\\"\"\n          }), \")) \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// ...insert a row\"\n          }), \"\\n      .\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"flatMap\"\n          }), \"(result \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"->\"\n          }), \" conn.\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"rxUpdate\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"INSERT INTO test (col) VALUES ('val2')\\\"\"\n          }), \")) \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// ...another one\"\n          }), \"\\n      .\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"flatMap\"\n          }), \"(result \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"->\"\n          }), \" conn.\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"rxQueryStream\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"SELECT * FROM test\\\"\"\n          }), \")) \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// ...get values stream\"\n          }), \"\\n      .\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"flatMapObservable\"\n          }), \"(sqlRowStream \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"->\"\n          }), \" {\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" sqlRowStream.\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"toObservable\"\n          }), \"() \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Transform the stream into an Observable...\"\n          }), \"\\n          .\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"doOnTerminate\"\n          }), \"(conn::close); \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// ...and close the connection when the stream is fully read or an error occurs\"\n          }), \"\\n      });\\n  }).\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"subscribe\"\n          }), \"(row \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"->\"\n          }), \" System.out.\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"println\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Row : \\\"\"\n          }), \" + row.\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function hljs-invoke\",\n            children: \"encode\"\n          }), \"()));\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"finally\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#finally\"\n        }), \"Finally\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In ad­di­tion to all these bril­lant fea­tures here is a list of more-​than-noticeable things you have in this Beta1:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Vert.x In­fin­is­pan re­places Vert.x Jgroups clus­ter man­ager\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Vert.x Con­sul Client pro­vides a full fledged client for Con­sul\"\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Oauth2 pre­de­fined con­fig­u­ra­tion with 16 set­tings from \", _jsx(_components.em, {\n            children: \"Azure Ac­tive Di­rec­tory\"\n          }), \", to \", _jsx(_components.em, {\n            children: \"Twit­ter\"\n          }), \" with the usual sus­pects (\", _jsx(_components.em, {\n            children: \"Face­book\"\n          }), \", \", _jsx(_components.em, {\n            children: \"LinkedIn\"\n          }), \", …)\"]\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Http client now fol­low redi­rects\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can use and con­sume it in your projects from Maven or Gra­dle as usual with the ver­sion \", _jsx(_components.code, {\n          children: \"3.4.0.Beta1\"\n        }), \" or read\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"the \", _jsx(Link, {\n            href: \"/docs/3.4.0.Beta1/\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"doc­u­men­ta­tion pre­view\"\n            })\n          })]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"the \", _jsx(_components.a, {\n            href: \"https://gist.github.com/vietj/1ce63b368af127775512afbfc0ab14cc\",\n            children: \"re­lease notes\"\n          })]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"see the \", _jsx(_components.a, {\n            href: \"https://github.com/vert-x3/vertx-examples/tree/3.4.0-SNAPSHOT\",\n            children: \"ac­tual ex­am­ples\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Last but not least, I want to per­son­ally thank all the peo­ple that con­tributed to this re­lease, be­yond the Vert.x core team, the ac­tual\\nVert.x com­mit­ters and many other peo­ple who have given a lot of ef­fort to this up­com­ing 3.4.0!!!!\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Vert.x 3.4.0 is released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"Vert.x 3.4.0 has just been released with many new exciting features!"},"date":"2017-03-07","slug":"vert-x-3-4-0-is-released"},"nextPost":{"meta":{"title":"An Introduction to the Vert.x Context Object","category":"guides","authors":[{"name":"Jez Prime","github_id":"millross"}],"summary":"Under the hood, the vert.x Context class plays a critical part in maintaining the thread-safety guarantees of verticles. Most of the time, vert.x coders don't need to make use of Context objects directly."},"date":"2017-01-31","slug":"an-introduction-to-the-vert-x-context-object"},"relatedPosts":[{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"},{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"}]},"__N_SSG":true}