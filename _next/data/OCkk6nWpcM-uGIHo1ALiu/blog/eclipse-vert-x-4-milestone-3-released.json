{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Eclipse Vert.x 4 milestone 3 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The next milestone release of Vert.x 4 aims to provide a reliable distribution of the current development for people who want to try it and provide feedback."},"date":"2019-09-19","slug":"eclipse-vert-x-4-milestone-3-released","readingTime":{"text":"5 min read","minutes":4.325,"time":259500,"words":865},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are ex\\xADtremely pleased to an\\xADnounce the third 4.0 mile\\xADstone re\\xADlease of Eclipse Vert.x .\"), mdx(\"p\", null, \"Vert.x 4 is the evo\\xADlu\\xADtion of the Vert.x 3.x se\\xADries that will bring key fea\\xADtures to Vert.x.\"), mdx(\"p\", null, \"This re\\xADlease aims to pro\\xADvide a re\\xADli\\xADable dis\\xADtri\\xADb\\xADu\\xADtion of the cur\\xADrent de\\xADvel\\xADop\\xADment of Vert.x 4 for peo\\xADple who\\nwant to try it and pro\\xADvide feed\\xADback.\"), mdx(\"h2\", {\n    \"id\": \"futurisation\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#futurisation\"\n  })), \"Futurisation\"), mdx(\"p\", null, \"Vert.x 4 ex\\xADtends the 3.x call\\xADback asyn\\xADchro\\xADnous model to a fu\\xADture/call\\xADback hy\\xADbrid model.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"NetClient\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Since 3.0\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"connect\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" port, String host, Handler<AsyncResult<NetSocket>> handler)\")), \";\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// New in 4.0\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), \"Future<NetSocket> \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"connect\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" port, String host)\")), \";\\n}\\n\")), mdx(\"p\", null, \"This third mile\\xADstone makes progress and coverts the fol\\xADlow\\xADing stack mod\\xADules:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bservice-discovery\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bconfig\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bcircuit-breaker\")), mdx(\"h2\", {\n    \"id\": \"data-object-mapping-for-service-proxies\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#data-object-mapping-for-service-proxies\"\n  })), \"Data object mapping for service proxies\"), mdx(\"p\", null, \"Vert.x 3 ser\\xADvice prox\\xADies is a light\\xADweight layer on top of Vert.x Event-\\u200BBus pro\\xADvid\\xADing typed con\\xADtracts.\"), mdx(\"p\", null, \"One can eas\\xADily cre\\xADate a ser\\xADvice on top of the Event-\\u200BBus.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@VertxGen\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"DateService\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// callback the handler with the current date\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"date\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(Handler<AsyncResult<String>> handler)\"), \"\\n}\\n\"))), mdx(\"p\", null, \"Ser\\xADvice prox\\xADies re\\xADquest/re\\xADsponse pay\\xADload are of type JSON.\"), mdx(\"p\", null, \"Of course ser\\xADvice prox\\xADies allow to map beans to JSON using data ob\\xADjects but this comes with two caveats\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"only JSON ob\\xADject can be mapped\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the data ob\\xADject must be a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@DataObject\"), \" an\\xADno\\xADtated bean with a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"toJson()\"), \" method and a JSON ob\\xADject con\\xADstruc\\xADtor\")), mdx(\"p\", null, \"In Vert.x 4 we ex\\xADtend the data ob\\xADject sup\\xADport to any Java class and any JSON type, e.g in this ex\\xADam\\xADple\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@VertxGen\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"DateService\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// encode the date with iso date format\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Mapper\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" String \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"toJson\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(ZonedDateTime value)\"), \" \"), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" ZonedDateTime.format(value);\\n  }\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// decode the date with iso date format\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Mapper\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" ZonedDateTime \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"fromJson\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(String value)\"), \" \"), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" ZonedDateTime.parse(value);\\n  }\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// callback the handler with the current date\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"date\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(Handler<AsyncResult<ZonedDateTime>> handler)\"), \"\\n}\\n\"))), mdx(\"p\", null, \"The gen\\xADer\\xADated code will then use these map\\xADpers to en\\xADcode and de\\xADcode JSON val\\xADues.\"), mdx(\"p\", null, \"For reusabil\\xADity map\\xADpers can also be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"java.util.function.Function\"), \" in\\xADstead, e.g\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Mapper\"), \" Function<String, ZonedDateTime) fromJson = ZonedDateTime::parse;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Mapper\"), \" Function<ZonedDateTime, String> toJson = ZonedDateTime::toString;\\n\")), mdx(\"h2\", {\n    \"id\": \"mongo-client-gridfs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#mongo-client-gridfs\"\n  })), \"Mongo client GridFS\"), mdx(\"p\", null, \"The client can store and re\\xADtrieve files and bi\\xADnary data using Mon\\xADgoDB GridFS.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Future<String> fut = gridFsClient.uploadFile(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"file.name\\\"\"), \");\\n\\nfut.setHandler(res -> {\\n   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (res.succeeded()) {\\n     String id = res.result();\\n     \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"//The ID of the stored object in Grid FS\"), \"\\n   } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n     res.cause().printStackTrace();\\n   }\\n });\\n\")), mdx(\"p\", null, \"The client can per\\xADform the usual CRUD op\\xADer\\xADa\\xADtions on files and also pro\\xADvide bucket man\\xADage\\xADment.\"), mdx(\"h2\", {\n    \"id\": \"vertx-web-utilities\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-web-utilities\"\n  })), \"Vert.x Web utilities\"), mdx(\"p\", null, \"While the rout\\xADing con\\xADtext will allow you to ac\\xADcess the un\\xADder\\xADly\\xADing re\\xADquest and re\\xADsponse ob\\xADjects, some\\xADtimes it will be\\nmore pro\\xADduc\\xADtive if a few short\\xADcuts would be present to help with com\\xADmon tasks. A few helpers are present in\\nthe con\\xADtext to fa\\xADcil\\xADi\\xADtate with this task.\"), mdx(\"p\", null, \"Serve an \\u201Cat\\xADtach\\xADment\\u201D, an at\\xADtach\\xADment is a re\\xADsponse that will trig\\xADger the browser to open the re\\xADsponse on the OS ap\\xADpli\\xADca\\xADtion\\ncon\\xADfig\\xADured to han\\xADdle a spe\\xADcific mime type. Imag\\xADine you\\u2019re gen\\xADer\\xADat\\xADing a PDF:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"routingContext\\n  .attachment(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"weekly-report.pdf\\\"\"), \")\\n  .end(pdfBuffer);\\n\")), mdx(\"p\", null, \"Per\\xADform a redi\\xADrect to a dif\\xADfer\\xADent page or host. One ex\\xADam\\xADple is to redi\\xADrect to an HTTPS vari\\xADant of the ap\\xADpli\\xADca\\xADtion:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"routingContext.redirect(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"https://securesite.com/\\\"\"), \");\\n\")), mdx(\"p\", null, \"Send a JSON re\\xADsponse to the client:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// no need to specify the content type headers\"), \"\\nrc.json(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject().put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"hello\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"vert.x\\\"\"), \"));\\n\")), mdx(\"p\", null, \"Sim\\xADple con\\xADtent type check:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (routingContext.is(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"application/json\\\"\"), \")) {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// ...\"), \"\\n}\\n\")), mdx(\"p\", null, \"Ver\\xADify if a re\\xADquest is \\u201Cfresh\\u201D with re\\xADspect to the cache head\\xADers and the cur\\xADrent val\\xADues of last mod\\xADi\\xADfied/ etag:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (rc.isFresh()) {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// client cache value is fresh perhaps we\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// can stop and return 304?\"), \"\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"other-changes\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#other-changes\"\n  })), \"Other changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Groovy has been sim\\xADpli\\xADfied in Vert.x 4 to re\\xADmove code gen\\xADer\\xADa\\xADtion that was not re\\xADally needed in prac\\xADtice\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The orig\\xADi\\xADnal Redis client dep\\xADre\\xADcated in 3.7 has been re\\xADmoved re\\xADplaced by the new Redis client\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JSON changes\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Jack\\xADson data\\xADbind is now an op\\xADtional Maven de\\xADpen\\xADdency which means that ap\\xADpli\\xADca\\xADtions need to ex\\xADplic\\xADitly add this de\\xADpen\\xADdency to the class\\xADpath\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spe\\xADcific Jack\\xADson util\\xADity meth\\xADods are moved to spe\\xADcific Jack\\xADson classes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vert.x can use an al\\xADter\\xADna\\xADtive im\\xADple\\xADmen\\xADta\\xADtion than Jack\\xADson for JSON en\\xADcod\\xADing and JSON de\\xADcod\\xADing\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The fol\\xADlow\\xADing com\\xADpo\\xADnents have reached their end of life and have been pruned\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MySQL / Post\\xADgreSQL async client re\\xADplaced by the Vert.x SQL Client (since 3.8)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AMQP bridge re\\xADplaced by the Vert.x AMQP Client (since 3.7)\")))), mdx(\"h2\", {\n    \"id\": \"ramping-up-to-vertx-4\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#ramping-up-to-vertx-4\"\n  })), \"Ramping up to Vert.x 4\"), mdx(\"p\", null, \"In\\xADstead of de\\xADvel\\xADop\\xADing all new fea\\xADtures ex\\xADclu\\xADsively in Vert.x 4, we in\\xADtro\\xADduce some of these fea\\xADtures in the 3.x branch\\nso the com\\xADmu\\xADnity can ben\\xADe\\xADfit from them. The Vert.x 4 de\\xADvel\\xADop\\xADment focus on more fun\\xADda\\xADmen\\xADtal changes that can\\xADnot be done\\nin the 3.x se\\xADries.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/blog/vertx-4-milestone3-release/vertx-4-timeline.png\",\n    \"alt\": \"Screenshot\"\n  }))), mdx(\"p\", null, \"This is the third mile\\xADstone of Vert.x 4, we aim to re\\xADlease Vert.x 4 by the end of this year and you can of course\\nex\\xADpect more mile\\xADstones to out\\xADline the progress of the ef\\xADfort.\"), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\"), \"\\ncan be found on the wiki.\"), mdx(\"p\", null, \"For this re\\xADlease there are no Docker im\\xADages.,\"), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone3\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone3/\"\n  }), \"Maven Cen\\xADtral\"), \".\"), mdx(\"p\", null, \"You can boot\\xADstrap a Vert.x 4.0.0-\\u200Bmilestone3 project using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://start.vertx.io\"\n  }), \"https://start.vertx.io\"), \".\"), mdx(\"p\", null, \"The doc\\xADu\\xADmen\\xADta\\xADtion has been de\\xADployed on this pre\\xADview web-\\u200Bsite \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx-ci.github.io/vertx-4-preview/docs/\"\n  }), \"https://vertx-\\u200Bci.github.io/vertx-\\u200B4-\\u200Bpreview/docs/\")), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(Link, {\n    href: \"/community\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"chan\\xADnels\")), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are ex­tremely pleased to an­nounce the third 4.0 mile­stone re­lease of Eclipse Vert.x .</p><p>Vert.x 4 is the evo­lu­tion of the Vert.x 3.x se­ries that will bring key fea­tures to Vert.x.</p><p>This re­lease aims to pro­vide a re­li­able dis­tri­b­u­tion of the cur­rent de­vel­op­ment of Vert.x 4 for peo­ple who\nwant to try it and pro­vide feed­back.</p><h2 id=\"futurisation\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#futurisation\"></a>Futurisation</h2><p>Vert.x 4 ex­tends the 3.x call­back asyn­chro­nous model to a fu­ture/call­back hy­brid model.</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">NetClient</span> </span>{\n\n  <span class=\"hljs-comment\">// Since 3.0</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">connect</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> port, String host, Handler&lt;AsyncResult&lt;NetSocket&gt;&gt; handler)</span></span>;\n\n  <span class=\"hljs-comment\">// New in 4.0</span>\n  <span class=\"hljs-function\">Future&lt;NetSocket&gt; <span class=\"hljs-title\">connect</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> port, String host)</span></span>;\n}\n</code></pre><p>This third mile­stone makes progress and coverts the fol­low­ing stack mod­ules:</p><ul><li>vertx-​service-discovery</li><li>vertx-​config</li><li>vertx-​circuit-breaker</li></ul><h2 id=\"data-object-mapping-for-service-proxies\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#data-object-mapping-for-service-proxies\"></a>Data object mapping for service proxies</h2><p>Vert.x 3 ser­vice prox­ies is a light­weight layer on top of Vert.x Event-​Bus pro­vid­ing typed con­tracts.</p><p>One can eas­ily cre­ate a ser­vice on top of the Event-​Bus.</p><pre><code class=\"hljs language-java\"><span class=\"hljs-meta\">@VertxGen</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">DateService</span> </span>{\n\n  <span class=\"hljs-comment\">// callback the handler with the current date</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">date</span><span class=\"hljs-params\">(Handler&lt;AsyncResult&lt;String&gt;&gt; handler)</span>\n}\n</span></code></pre><p>Ser­vice prox­ies re­quest/re­sponse pay­load are of type JSON.</p><p>Of course ser­vice prox­ies allow to map beans to JSON using data ob­jects but this comes with two caveats</p><ul><li>only JSON ob­ject can be mapped</li><li>the data ob­ject must be a <code>@DataObject</code> an­no­tated bean with a <code>toJson()</code> method and a JSON ob­ject con­struc­tor</li></ul><p>In Vert.x 4 we ex­tend the data ob­ject sup­port to any Java class and any JSON type, e.g in this ex­am­ple</p><pre><code class=\"hljs language-java\"><span class=\"hljs-meta\">@VertxGen</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">DateService</span> </span>{\n\n  <span class=\"hljs-comment\">// encode the date with iso date format</span>\n  <span class=\"hljs-meta\">@Mapper</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">toJson</span><span class=\"hljs-params\">(ZonedDateTime value)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> ZonedDateTime.format(value);\n  }\n\n  <span class=\"hljs-comment\">// decode the date with iso date format</span>\n  <span class=\"hljs-meta\">@Mapper</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> ZonedDateTime <span class=\"hljs-title\">fromJson</span><span class=\"hljs-params\">(String value)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> ZonedDateTime.parse(value);\n  }\n\n  <span class=\"hljs-comment\">// callback the handler with the current date</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">date</span><span class=\"hljs-params\">(Handler&lt;AsyncResult&lt;ZonedDateTime&gt;&gt; handler)</span>\n}\n</span></code></pre><p>The gen­er­ated code will then use these map­pers to en­code and de­code JSON val­ues.</p><p>For reusabil­ity map­pers can also be <code>java.util.function.Function</code> in­stead, e.g</p><pre><code class=\"hljs language-java\"><span class=\"hljs-meta\">@Mapper</span> Function&lt;String, ZonedDateTime) fromJson = ZonedDateTime::parse;\n<span class=\"hljs-meta\">@Mapper</span> Function&lt;ZonedDateTime, String&gt; toJson = ZonedDateTime::toString;\n</code></pre><h2 id=\"mongo-client-gridfs\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#mongo-client-gridfs\"></a>Mongo client GridFS</h2><p>The client can store and re­trieve files and bi­nary data using Mon­goDB GridFS.</p><pre><code class=\"hljs language-java\">Future&lt;String&gt; fut = gridFsClient.uploadFile(<span class=\"hljs-string\">&quot;file.name&quot;</span>);\n\nfut.setHandler(res -&gt; {\n   <span class=\"hljs-keyword\">if</span> (res.succeeded()) {\n     String id = res.result();\n     <span class=\"hljs-comment\">//The ID of the stored object in Grid FS</span>\n   } <span class=\"hljs-keyword\">else</span> {\n     res.cause().printStackTrace();\n   }\n });\n</code></pre><p>The client can per­form the usual CRUD op­er­a­tions on files and also pro­vide bucket man­age­ment.</p><h2 id=\"vertx-web-utilities\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-web-utilities\"></a>Vert.x Web utilities</h2><p>While the rout­ing con­text will allow you to ac­cess the un­der­ly­ing re­quest and re­sponse ob­jects, some­times it will be\nmore pro­duc­tive if a few short­cuts would be present to help with com­mon tasks. A few helpers are present in\nthe con­text to fa­cil­i­tate with this task.</p><p>Serve an “at­tach­ment”, an at­tach­ment is a re­sponse that will trig­ger the browser to open the re­sponse on the OS ap­pli­ca­tion\ncon­fig­ured to han­dle a spe­cific mime type. Imag­ine you’re gen­er­at­ing a PDF:</p><pre><code class=\"hljs language-java\">routingContext\n  .attachment(<span class=\"hljs-string\">&quot;weekly-report.pdf&quot;</span>)\n  .end(pdfBuffer);\n</code></pre><p>Per­form a redi­rect to a dif­fer­ent page or host. One ex­am­ple is to redi­rect to an HTTPS vari­ant of the ap­pli­ca­tion:</p><pre><code class=\"hljs language-java\">routingContext.redirect(<span class=\"hljs-string\">&quot;https://securesite.com/&quot;</span>);\n</code></pre><p>Send a JSON re­sponse to the client:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// no need to specify the content type headers</span>\nrc.json(<span class=\"hljs-keyword\">new</span> JsonObject().put(<span class=\"hljs-string\">&quot;hello&quot;</span>, <span class=\"hljs-string\">&quot;vert.x&quot;</span>));\n</code></pre><p>Sim­ple con­tent type check:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">if</span> (routingContext.is(<span class=\"hljs-string\">&quot;application/json&quot;</span>)) {\n  <span class=\"hljs-comment\">// ...</span>\n}\n</code></pre><p>Ver­ify if a re­quest is “fresh” with re­spect to the cache head­ers and the cur­rent val­ues of last mod­i­fied/ etag:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">if</span> (rc.isFresh()) {\n  <span class=\"hljs-comment\">// client cache value is fresh perhaps we</span>\n  <span class=\"hljs-comment\">// can stop and return 304?</span>\n}\n</code></pre><h2 id=\"other-changes\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#other-changes\"></a>Other changes</h2><ul><li>Groovy has been sim­pli­fied in Vert.x 4 to re­move code gen­er­a­tion that was not re­ally needed in prac­tice</li><li>The orig­i­nal Redis client dep­re­cated in 3.7 has been re­moved re­placed by the new Redis client</li><li>JSON changes<ul><li>Jack­son data­bind is now an op­tional Maven de­pen­dency which means that ap­pli­ca­tions need to ex­plic­itly add this de­pen­dency to the class­path</li><li>Spe­cific Jack­son util­ity meth­ods are moved to spe­cific Jack­son classes</li><li>Vert.x can use an al­ter­na­tive im­ple­men­ta­tion than Jack­son for JSON en­cod­ing and JSON de­cod­ing</li></ul></li><li>The fol­low­ing com­po­nents have reached their end of life and have been pruned<ul><li>MySQL / Post­greSQL async client re­placed by the Vert.x SQL Client (since 3.8)</li><li>AMQP bridge re­placed by the Vert.x AMQP Client (since 3.7)</li></ul></li></ul><h2 id=\"ramping-up-to-vertx-4\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#ramping-up-to-vertx-4\"></a>Ramping up to Vert.x 4</h2><p>In­stead of de­vel­op­ing all new fea­tures ex­clu­sively in Vert.x 4, we in­tro­duce some of these fea­tures in the 3.x branch\nso the com­mu­nity can ben­e­fit from them. The Vert.x 4 de­vel­op­ment focus on more fun­da­men­tal changes that can­not be done\nin the 3.x se­ries.</p><p><img src=\"/images/blog/vertx-4-milestone3-release/vertx-4-timeline.png\" alt=\"Screenshot\"/></p><p>This is the third mile­stone of Vert.x 4, we aim to re­lease Vert.x 4 by the end of this year and you can of course\nex­pect more mile­stones to out­line the progress of the ef­fort.</p><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a>\ncan be found on the wiki.</p><p>For this re­lease there are no Docker im­ages.,</p><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone3\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone3/\">Maven Cen­tral</a>.</p><p>You can boot­strap a Vert.x 4.0.0-​milestone3 project using <a href=\"https://start.vertx.io\">https://start.vertx.io</a>.</p><p>The doc­u­men­ta­tion has been de­ployed on this pre­view web-​site <a href=\"https://vertx-ci.github.io/vertx-4-preview/docs/\">https://vertx-​ci.github.io/vertx-​4-​preview/docs/</a></p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"/community/\">chan­nels</a>.</p>","scope":{}}},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.8.2","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"This version is a bug fix release of Vert.x 3.8.3, which addresses quite a few bugs reported by the community."},"date":"2019-10-07","slug":"eclipse-vert-x-3-8-2"},"nextPost":{"meta":{"title":"Eclipse Vert.x for Scala next steps","category":"news","authors":[{"name":"Jochen Mader","github_id":"codepitbull"}],"summary":"This blog post gives an overview of the current plans for the vertx-lang-scala module, in particular with respect to the upcoming Vert.x 4."},"date":"2019-08-30","slug":"eclipse-vert-x-for-scala-next-steps"},"relatedPosts":[{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"},{"meta":{"title":"Building services and APIs with AMQP 1.0","category":"guides","authors":[{"name":"Jakub Scholz","github_id":"scholzj"}],"summary":"Microservices and APIs are everywhere. Everyone talks about them, presentation slides are full of them ... some people are actually even building them."},"date":"2017-01-25","slug":"building-services-and-apis-with-amqp-1-0"},{"meta":{"title":"Eclipse Vert.x meets GraphQL","category":"guides","authors":[{"name":"Johannes Schüth","github_id":"jotschi"}],"summary":"In this blog post, we will look at an example application written in Vert.x that uses the new GraphQL API of Gentics Mesh."},"date":"2017-11-14","slug":"eclipse-vert-x-meets-graphql"}]},"__N_SSG":true}