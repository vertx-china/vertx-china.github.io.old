{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Simplified database transaction management with the Vert.x RxJava API","category":"guides","authors":[{"name":"Thomas Segismont","github_id":"tsegismont"}],"summary":"As of Vert.x 3.5, managing database transactions requires a lot of boilerplate code. Vert.x 3.6 provides helpers to easily make a reactive flow transactional."},"date":"2018-07-02","slug":"simplified-database-transaction-management-with-the-vert-x-rxjava-api","readingTime":{"text":"4 min read","minutes":3.235,"time":194100,"words":647},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      em: \"em\",\n      code: \"code\",\n      h2: \"h2\",\n      a: \"a\",\n      pre: \"pre\",\n      span: \"span\",\n      ul: \"ul\",\n      li: \"li\"\n    }, props.components), {Link} = _components;\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [_jsx(_components.em, {\n          children: \"TL;DR As of 3.5, man­ag­ing data­base trans­ac­tions with Vert.x re­quires a lot of boil­er­plate code.\"\n        }), \"\\n\", _jsxs(_components.em, {\n          children: [\"Vert.x 3.6 will pro­vide helpers and \", _jsx(_components.code, {\n            children: \"Observable\"\n          }), \" trans­form­ers to eas­ily make a re­ac­tive flow trans­ac­tional.\"]\n        })]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"simple-queries-with-the-rxified-api\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#simple-queries-with-the-rxified-api\"\n        }), \"Simple queries with the \", _jsx(_components.em, {\n          children: \"“Rxified”\"\n        }), \" API\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The \", _jsx(Link, {\n          href: \"/docs/vertx-rx/java2/\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"Vert.x API for Rx­Java\"\n          })\n        }), \" is one of the most pop­u­lar mod­ules in the Vert.x stack.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"So we make sure the \", _jsx(_components.em, {\n          children: \"“Rx­i­fied”\"\n        }), \" API is easy to use for com­mon pro­gram­ming tasks, such as read­ing rows from a re­la­tional data­base and send­ing the re­sult to the client:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"dbClient.rxQuery(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"SELECT name, duration FROM tracks WHERE album = 'The Israelites'\\\"\"\n          }), \")\\n  .map(ResultSet::getResults)\\n  .map(rows -> {\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Transform DB rows into a client-friendly JSON object\"\n          }), \"\\n  })\\n  .subscribe(json -> {\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Send JSON to the client\"\n          }), \"\\n  }, t -> {\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Send error to the client\"\n          }), \"\\n  });\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"managing-transactions-with-vertx-35\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#managing-transactions-with-vertx-35\"\n        }), \"Managing transactions with Vert.x 3.5\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"But very often, de­vel­op­ers have to im­ple­ment com­plex in­ter­ac­tions with the data­base, run­ning in­side a sin­gle trans­ac­tion.\\nTo do so, the im­ple­men­ta­tion must fol­low this process:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"get a con­nec­tion from the pool,\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"start a trans­ac­tion,\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"ex­e­cute queries,\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"if all queries suc­ceed, com­mit the trans­ac­tion,\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"oth­er­wise, roll­back the changes.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"How does that trans­late to code?\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Get a connection from the pool\"\n          }), \"\\ndbClient.rxGetConnection().flatMap(sqlConnection -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Setting auto-commit mode to false implicitely starts a transaction\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" sqlConnection.rxSetAutoCommit(\", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \")\\n    .andThen(\\n      \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Database queries\"\n          }), \"\\n      sqlConnection.rxExecute(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"INSERT INTO albums (name) VALUES ('The Israelites')\\\"\"\n          }), \")\\n        .andThen(sqlConnection.rxExecute(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"INSERT INTO tracks (album, name) VALUES ('The Israelites', 'Israelites')\\\"\"\n          }), \"))\\n        .andThen(sqlConnection.rxExecute(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"INSERT INTO tracks (album, name) VALUES ('The Israelites', 'Too Much Too Soon')\\\"\"\n          }), \"))\\n        .andThen(sqlConnection.rxQuery(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"SELECT name FROM tracks WHERE album = 'The Israelites'\\\"\"\n          }), \").map(ResultSet::getResults))\\n    )\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Commit if all queries succeed\"\n          }), \"\\n    .flatMap(rows -> sqlConnection.rxCommit().andThen(Single.just(rows)))\\n    .onErrorResumeNext(throwable -> {\\n      \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// On error, rollback the changes\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" sqlConnection.rxRollback().onErrorComplete()\\n        .andThen(sqlConnection.rxSetAutoCommit(\", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          }), \").onErrorComplete())\\n        .andThen(Single.error(throwable));\\n    }).flatMap(rows -> sqlConnection.rxSetAutoCommit(\", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          }), \").andThen(Single.just(rows)))\\n    .doFinally(sqlConnection::close);\\n}).map(rows -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Transform DB rows into a client-friendly JSON object\"\n          }), \"\\n}).subscribe(json -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Send JSON to the client\"\n          }), \"\\n}, t -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Send error to the client\"\n          }), \"\\n});\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"That is a lot of boil­er­plate around the spe­cific data­base queries…\\nIt would be bet­ter to re­lieve the de­vel­oper from main­tain­ing it.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"vertx-36-tools-for-transaction-management\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#vertx-36-tools-for-transaction-management\"\n        }), \"Vert.x 3.6 tools for transaction management\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"That is why Vert.x 3.6 will pro­vide \", _jsxs(_components.em, {\n          children: [_jsx(_components.code, {\n            children: \"Observable\"\n          }), \" trans­form­ers\"]\n        }), \" that can be ap­plied to re­ac­tive flows with \", _jsx(_components.a, {\n          href: \"http://reactivex.io/RxJava/javadoc/io/reactivex/Flowable.html#compose-io.reactivex.FlowableTransformer-\",\n          children: _jsx(_components.code, {\n            children: \"compose\"\n          })\n        }), \" to make them trans­ac­tional:\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.code, {\n            children: \"SQLClientHelper#txFlowableTransformer\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.code, {\n            children: \"SQLClientHelper#txObservableTransformer\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.code, {\n            children: \"SQLClientHelper#txSingleTransformer\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.code, {\n            children: \"SQLClientHelper#txMaybeTransformer\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.code, {\n            children: \"SQLClientHelper#txCompletableTransformer\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"These \", _jsx(_components.em, {\n          children: \"trans­form­ers\"\n        }), \" wrap the cor­re­spond­ing source of events with SQL trans­ac­tion man­age­ment.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"dbClient.rxGetConnection().flatMap(sqlConnection -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" sqlConnection.rxExecute(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"INSERT INTO albums (name) VALUES ('The Israelites')\\\"\"\n          }), \")\\n    .andThen(sqlConnection.rxExecute(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"INSERT INTO tracks (album, name) VALUES ('The Israelites', 'Israelites')\\\"\"\n          }), \"))\\n    .andThen(sqlConnection.rxExecute(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"INSERT INTO tracks (album, name) VALUES ('The Israelites', 'Too Much Too Soon')\\\"\"\n          }), \"))\\n    .andThen(sqlConnection.rxQuery(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"SELECT name FROM tracks WHERE album = 'The Israelites'\\\"\"\n          }), \").map(ResultSet::getResults))\\n    .compose(SQLClientHelper.txSingleTransformer(sqlConnection))\\n    .doFinally(sqlConnection::close);\\n}).map(rows -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Transform DB rows into a client-friendly JSON object\"\n          }), \"\\n}).subscribe(json -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Send JSON to the client\"\n          }), \"\\n}, t -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Send error to the client\"\n          }), \"\\n});\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Source \", _jsx(_components.em, {\n          children: \"trans­form­ers\"\n        }), \" pro­vide max­i­mum flex­i­bil­ity: you are still able to ex­e­cute op­er­a­tions with the con­nec­tion after the trans­ac­tion com­pletes.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"How­ever, you usu­ally do not need the con­nec­tion after the changes are \", _jsx(_components.em, {\n          children: \"com­mited\"\n        }), \" or \", _jsx(_components.em, {\n          children: \"roll­backed\"\n        }), \".\\nIn this case, you may sim­ply cre­ate you source ob­serv­able with one of the trans­ac­tional helper meth­ods in \", _jsx(_components.code, {\n          children: \"io.vertx.reactivex.ext.sql.SQLClientHelper\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Let’s rewrite the pre­vi­ous ex­am­ple:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"SQLClientHelper.inTransactionSingle(client, sqlConnection -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" sqlConnection.rxExecute(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"INSERT INTO albums (name) VALUES ('The Israelites')\\\"\"\n          }), \")\\n    .andThen(sqlConnection.rxExecute(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"INSERT INTO tracks (album, name) VALUES ('The Israelites', 'Israelites')\\\"\"\n          }), \"))\\n    .andThen(sqlConnection.rxExecute(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"INSERT INTO tracks (album, name) VALUES ('The Israelites', 'Too Much Too Soon')\\\"\"\n          }), \"))\\n    .andThen(sqlConnection.rxQuery(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"SELECT name FROM tracks WHERE album = 'The Israelites'\\\"\"\n          }), \").map(ResultSet::getResults))\\n}).map(rows -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Transform DB rows into a client-friendly JSON object\"\n          }), \"\\n}).subscribe(json -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Send JSON to the client\"\n          }), \"\\n}, t -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Send error to the client\"\n          }), \"\\n});\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"give-it-a-try\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#give-it-a-try\"\n        }), \"Give it a try\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Vert.x 3.6 is ex­pected around fall, but the code is al­ready in mas­ter and \", _jsx(_components.em, {\n          children: \"snap­shots\"\n        }), \" are reg­u­larly pub­lished to Sonatype’s OSS repos.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"So give it a try and feel free to pro­vide your fee­back on our user or dev \", _jsx(Link, {\n          href: \"/community\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"chan­nels\"\n          })\n        }), \".\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.5.3","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.5.3, a bug fix release of Vert.x 3.5.x."},"date":"2018-07-13","slug":"eclipse-vert-x-3-5-3"},"nextPost":{"meta":{"title":"Eclipse Vert.x 3.5.2","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.5.2, a bug fix release of Vert.x 3.5.x."},"date":"2018-06-08","slug":"eclipse-vert-x-3-5-2"},"relatedPosts":[{"meta":{"title":"Building services and APIs with AMQP 1.0","category":"guides","authors":[{"name":"Jakub Scholz","github_id":"scholzj"}],"summary":"Microservices and APIs are everywhere. Everyone talks about them, presentation slides are full of them ... some people are actually even building them."},"date":"2017-01-25","slug":"building-services-and-apis-with-amqp-1-0"},{"meta":{"title":"Eclipse Vert.x meets GraphQL","category":"guides","authors":[{"name":"Johannes Schüth","github_id":"jotschi"}],"summary":"In this blog post, we will look at an example application written in Vert.x that uses the new GraphQL API of Gentics Mesh."},"date":"2017-11-14","slug":"eclipse-vert-x-meets-graphql"},{"meta":{"title":"Contract Driven REST Services with Vert.x3","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"We see a new trend in development where we are shifting from developing applications to APIs. More and more we see services being offered as REST APIs that we are allowed to consume."},"date":"2015-09-17","slug":"contract-driven-rest-services-with-vert-x3"}]},"__N_SSG":true}