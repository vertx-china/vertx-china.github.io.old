{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"The RSS reader tutorial (Step 3)","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"This is the third installment of our Vert.x Cassandra Client tutorial. We will implement the last RSS endpoint serving a list of articles related to a specific channel."},"date":"2018-12-06","slug":"the-rss-reader-tutorial-step-3","readingTime":{"text":"2 min read","minutes":1.585,"time":95100,"words":317},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      code: \"code\",\n      pre: \"pre\",\n      span: \"span\",\n      h2: \"h2\"\n    }, props.components), {Link} = _components;\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [\"Now that \", _jsx(Link, {\n          href: \"/blog/eclipse-vert-x-3-6-0-released/\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"Vert.x 3.6.0 has been re­leased\"\n          })\n        }), \", it’s the per­fect time to con­clude our \", _jsx(Link, {\n          href: \"/docs/vertx-cassandra-client/java/\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"Vert.x Cas­san­dra Client\"\n          })\n        }), \" tu­to­r­ial!\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"In \", _jsx(Link, {\n          href: \"/blog/the-rss-reader-tutorial-step-2/\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"the pre­vi­ous step\"\n          })\n        }), \", we have suc­cess­fully im­ple­mented the sec­ond end­point\\nof the RSS reader app.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The RSS reader ex­am­ple as­sumes im­ple­ment­ing three end­points. This ar­ti­cle is ded­i­cated to im­ple­ment­ing the last \", _jsx(_components.code, {\n          children: \"GET /articles/by_rss_link?link={rss_link}\"\n        }), \" end­point.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Be­fore com­plet­ing this step, make sure your are in the \", _jsx(_components.code, {\n          children: \"step_3\"\n        }), \" git branch:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-better-shell\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"$\"\n          }), _jsx(_components.span, {\n            className: \"bash\",\n            children: \" git checkout step_3\"\n          }), \"\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"implementing-the-3rd-endpoint\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#implementing-the-3rd-endpoint\"\n        }), \"Implementing the 3rd endpoint\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The 3rd end­point serves a list of ar­ti­cles re­lated to a spe­cific RSS chan­nel. In a re­quest, we spec­ify RSS chan­nel by pro­vid­ing a link. On the ap­pli­ca­tion side, after re­ceiv­ing a re­quest we ex­e­cute the fol­low­ing query:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-sql\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"SELECT\"\n          }), \" title, article_link, description, pubDate \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"FROM\"\n          }), \" articles_by_rss_link \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"WHERE\"\n          }), \" rss_link \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" RSS_LINK_FROM_REQUEST ;\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"implementation\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#implementation\"\n        }), \"Implementation\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"For ob­tain­ing ar­ti­cles by RSS link we need to pre­pare a re­lated state­ment first. Change \", _jsx(_components.code, {\n          children: \"AppVerticle#prepareSelectArticlesByRssLink\"\n        }), \" in this way:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"private\"\n          }), \" Future<Void> \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"prepareSelectArticlesByRssLink\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"()\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" Util.prepareQueryAndSetReference(client,\\n            \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"SELECT title, article_link, description, pubDate FROM articles_by_rss_link WHERE rss_link = ? ;\\\"\"\n          }), \",\\n            selectArticlesByRssLink\\n    );\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"And now, we can im­ple­ment the \", _jsx(_components.code, {\n          children: \"AppVerticle#getArticles\"\n        }), \" method. Ba­si­cally, it will use the \", _jsx(_components.code, {\n          children: \"selectArticlesByRssLink\"\n        }), \" state­ment for find­ing ar­ti­cles by the given link. Here’s the im­ple­men­ta­tion:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"private\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"getArticles\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(RoutingContext ctx)\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"String\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"link\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" ctx.request().getParam(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"link\\\"\"\n          }), \");\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (link == \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"null\"\n          }), \") {\\n        responseWithInvalidRequest(ctx);\\n    } \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" {\\n        client.executeWithFullFetch(selectArticlesByRssLink.bind(link), handler -> {\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (handler.succeeded()) {\\n                List<Row> rows = handler.result();\\n\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"JsonObject\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"responseJson\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"JsonObject\"\n          }), \"();\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"JsonArray\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"articles\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"JsonArray\"\n          }), \"();\\n\\n                rows.forEach(eachRow -> articles.add(\\n                        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"JsonObject\"\n          }), \"()\\n                                .put(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"title\\\"\"\n          }), \", eachRow.getString(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"))\\n                                .put(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"link\\\"\"\n          }), \", eachRow.getString(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \"))\\n                                .put(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"description\\\"\"\n          }), \", eachRow.getString(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"2\"\n          }), \"))\\n                                .put(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"pub_date\\\"\"\n          }), \", eachRow.getTimestamp(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"3\"\n          }), \").getTime())\\n                ));\\n\\n                responseJson.put(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"articles\\\"\"\n          }), \", articles);\\n                ctx.response().end(responseJson.toString());\\n            } \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" {\\n                log.error(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"failed to get articles for \\\"\"\n          }), \" + link, handler.cause());\\n                ctx.response().setStatusCode(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"500\"\n          }), \").end(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Unable to retrieve the info from C*\\\"\"\n          }), \");\\n            }\\n        });\\n    }\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"conclusion\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#conclusion\"\n        }), \"Conclusion\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Dur­ing the se­ries, we have shown how the RSS reader app can be im­ple­mented with the \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/vertx-cassandra-client\",\n          children: \"Vert.x Cas­san­dra client\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Thanks for read­ing this. I hope you en­joyed this se­ries. See you soon on our \", _jsx(_components.a, {\n          href: \"https://gitter.im/eclipse-vertx/vertx-users\",\n          children: \"Git­ter chan­nel\"\n        }), \"!\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"HTTP response validation with the Vert.x Web Client","category":"guides","authors":[{"name":"Thomas Segismont","github_id":"tsegismont"}],"summary":"Learn how to use response predicates from the Vert.x Web module to validate HTTP responses and to automatically generate error messages."},"date":"2018-12-10","slug":"http-response-validation-with-the-vert-x-web-client"},"nextPost":{"meta":{"title":"Eclipse Vert.x 3.6.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are pleased to announce the Eclipse Vert.x 3.6.0 release."},"date":"2018-12-03","slug":"eclipse-vert-x-3-6-0-released"},"relatedPosts":[{"meta":{"title":"The RSS reader tutorial","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this tutorial, you will learn how to use the Eclipse Vert.x Cassandra client in practice. We will develop an RSS reader with three HTTP endpoints."},"date":"2018-08-20","slug":"the-rss-reader-tutorial"},{"meta":{"title":"The RSS reader tutorial (Step 2)","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this second installment of our Vert.x Cassandra Client tutorial, we will add an endpoint that produces an array of RSS channels for a given user ID."},"date":"2018-09-05","slug":"the-rss-reader-tutorial-step-2"},{"meta":{"title":"Building a real-time web app with Angular/Ngrx and Vert.x","category":"guides","authors":[{"name":"Benoit Hediard","github_id":"benorama"}],"summary":"There are multiple tech stacks to build a real-time web app. What are the best choices to build Angular client apps, connected to a JVM-based backend?"},"date":"2017-04-26","slug":"building-a-real-time-web-app-with-angular-ngrx-and-vert-x"}]},"__N_SSG":true}