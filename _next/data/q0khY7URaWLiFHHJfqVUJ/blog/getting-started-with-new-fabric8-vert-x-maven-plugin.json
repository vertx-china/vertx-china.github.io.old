{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Getting started with new fabric8 Vert.x Maven Plugin","category":"guides","authors":[{"name":"Kamesh Sampath","github_id":"kameshsampath"}],"summary":"The all new fabric8 Vert.x Maven Plugin allows you to setup, package, run, start, stop and redeploy easily with a very little configuration resulting in a less verbose pom.xml."},"date":"2016-12-07","slug":"getting-started-with-new-fabric8-vert-x-maven-plugin","readingTime":{"text":"5 min read","minutes":4.455,"time":267300,"words":891},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      code: \"code\",\n      ul: \"ul\",\n      li: \"li\",\n      em: \"em\",\n      h2: \"h2\",\n      pre: \"pre\",\n      span: \"span\",\n      h3: \"h3\"\n    }, props.components), {Alert, Gist} = _components;\n    if (!Alert) _missingMdxReference(\"Alert\", true);\n    if (!Gist) _missingMdxReference(\"Gist\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [\"The all new \", _jsx(_components.a, {\n          href: \"http://vmp.fabric8.io\",\n          children: \"fab­ric8 Vert.x Maven Plu­gin\"\n        }), \" al­lows you to setup, pack­age, run, start, stop and re­de­ploy eas­ily with a very lit­tle con­fig­u­ra­tion re­sult­ing in a less ver­bose \", _jsx(_components.code, {\n          children: \"pom.xml\"\n        }), \".\"]\n      }), \"\\n\", _jsx(Alert, {\n        info: true,\n        children: _jsxs(_components.p, {\n          children: [\"The plug­in is de­vel­oped under the \", _jsx(_components.a, {\n            href: \"https://fabric8.io/\",\n            children: \"fab­ric8\"\n          }), \" um­brella.\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Tra­di­tion­ally Vert.x ap­pli­ca­tions using \", _jsx(_components.a, {\n          href: \"http://maven.apache.org\",\n          children: \"Apache Maven\"\n        }), \" need to have one or more of the fol­low­ing plu­g­ins:\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.a, {\n            href: \"https://maven.apache.org/plugins/maven-shade-plugin/\",\n            children: \"Maven Shade Plu­gin\"\n          }), \" - aids in pack­ag­ing a uber jar of Vert.x ap­pli­ca­tion with ad­di­tional con­fig­u­ra­tions to per­form SPI com­bin­ing, MAN­I­FEST.MF en­tries etc.,\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.a, {\n            href: \"http://www.mojohaus.org/exec-maven-plugin/\",\n            children: \"Maven Exec Plu­gin\"\n          }), \" - aids in start­ing the Vert.x ap­pli­ca­tion\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.a, {\n            href: \"https://maven.apache.org/plugins/maven-ant-plugin/\",\n            children: \"Maven Ant Plu­gin\"\n          }), \" - aids in stop­ping the run­ning Vert.x ap­pli­ca­tion\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Though these are great plu­g­ins and do what is re­quired, but at the end of the day the de­vel­oper is left with a ver­bose \", _jsx(_components.code, {\n          children: \"pom.xml\"\n        }), \" which might be­come harder to main­tain as the ap­pli­ca­tion or its con­fig­u­ra­tion grows. Even if we de­cide to go this way and use those plu­g­ins, there are some things which can’t done or done eas­ily:\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"run\"\n          }), \" an ap­pli­ca­tion on fore­ground - which is a typ­i­cal way dur­ing de­vel­op­ment where the ap­pli­ca­tion starts in fore­ground of \", _jsx(_components.a, {\n            href: \"http://maven.apache.org\",\n            children: \"Apache Maven\"\n          }), \" build and killed au­to­mat­i­cally once we hit \", _jsx(_components.code, {\n            children: \"Ctrl + c\"\n          }), \"(or \", _jsx(_components.code, {\n            children: \"CMD + c\"\n          }), \" on Mac)\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"redeploy\"\n          }), \" is one of the coolest fea­ture of Vert.x al­low­ing us to per­form hot de­ploy­ments. Still we can man­age to do this with IDE sup­port but not na­tively using \", _jsx(_components.a, {\n            href: \"http://maven.apache.org\",\n            children: \"Apache Maven\"\n          }), \" - typ­i­cal cases where we dis­able \", _jsx(_components.em, {\n            children: \"Au­to­matic Builds\"\n          }), \" via IDE\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"setup\"\n          }), \" Vert.x ap­pli­ca­tions with sen­si­ble de­faults and re­quired Vert.x de­pen­den­cies e.g. vertx-​core\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"In this first blog of fab­ric8 Vert.x Maven Plu­gin se­ries we will help you to get started with this new \", _jsx(_components.a, {\n          href: \"http://vmp.fabric8.io\",\n          children: \"fab­ric8 Vert.x Maven Plu­gin\"\n        }), \", high­light­ing how this plug­in helps al­le­vi­at­ing the afore­men­tioned pain points with a less ver­bose \", _jsx(_components.code, {\n          children: \"pom.xml\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The \", _jsx(_components.a, {\n          href: \"http://maven.apache.org\",\n          children: \"Apache Maven\"\n        }), \" plug­in source code is avail­able at \", _jsx(_components.a, {\n          href: \"https://github.com/fabric8io/vertx-maven-plugin\",\n          children: \"github\"\n        }), \" with \", _jsx(_components.a, {\n          href: \"http://maven.apache.org\",\n          children: \"Apache Maven\"\n        }), \" plug­in doc­u­men­ta­tion avail­able at \", _jsx(_components.a, {\n          href: \"http://vmp.fabric8.io\",\n          children: \"fab­ric8 Vert.x Maven Plu­gin\"\n        })]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The source code of the ex­am­ples used in this blog are avail­able at \", _jsx(_components.a, {\n          href: \"https://github.com/kameshsampath/vmp-blog\",\n          children: \"github\"\n        })]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"lets-set-it-up\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#lets-set-it-up\"\n        }), \"Let’s set it up\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Its very easy to setup and get started. Let’s say you have a project called \", _jsx(_components.em, {\n          children: \"vmp-​blog\"\n        }), \" with the fol­low­ing con­tent as part of your \", _jsx(_components.code, {\n          children: \"pom.xml\"\n        })]\n      }), \"\\n\", _jsx(Gist, {\n        url: \"https://gist.github.com/kameshsampath/0e0cfc90ea3cb9d69553ee9901dfd796\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"from the project di­rec­tory just run the fol­low­ing com­mand:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"hljs language-bash\",\n          children: \"mvn io.fabric8:vertx-maven-plugin:1.0.0:setup\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"On suc­cess­ful ex­e­cu­tion of the above com­mand the project’s \", _jsx(_components.code, {\n          children: \"pom.xml\"\n        }), \" will be up­dated:\"]\n      }), \"\\n\", _jsx(Gist, {\n        url: \"https://gist.github.com/kameshsampath/3c2e96d98f1e16d0f7a0501c05ce0d12\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The com­mand did the fol­low­ing for you on the project:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"added cou­ple of prop­er­ties\", \"\\n\", _jsxs(_components.ul, {\n            children: [\"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"fabric8.vertx.plugin.version\"\n              }), \" - the lat­est fab­ric8 vert.x maven plug­in ver­sion\"]\n            }), \"\\n\", _jsxs(_components.li, {\n              children: [_jsx(_components.code, {\n                children: \"vertx.version\"\n              }), \" - the lat­est Vert.x frame­work ver­sion\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"added the Vert.x de­pen­dency BOM and vertx-​core de­pen­dency cor­re­spond­ing to \", _jsx(_components.code, {\n            children: \"vertx.version\"\n          })]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"added \", _jsx(_components.code, {\n            children: \"vertx-maven-plugin\"\n          }), \" with a sin­gle ex­e­cu­tion for goals \", _jsx(_components.a, {\n            href: \"https://vmp.fabric8.io/#vertx:initalize\",\n            children: \"ini­tial­ize\"\n          }), \" and \", _jsx(_components.a, {\n            href: \"https://vmp.fabric8.io/#vertx:package\",\n            children: \"pack­age\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The source code cre­ated by this step is avail­able \", _jsx(_components.a, {\n          href: \"https://github.com/kameshsampath/vmp-blog/tree/setup\",\n          children: \"here\"\n        })]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Et voilà, you are now all set to go with your Vert.x ap­pli­ca­tion build­ing with \", _jsx(_components.a, {\n          href: \"http://maven.apache.org\",\n          children: \"Apache Maven\"\n        }), \"!!\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"lets-package-it\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#lets-package-it\"\n        }), \"Let’s package it\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Now that we have set up our project to use \", _jsx(_components.code, {\n          children: \"vertx-maven-plugin\"\n        }), \", lets add a sim­ple ver­ti­cle and pack­age the Vert.x ap­pli­ca­tion as typ­i­cal \", _jsx(_components.em, {\n          children: \"uber\"\n        }), \" jar (in the Vert.x world we call them \", _jsx(_components.em, {\n          children: \"fat\"\n        }), \" jars).  The source code of this sec­tion is avail­able \", _jsx(_components.a, {\n          href: \"https://github.com/kameshsampath/vmp-blog/tree/package\",\n          children: \"here\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"To make \", _jsx(_components.code, {\n          children: \"package\"\n        }), \" work cor­rectly we need to add prop­erty called \", _jsx(_components.code, {\n          children: \"vertx.verticle\"\n        }), \", which will be used by the vertx-​maven-plugin to set the \", _jsx(_components.code, {\n          children: \"Main-Verticle:\"\n        }), \" at­tribute of the \", _jsx(_components.code, {\n          children: \"MANIFEST.MF\"\n        }), \".  Please refer to the doc­u­men­ta­tion of  \", _jsx(_components.a, {\n          href: \"https://vmp.fabric8.io/#vertx:package\",\n          children: \"pack­age\"\n        }), \" for other pos­si­ble con­fig­u­ra­tions.  There is also a \", _jsx(_components.a, {\n          href: \"https://vmp.fabric8.io/#vertx:examples\",\n          children: \"ex­am­ples\"\n        }), \" sec­tion of the vertx-​maven-plugin which pro­vides var­i­ous sam­ples snip­pets.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The up­dated \", _jsx(_components.code, {\n          children: \"pom.xml\"\n        }), \" with the added prop­erty \", _jsx(_components.code, {\n          children: \"vertx-maven-plugin\"\n        }), \" is shown below:\"]\n      }), \"\\n\", _jsx(Alert, {\n        info: true,\n        children: _jsx(_components.p, {\n          children: \"Only up­dated sec­tion is shown below, rest of the pom.xml is same as above\"\n        })\n      }), \"\\n\", _jsx(Gist, {\n        url: \"https://gist.github.com/kameshsampath/24a1ed6a377b118f06af2c4b4ddf0ca0\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"To pack­age the Vert.x ap­pli­ca­tion, run the fol­low­ing \", _jsx(_components.a, {\n          href: \"http://maven.apache.org\",\n          children: \"Apache Maven\"\n        }), \" com­mand from the project di­rec­tory:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"hljs language-bash\",\n          children: \"mvn clean package\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"On suc­cess­ful run of the above com­mand you should see the file with name \", _jsx(_components.code, {\n          children: \"${project.finalName}.jar\"\n        }), \" cre­ated in the \", _jsx(_components.code, {\n          children: \"${project.build.directory}\"\n        }), \", you could now do the fol­low­ing to start and run the Vert.x ap­pli­ca­tion.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-bash\",\n          children: [\"java -jar \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"${project.build.directory}\"\n          }), \"/\", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"${project.finalName}\"\n          }), \".jar\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The gen­er­ated \", _jsx(_components.code, {\n          children: \"MANIFEST.MF\"\n        }), \" file is as shown below:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"hljs language-text\",\n          children: \"Main-Class                               io.vertx.core.Launcher\\nMain-Verticle                            io.fabric8.blog.MainVerticle\\nManifest-Version                         1.0\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The source code up to now is avail­able in \", _jsx(_components.a, {\n          href: \"https://github.com/kameshsampath/vmp-blog/tree/package\",\n          children: \"here\"\n        })]\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"spi-combination\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#spi-combination\"\n        }), \"SPI Combination\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The \", _jsx(_components.code, {\n          children: \"package\"\n        }), \" goal by de­fault does a SPI com­bi­na­tion, lets say you have a ser­vice file called \", _jsx(_components.code, {\n          children: \"com.fasterxml.jackson.core.JsonFactory\"\n        }), \" in \", _jsx(_components.code, {\n          children: \"${project.basedir}/src/main/resources/META-INF/services\"\n        }), \" with con­tents:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"hljs language-text\",\n          children: \"foo.bar.baz.MyImpl\\n${combine}\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Dur­ing pack­ag­ing, if the \", _jsx(_components.a, {\n          href: \"http://vmp.fabric8.io\",\n          children: \"fab­ric8 Vert.x Maven Plu­gin\"\n        }), \" finds an­other \", _jsx(_components.code, {\n          children: \"com.fasterxml.jackson.core.JsonFactory\"\n        }), \" ser­vice de­f­i­n­i­tion file within the project de­pen­den­cies with con­tent \", _jsx(_components.em, {\n          children: \"foo.bar.baz2.My­Impl2\"\n        }), \", then it merges the con­tent into \", _jsx(_components.code, {\n          children: \"com.fasterxml.jackson.core.JsonFactory\"\n        }), \" of \", _jsx(_components.code, {\n          children: \"${project.basedir}/src/main/resources/META-INF/services\"\n        }), \", re­sult­ing in the fol­low­ing con­tent:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"hljs language-text\",\n          children: \"foo.bar.baz.MyImpl\\nfoo.bar.baz2.MyImpl2\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The po­si­tion of \", _jsx(_components.code, {\n          children: \"${combine}\"\n        }), \" con­trols the or­der­ing of the merge, since we added \", _jsx(_components.code, {\n          children: \"${combine}\"\n        }), \" below \", _jsx(_components.em, {\n          children: \"foo.bar.baz.My­Impl\"\n        }), \" all other SPI de­f­i­n­i­tions will be ap­pended below \", _jsx(_components.em, {\n          children: \"foo.bar.baz.My­Impl\"\n        })]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"whats-next-\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#whats-next-\"\n        }), \"What’s next ?\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"It’s good to have the jar pack­aged and run using \", _jsx(_components.code, {\n          children: \"java -jar uber-jar\"\n        }), \", but when doing typ­i­cal de­vel­op­ment you don’t  want to do fre­quent \", _jsx(_components.a, {\n          href: \"http://maven.apache.org\",\n          children: \"Apache Maven\"\n        }), \" pack­ag­ing and wish to see your changes au­to­mat­i­cally re­de­ployed.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Don’t worry!!! As part of \", _jsx(_components.a, {\n          href: \"http://vmp.fabric8.io\",\n          children: \"fab­ric8 Vert.x Maven Plu­gin\"\n        }), \" we have added the in­cre­men­tal builder to \", _jsx(_components.a, {\n          href: \"http://maven.apache.org\",\n          children: \"Apache Maven\"\n        }), \" build, which will watch for your source and re­source changes to per­form au­to­matic re-​build and del­e­gate the re­de­ploy­ment to Vert.x.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Run, re­de­ploy and other fea­tures of the \", _jsx(_components.a, {\n          href: \"http://vmp.fabric8.io\",\n          children: \"fab­ric8 Vert.x Maven Plu­gin\"\n        }), \" will be ex­plored in de­tail in the next part of this se­ries, until then have fun with \", _jsx(_components.a, {\n          href: \"http://vmp.fabric8.io\",\n          children: \"fab­ric8 Vert.x Maven Plu­gin\"\n        }), \"!!\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Internet of Things - Reactive and Asynchronous with Vert.x","category":"guides","authors":[{"name":"Paolo Patierno","github_id":"ppatierno"}],"summary":"I have to admit … before joining Red Hat I didn’t know about the Eclipse Vert.x project but it took me few days to fall in love with it!"},"date":"2016-12-29","slug":"internet-of-things-reactive-and-asynchronous-with-vert-x"},"nextPost":{"meta":{"title":"OAuth2 got easy","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"Oauth2 support exists in Eclipse Vert.x since version 3.2.0. The implementation follows the principles that rule the whole vert.x ecosystem."},"date":"2016-12-02","slug":"oauth2-got-easy"},"relatedPosts":[{"meta":{"title":"My first Vert.x 3 Application","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let's say, you heard someone saying that Vert.x is awesome. Ok great, but you may want to try it by yourself. Well, the next natural question is “where do I start ?”"},"date":"2015-07-14","slug":"my-first-vert-x-3-application"},{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Vert.x featuring Continuous Delivery with Jenkins and Ansible","category":"guides","authors":[{"name":"Ricardo Hernandez","github_id":"ricardohmon"}],"summary":"This blog entry describes an approach to adopt Continuous Delivery for Vert.x applications using Jenkins and Ansible by taking advantage of the Jenkins Job DSL and Ansible plugins."},"date":"2016-09-28","slug":"vert-x-featuring-continuous-delivery-with-jenkins-and-ansible"}]},"__N_SSG":true}