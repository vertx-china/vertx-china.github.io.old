{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Presentation of the Vert.x-Swagger project","category":"guides","authors":[{"name":"Florent Chamfroy","github_id":"phiz71"}],"summary":"This post is an introduction to the Vert.x-Swagger project, and describe how to use the Swagger-Codegen plugin and the SwaggerRouter class."},"date":"2017-05-22","slug":"presentation-of-the-vert-x-swagger-project","readingTime":{"text":"5 min read","minutes":4.705,"time":282300,"words":941},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      code: \"code\",\n      h2: \"h2\",\n      strong: \"strong\",\n      h3: \"h3\",\n      ul: \"ul\",\n      li: \"li\",\n      em: \"em\",\n      pre: \"pre\",\n      span: \"span\",\n      img: \"img\",\n      h4: \"h4\"\n    }, props.components), {Alert, Gist} = _components;\n    if (!Alert) _missingMdxReference(\"Alert\", true);\n    if (!Gist) _missingMdxReference(\"Gist\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [\"This post is an in­tro­duc­tion to the \", _jsx(_components.a, {\n          href: \"https://github.com/phiz71/vertx-swagger\",\n          children: \"Vert.x-​Swagger\"\n        }), \" project, and de­scribe how to use the \", _jsx(_components.code, {\n          children: \"Swagger-Codegen\"\n        }), \" plug­in and the \", _jsx(_components.code, {\n          children: \"SwaggerRouter\"\n        }), \" class.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"eclipse-vertx--swagger\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#eclipse-vertx--swagger\"\n        }), \"Eclipse Vert.x & Swagger\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          href: \"http://vertx.io/docs/vertx-core/java/\",\n          children: \"Vert.x\"\n        }), \" and \", _jsx(_components.a, {\n          href: \"http://vertx.io/docs/vertx-web/java/\",\n          children: \"Vert.x Web\"\n        }), \" are very con­ve­nient to write REST API and es­pe­cially the \", _jsx(_components.a, {\n          href: \"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\",\n          children: \"Router\"\n        }), \" which is very use­ful to man­age all re­sources of an API.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"But when I start a new API, I usu­ally use the “design-​first” ap­proach and \", _jsx(_components.a, {\n          href: \"http://swagger.io/specification/\",\n          children: \"Swag­ger\"\n        }), \" is my best friend to de­fine what my API is sup­posed to do. And then, comes the “bor­ing” part of the job : con­vert the swag­ger file con­tent into java code. That’s al­ways the same : re­sources, op­er­a­tions, mod­els…\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"For­tu­nately, Swag­ger pro­vides a code­gen tool : \", _jsx(_components.a, {\n          href: \"https://github.com/swagger-api/swagger-codegen\",\n          children: \"Swagger-​Codegen\"\n        }), \". With this tool, you can gen­er­ate a server stub based on your swag­ger de­f­i­n­i­tion file.\\nHow­ever, even if this gen­er­a­tor pro­vides many dif­fer­ent lan­guages and frame­work, Vert.X is miss­ing.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"This is where the \", _jsx(_components.a, {\n          href: \"https://github.com/phiz71/vertx-swagger\",\n          children: \"Vert.x-​Swagger\"\n        }), \" project comes in.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"the-project\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#the-project\"\n        }), \"The project\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"Vert.x-​Swagger\"\n        }), \" is a maven project pro­vid­ing 2 mod­ules.\"]\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"vertx-swagger-codegen\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#vertx-swagger-codegen\"\n        }), \"vertx-swagger-codegen\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"It’s a \", _jsx(_components.a, {\n          href: \"https://github.com/swagger-api/swagger-codegen\",\n          children: \"Swagger-​Codegen\"\n        }), \" plug­in, which add the ca­pa­bil­ity of gen­er­at­ing a Java Vert.x Web­Server to the gen­er­a­tor.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The gen­er­ated server mainly con­tains :\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"POJOs for \", _jsx(_components.code, {\n            children: \"definitions\"\n          })]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"one Ver­ti­cle per \", _jsx(_components.code, {\n            children: \"tag\"\n          })]\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"one Main­Ver­ti­cle, which man­age oth­ers APIVer­ti­cle and start an HttpServer.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(Alert, {\n        info: true,\n        children: _jsxs(_components.p, {\n          children: [\"The Main­Ver­ti­cle use \", _jsx(_components.em, {\n            children: \"vertx-​swagger-router\"\n          })]\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"vertx-swagger-router\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#vertx-swagger-router\"\n        }), \"vertx-swagger-router\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The main class of this mod­ule is \", _jsx(_components.code, {\n          children: \"SwaggerRouter\"\n        }), \". It’s more or less a \", _jsx(_components.em, {\n          children: \"Fac­tory\"\n        }), \" (and maybe I should re­name the class) that can cre­ate a \", _jsx(_components.a, {\n          href: \"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\",\n          children: \"Router\"\n        }), \", using the swag­ger de­f­i­n­i­tion file to con­fig­ure all the routes. For each route, it ex­tracts pa­ra­me­ters from the re­quest (\", _jsx(_components.code, {\n          children: \"Query\"\n        }), \", \", _jsx(_components.code, {\n          children: \"Path\"\n        }), \", \", _jsx(_components.code, {\n          children: \"Header\"\n        }), \", \", _jsx(_components.code, {\n          children: \"Body\"\n        }), \", \", _jsx(_components.code, {\n          children: \"Form\"\n        }), \") and send them on the event­Bus, using ei­ther the \", _jsx(_components.code, {\n          children: \"operationId\"\n        }), \" as the ad­dress or a com­puted id (just a pa­ra­me­ter in the con­struc­tor).\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"let-see-how-it-works\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#let-see-how-it-works\"\n        }), \"Let see how it works\"]\n      }), \"\\n\", _jsx(Alert, {\n        info: true,\n        children: _jsxs(_components.p, {\n          children: [\"For this post, I will use a sim­pli­fied swag­ger file but you can find a more com­plex ex­am­ple \", _jsx(_components.a, {\n            href: \"https://github.com/phiz71/vertx-swagger/tree/master/sample/petstore-vertx-server\",\n            children: \"here\"\n          }), \" based on the \", _jsx(_components.a, {\n            href: \"http://petstore.swagger.io/\",\n            children: \"pet­store\"\n          }), \" swag­ger file\"]\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"generating-the-server\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#generating-the-server\"\n        }), \"Generating the server\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"First, choose your swag­ger de­f­i­n­i­tion. Here’s a YAML File, but it could be a JSON file:\"\n      }), \"\\n\", _jsx(Gist, {\n        url: \"https://gist.github.com/phiz71/6c654f3da2d4124d3fe65e5aaaaedf55\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Then, down­load these li­braries :\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"http://central.maven.org/maven2/io/swagger/swagger-codegen-cli/2.2.2/swagger-codegen-cli-2.2.2.jar\",\n            children: \"swagger-​codegen-cli\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"http://central.maven.org/maven2/com/github/phiz71/vertx-swagger-codegen/1.0.0/vertx-swagger-codegen-1.0.0.jar\",\n            children: \"vertx-​swagger-codegen\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Fi­nally, run this com­mand\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-bash\",\n          children: [\"java -\", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"cp\"\n          }), \" /path/to/swagger-codegen-cli-2.2.2.jar:/path/to/vertx-swagger-codegen-1.0.0.jar io.swagger.codegen.SwaggerCodegen generate \\\\\\n  -l java-vertx \\\\\\n  -o path/to/destination/folder \\\\\\n  -i path/to/swagger/definition \\\\\\n  --group-id your.group.id \\\\\\n  --artifact-id your.artifact.id\\n\"]\n        })\n      }), \"\\n\", _jsx(Alert, {\n        info: true,\n        children: _jsxs(_components.p, {\n          children: [\"For more In­for­ma­tion about how Swag­ger­Code­gen works, you can read this \", _jsx(_components.a, {\n            href: \"https://github.com/swagger-api/swagger-codegen#getting-started\",\n            children: \"https://github.com/swagger-​api/swagger-​codegen#getting-​started\"\n          })]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You should have some­thing like that in your con­sole:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-gradle\",\n          children: [\"[main] INFO io.swagger.parser.Swagger20Parser - reading \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"from\"\n          }), \" ./wineCellarSwagger.yaml\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"file\"\n          }), \" [path\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/to/\"\n          }), \"destination\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/folder]/\"\n          }), \"src\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/main/\"\n          }), \"java\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/io/\"\n          }), \"swagger\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/server/\"\n          }), \"api\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/model/\"\n          }), \"Bottle.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"file\"\n          }), \" [path\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/to/\"\n          }), \"destination\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/folder]/\"\n          }), \"src\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/main/\"\n          }), \"java\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/io/\"\n          }), \"swagger\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/server/\"\n          }), \"api\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/model/\"\n          }), \"CellarInformation.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"file\"\n          }), \" [path\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/to/\"\n          }), \"destination\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/folder]/\"\n          }), \"src\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/main/\"\n          }), \"java\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/io/\"\n          }), \"swagger\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/server/\"\n          }), \"api\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/verticle/\"\n          }), \"BottlesApi.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"file\"\n          }), \" [path\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/to/\"\n          }), \"destination\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/folder]/\"\n          }), \"src\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/main/\"\n          }), \"java\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/io/\"\n          }), \"swagger\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/server/\"\n          }), \"api\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/verticle/\"\n          }), \"BottlesApiVerticle.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"file\"\n          }), \" [path\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/to/\"\n          }), \"destination\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/folder]/\"\n          }), \"src\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/main/\"\n          }), \"java\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/io/\"\n          }), \"swagger\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/server/\"\n          }), \"api\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/verticle/I\"\n          }), \"nformationApi.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"file\"\n          }), \" [path\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/to/\"\n          }), \"destination\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/folder]/\"\n          }), \"src\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/main/\"\n          }), \"java\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/io/\"\n          }), \"swagger\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/server/\"\n          }), \"api\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/verticle/I\"\n          }), \"nformationApiVerticle.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"file\"\n          }), \" [path\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/to/\"\n          }), \"destination\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/folder]/\"\n          }), \"src\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/main/\"\n          }), \"resources/swagger.json\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"file\"\n          }), \" [path\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/to/\"\n          }), \"destination\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/folder]/\"\n          }), \"src\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/main/\"\n          }), \"java\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/io/\"\n          }), \"swagger\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/server/\"\n          }), \"api/MainApiVerticle.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"file\"\n          }), \" [path\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/to/\"\n          }), \"destination\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/folder]/\"\n          }), \"src\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/main/\"\n          }), \"resources/vertx-\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"default\"\n          }), \"-jul-logging.properties\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"file\"\n          }), \" [path\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/to/\"\n          }), \"destination\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/folder]/\"\n          }), \"pom.xml\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"file\"\n          }), \" [path\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/to/\"\n          }), \"destination\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/folder]/\"\n          }), \"README.md\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"file\"\n          }), \" [path\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/to/\"\n          }), \"destination\", _jsx(_components.span, {\n            className: \"hljs-regexp\",\n            children: \"/folder]/\"\n          }), \".swagger-codegen-ignore\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"And this in your des­ti­na­tion folder:\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/images/blog/vertx-swagger-presentation/GeneratedProject.png\",\n          alt: \"Generated sources\"\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"what-have-been-created-\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#what-have-been-created-\"\n        }), \"What have been created ?\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"As you can see in \", _jsx(_components.strong, {\n          children: \"1\"\n        }), \",  the \", _jsx(_components.em, {\n          children: \"vertx-​swagger-codegen\"\n        }), \" plug­in has cre­ated one POJO by \", _jsx(_components.code, {\n          children: \"definition\"\n        }), \" in the swag­ger file.\"]\n      }), \"\\n\", _jsxs(_components.h4, {\n        id: \"example--the-bottle-definition\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#example--the-bottle-definition\"\n        }), \"Example : the bottle definition\"]\n      }), \"\\n\", _jsx(Gist, {\n        url: \"https://gist.github.com/phiz71/eabafda440b24881126089128d677121\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"In \", _jsx(_components.strong, {\n          children: \"2a\"\n        }), \" and \", _jsx(_components.strong, {\n          children: \"2b\"\n        }), \" you can find :\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"an in­ter­face which con­tains a func­tion per \", _jsx(_components.code, {\n            children: \"operation\"\n          })]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"a ver­ti­cle which de­fines all \", _jsx(_components.code, {\n            children: \"operationId\"\n          }), \" and cre­ate \", _jsx(_components.a, {\n            href: \"http://vertx.io/docs/vertx-core/java/#_the_event_bus_api\",\n            children: \"Event­Bus\"\n          }), \" con­sumers\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.h4, {\n        id: \"example--the-bottles-interface\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#example--the-bottles-interface\"\n        }), \"Example : the Bottles interface\"]\n      }), \"\\n\", _jsx(Gist, {\n        url: \"https://gist.github.com/phiz71/be1ca2f550f44aea7fb2710b383e26ed\"\n      }), \"\\n\", _jsxs(_components.h4, {\n        id: \"example--the-bottles-verticle\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#example--the-bottles-verticle\"\n        }), \"Example : the Bottles verticle\"]\n      }), \"\\n\", _jsx(Gist, {\n        url: \"https://gist.github.com/phiz71/c0aadbb4f26ebed8e2e145d0b4a8d210\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"-and-now-\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#-and-now-\"\n        }), \"… and now ?\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Line \", _jsx(_components.code, {\n          children: \"23\"\n        }), \" of \", _jsx(_components.code, {\n          children: \"BottlesApiVerticle.java\"\n        }), \", you can see this\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"BottlesApi\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"service\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"BottlesApiImpl\"\n          }), \"();\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"This line will not com­pile until the \", _jsx(_components.code, {\n          children: \"BottlesApiImpl\"\n        }), \" class is cre­ated.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"In all \", _jsx(_components.strong, {\n          children: \"XXXAPI\"\n        }), \"Ver­ti­cles, you will find a vari­able called \", _jsx(_components.em, {\n          children: \"ser­vice\"\n        }), \". It is a \", _jsx(_components.strong, {\n          children: \"XXXAPI\"\n        }), \" type and it is in­stan­ci­ated with a \", _jsx(_components.strong, {\n          children: \"XXXAPI\"\n        }), \"Impl con­truc­tor. This class does not exist yet since it is the busi­ness of your API.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.strong, {\n          children: \"And so you will have to cre­ate these im­ple­men­ta­tions.\"\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"fine-but-what-if-i-dont-want-to-build-my-api-like-this-\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#fine-but-what-if-i-dont-want-to-build-my-api-like-this-\"\n        }), \"Fine, but what if I don’t want to build my API like this ?\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Well, Vert.x is \", _jsx(_components.strong, {\n          children: \"un­opin­ion­ated\"\n        }), \" but the way the \", _jsx(_components.em, {\n          children: \"vertx-​swagger-codegen\"\n        }), \" cre­ates the server stub \", _jsx(_components.strong, {\n          children: \"is not\"\n        }), \".\\nSo if you want to im­ple­ment your API the way you want, while en­joy­ing dy­namic rout­ing based on a swag­ger file, the \", _jsx(_components.em, {\n          children: \"vertx-​swagger-router\"\n        }), \" li­brary can be used stand­alone.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Just im­port this jar into your project:\"\n      }), \"\\n\", _jsx(Gist, {\n        url: \"https://gist.github.com/phiz71/56e723362a1d1370c7262bff246fb087\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You will be able to cre­ate your \", _jsx(_components.a, {\n          href: \"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\",\n          children: \"Router\"\n        }), \" like this:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"FileSystem\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"vertxFileSystem\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" vertx.fileSystem();\\nvertxFileSystem.readFile(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"***YOUR_SWAGGER_FILE***\\\"\"\n          }), \", readFile -> {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (readFile.succeeded()) {\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"Swagger\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"swagger\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"SwaggerParser\"\n          }), \"().parse(readFile.result().toString(Charset.forName(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"utf-8\\\"\"\n          }), \"))); \\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"Router\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"swaggerRouter\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" SwaggerRouter.swaggerRouter(Router.router(vertx), swagger, vertx.eventBus(), \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"OperationIdServiceIdResolver\"\n          }), \"());\\n        [...]\\n   } \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" {\\n        [...]\\n   }\\n});\\n\"]\n        })\n      }), \"\\n\", _jsx(Alert, {\n        info: true,\n        children: _jsxs(_components.p, {\n          children: [\"You can ig­nore the last pa­ra­me­ter in \", _jsx(_components.code, {\n            children: \"SwaggerRouter.swaggerRouter(...)\"\n          }), \". As a re­sult, ad­dresses will be com­puted in­stead of using \", _jsx(_components.code, {\n            children: \"operationId\"\n          }), \" from the swag­ger file.\\nFor in­stance, \", _jsx(_components.code, {\n            children: \"GET /bottles/{bottle_id}\"\n          }), \" will be­come \", _jsx(_components.em, {\n            children: \"GET_bot­tles_bottle-​id\"\n          })]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"conclusion\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#conclusion\"\n        }), \"Conclusion\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Vert.x and Swag­ger are great tools to build and doc­u­ment an API but using both in the same project can be painful. The \", _jsx(_components.a, {\n          href: \"https://github.com/phiz71/vertx-swagger\",\n          children: \"Vert.x-​Swagger\"\n        }), \" project was made to save time, let­ting the de­vel­op­ers fo­cus­ing on busi­ness code.\\nIt can be seen as an API frame­work over Vert.X.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can also use the \", _jsx(_components.code, {\n          children: \"SwaggerRouter\"\n        }), \" in your own project with­out using Swagger-​Codegen.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In fu­ture re­leases, more in­for­ma­tion from the swag­ger file will be used to con­fig­ure the router and cer­tainly oth­ers lan­guages will be sup­ported.\"\n      }), \"\\n\", _jsx(Alert, {\n        info: true,\n        children: _jsx(_components.p, {\n          children: \"Though Vert.x is poly­glot, Vert.x-​Swagger project only sup­ports Java. If you want to con­tribute to sup­port more lan­guages, you’re wel­come :)\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Thanks for read­ing.\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Preview of a guide for Java developers","category":"news","authors":[{"name":"Julien Ponge","github_id":"jponge"}],"summary":"We are introducing the book “A gentle guide to asynchronous programming with Eclipse Vert.x for enterprise application developers”."},"date":"2017-06-09","slug":"preview-of-a-guide-for-java-developers"},"nextPost":{"meta":{"title":"Time scheduling with Chime","category":"guides","authors":[{"name":"Lisi","github_id":"LisiLisenok"}],"summary":"Eclipse Vert.x executes periodic and delayed actions with periodic and one-shot timers. Chime is a time scheduler verticle that works on the Vert.x event bus."},"date":"2017-05-09","slug":"time-scheduling-with-chime"},"relatedPosts":[{"meta":{"title":"My first Vert.x 3 Application","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let's say, you heard someone saying that Vert.x is awesome. Ok great, but you may want to try it by yourself. Well, the next natural question is “where do I start ?”"},"date":"2015-07-14","slug":"my-first-vert-x-3-application"},{"meta":{"title":"Using the asynchronous SQL client","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Finally, back... This post is the fifth post of the introduction to vert.x blog series, after a not-that-small break. In this post we are going to see how we can use JDBC in a vert.x application."},"date":"2015-10-19","slug":"using-the-asynchronous-sql-client"},{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"}]},"__N_SSG":true}