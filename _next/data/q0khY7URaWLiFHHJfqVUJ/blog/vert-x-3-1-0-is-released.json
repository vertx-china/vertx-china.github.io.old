{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Vert.x 3.1.0 is released!","category":"releases","authors":[{"name":"Tim Fox","github_id":"purplefox"}],"summary":"I'm pleased to announce the release of Vert.x 3.1!"},"date":"2015-10-08","slug":"vert-x-3-1-0-is-released","readingTime":{"text":"2 min read","minutes":1.095,"time":65700,"words":219},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      ul: \"ul\",\n      li: \"li\",\n      a: \"a\"\n    }, props.components), {Link} = _components;\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"I’m pleased to an­nounce the re­lease of Vert.x 3.1!\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Some of the high­lights of this re­lease in­clude:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [_jsx(Link, {\n              href: \"/docs/vertx-sync/java/\",\n              passHref: true,\n              children: _jsx(_components.a, {\n                href: \"\",\n                children: \"Vertx-​sync\"\n              })\n            }), \" is a set of util­i­ties that allow you to per­form asyn­chro­nous\\nop­er­a­tions and re­ceive events in a syn­chro­nous way, but with­out block­ing ker­nel threads.\"]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [_jsx(Link, {\n              href: \"/docs/vertx-stomp/java/\",\n              passHref: true,\n              children: _jsx(_components.a, {\n                href: \"\",\n                children: \"Vertx-​stomp\"\n              })\n            }), \" is an im­ple­men­ta­tion of a STOMP server and client.\\nYou can use the STOMP server with other clients and use the STOMP client with other servers.\\nThe server and the client sup­ports the ver­sion 1.0, 1.1 and 1.2 of the STOMP pro­to­col.\\nThe STOMP server can also be used as a bridge with the\\nvert.x event bus.\"]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [_jsx(Link, {\n              href: \"/docs/vertx-shell/java/\",\n              passHref: true,\n              children: _jsx(_components.a, {\n                href: \"\",\n                children: \"Vertx-​shell\"\n              })\n            }), \" is a com­mand line in­ter­face for the Vert.x run­time avail­able from\\nreg­u­lar ter­mi­nals using dif­fer­ent pro­to­cols.\"]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsx(_components.p, {\n            children: \"Re-​implementation of the Starter class and re­lated func­tion­al­ity. And now re­de­ploy is back!\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Full re­lease notes can be found here:\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/wiki/wiki/3.1-Release-Notes\",\n          children: \"https://github.com/vert-​x3/wiki/wiki/3.1-​Release-Notes\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Break­ing changes here:\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/wiki/wiki/3.1.0---Breaking-changes\",\n          children: \"https://github.com/vert-​x3/wiki/wiki/3.1.0-​—Breaking-changes\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"NPM for the event-​bus client here:\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"https://www.npmjs.com/package/vertx3-eventbus-client\",\n          children: \"https://www.npmjs.com/pack­age/vertx3-​eventbus-client\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Many thanks to all the com­mit­ters and com­mu­nity whose con­tri­bu­tions made this pos­si­ble.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"A spe­cial thanks to the full-​time team - Clement, Julien and Paulo who put in a lot of work to get this out :)\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Next stop is Vert.x 3.2 which we hope to have out be­fore Christ­mas.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The ar­ti­facts have been de­ployed to \", _jsx(_components.a, {\n          href: \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.1.0%22\",\n          children: \"Maven Cen­tral\"\n        }), \"\\nand you can get the dis­tri­b­u­tion on \", _jsx(_components.a, {\n          href: \"https://bintray.com/vertx/downloads/distribution/3.1.0/view\",\n          children: \"Bin­tray\"\n        }), \".\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Using the asynchronous SQL client","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Finally, back... This post is the fifth post of the introduction to vert.x blog series, after a not-that-small break. In this post we are going to see how we can use JDBC in a vert.x application."},"date":"2015-10-19","slug":"using-the-asynchronous-sql-client"},"nextPost":{"meta":{"title":"Contract Driven REST Services with Vert.x3","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"We see a new trend in development where we are shifting from developing applications to APIs. More and more we see services being offered as REST APIs that we are allowed to consume."},"date":"2015-09-17","slug":"contract-driven-rest-services-with-vert-x3"},"relatedPosts":[{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Building a real-time web app with Angular/Ngrx and Vert.x","category":"guides","authors":[{"name":"Benoit Hediard","github_id":"benorama"}],"summary":"There are multiple tech stacks to build a real-time web app. What are the best choices to build Angular client apps, connected to a JVM-based backend?"},"date":"2017-04-26","slug":"building-a-real-time-web-app-with-angular-ngrx-and-vert-x"},{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"}]},"__N_SSG":true}