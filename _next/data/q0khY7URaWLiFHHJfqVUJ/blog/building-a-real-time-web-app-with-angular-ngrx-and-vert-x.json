{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Building a real-time web app with Angular/Ngrx and Vert.x","category":"guides","authors":[{"name":"Benoit Hediard","github_id":"benorama"}],"summary":"There are multiple tech stacks to build a real-time web app. What are the best choices to build Angular client apps, connected to a JVM-based backend?"},"date":"2017-04-26","slug":"building-a-real-time-web-app-with-angular-ngrx-and-vert-x","readingTime":{"text":"7 min read","minutes":6.23,"time":373800,"words":1246},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      h2: \"h2\",\n      strong: \"strong\",\n      img: \"img\",\n      em: \"em\",\n      ul: \"ul\",\n      li: \"li\",\n      blockquote: \"blockquote\",\n      ol: \"ol\",\n      h3: \"h3\",\n      code: \"code\",\n      pre: \"pre\",\n      span: \"span\"\n    }, props.components), {Alert, Link} = _components;\n    if (!Alert) _missingMdxReference(\"Alert\", true);\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"Nowa­days, there are mul­ti­ple tech stacks to build a real-​time web app. What are the best choices to build real-​time An­gu­lar client apps, con­nected to a JVM-​based back­end? This ar­ti­cle de­scribes an An­gu­lar+Vertx real-​time ar­chi­tec­ture with a Proof of Con­cept demo app.\"\n      }), \"\\n\", _jsx(Alert, {\n        info: true,\n        children: _jsxs(_components.p, {\n          children: [\"This is a re-​publication of the fol­low­ing \", _jsx(_components.a, {\n            href: \"https://medium.com/@benorama/building-a-realtime-web-app-with-angular-ngrx-and-vert-x-a5381c0397a1\",\n            children: \"Medium post\"\n          })]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"intro\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#intro\"\n        }), \"Intro\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"Wel­come to the real-​time web!\"\n        }), \" It’s time to move on from tra­di­tional syn­chro­nous HTTP re­quest/re­sponse ar­chi­tec­tures to re­ac­tive apps with con­nected clients (ouch… that’s a lot of buzz­words in just one sen­tence)!\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/images/blog/vertx-realtime-angular-ngrx/data-in-motion.jpg\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsxs(_components.em, {\n          children: [\"Image source: \", _jsx(_components.a, {\n            href: \"https://www.voxxed.com\",\n            children: \"https://www.voxxed.com\"\n          })]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"To build this kind of app, \", _jsx(_components.a, {\n          href: \"https://www.meteor.com\",\n          children: \"Me­te­orJS\"\n        }), \" is the new cool kid on the block (v1.0 re­leased in oc­to­ber 2014): \", _jsx(_components.strong, {\n          children: \"a full stack Javascript plat­form to build connected-​client re­ac­tive ap­pli­ca­tions\"\n        }), \". It al­lows JS de­vel­op­ers to build and de­ploy amaz­ing mod­ern web and mo­bile apps (iOS/An­droid) in no time, using a uni­fied back­end+fron­tend code within a sin­gle app repo. That’s a pretty am­bi­tious ap­proach but it re­quires a very opin­ion­ated and highly cou­pled JS tech stack and it’s still a pretty niche frame­work.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"More­over, we are a Java shop on the back­end. At Ago­ra­Pulse, we rely heav­ily on :\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.a, {\n            href: \"https://angular.io\",\n            children: \"An­gu­lar\"\n          }), \" and \", _jsx(_components.a, {\n            href: \"http://ionicframework.com\",\n            children: \"Ionic\"\n          }), \" for the JS fron­tend (with a shared busi­ness/data ar­chi­tec­ture based on \", _jsx(_components.a, {\n            href: \"https://github.com/ngrx/store\",\n            children: \"Ngrx\"\n          }), \"),\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.a, {\n            href: \"http://www.groovy-lang.org\",\n            children: \"Groovy\"\n          }), \" and \", _jsx(_components.a, {\n            href: \"https://grails.org\",\n            children: \"Grails\"\n          }), \" ecosys­tem for the JVM back­end.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"So my ques­tion is:\"\n      }), \"\\n\", _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"What are the best choices to build real-​time An­gu­lar client apps, con­nected to a JVM-​based back­end these days?\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Our re­quire­ments are pretty basic. We don’t need full Me­teor’s end-​to-end ap­pli­ca­tion model.\\nWe just want to be able to :\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"build a re­ac­tive app with an event bus on the JVM, and\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"ex­tend the event bus down to the browser to be able to pub­lish/sub­scribe to real-​time events from an An­gu­lar app.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"server-side-jvm\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#server-side-jvm\"\n        }), \"Server side (JVM)\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Re­ac­tive apps is a hot topic nowa­days and there are many great libs/plat­forms to build this type of event-​driven ar­chi­tec­ture on the JVM:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(Link, {\n            href: \"/\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"Vert.x\"\n            })\n          }), \",\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.a, {\n            href: \"https://www.lightbend.com\",\n            children: \"Light­bend\"\n          }), \" plat­form (Play, Akka, Scala),\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Spring \", _jsx(_components.a, {\n            href: \"http://projectreactor.io\",\n            children: \"Project Re­ac­tor\"\n          }), \" (in­te­grated into Grails 3.0).\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"client-side\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#client-side\"\n        }), \"Client side\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          href: \"http://facebook.github.io/react/\",\n          children: \"Re­ac­tJS\"\n        }), \" and \", _jsx(_components.a, {\n          href: \"https://angular.io\",\n          children: \"An­gu­lar\"\n        }), \" are the two most pop­u­lar frame­work right now to build mod­ern JS apps. Most plat­forms use \", _jsx(_components.a, {\n          href: \"https://github.com/sockjs/sockjs-client\",\n          children: \"SockJS\"\n        }), \" to han­dle real-​time con­nec­tions:\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(Link, {\n            href: \"/docs/vertx-web/groovy/\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"Vertx-​web\"\n            })\n          }), \" pro­vides a SockJS server im­ple­men­ta­tion with an event bus bridge and a \", _jsx(Link, {\n            href: \"/docs/vertx-web/groovy/#_sockjs_event_bus_bridge\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"vertx-​evenbus.js\"\n            })\n          }), \" client li­brary (very easy to use),\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Spring pro­vides web­socket SockJS sup­port though Spring Mes­sag­ing and Web­socket libs (see an ex­am­ple \", _jsx(_components.a, {\n            href: \"https://spring.io/guides/gs/messaging-stomp-websocket/\",\n            children: \"here\"\n          }), \")\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"final-choice-vertx--angular\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#final-choice-vertx--angular\"\n        }), \"Final choice: Vert.x + Angular\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In the end, I’ve cho­sen to ex­per­i­ment with Vert.x for its ex­cel­lent Groovy sup­port, dis­trib­uted event bus, scal­a­bil­ity and ease of use.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"I en­joyed it very much. Let me show you the re­sult of my ex­per­i­men­ta­tion which is the root of our real-​time fea­tures com­ing very soon in Ago­ra­Pulse v6.0!\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"why-vertx\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#why-vertx\"\n        }), \"Why Vert.x?\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Like other re­ac­tive plat­form, Vert.x is event dri­ven and non block­ing. It scales very well (even more that Node.js).\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Un­like other re­ac­tive plat­forms, Vert.x is poly­glot: you can use Vert.x with mul­ti­ple lan­guages in­clud­ing Java, JavaScript, Groovy, Ruby, Cey­lon, Scala and Kotlin.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Un­like Node.js, Vert.x is a gen­eral pur­pose tool-​kit and un­opin­ion­ated. It’s a ver­sa­tile plat­form suit­able for many things: from sim­ple net­work util­i­ties, so­phis­ti­cated mod­ern web ap­pli­ca­tions, HTTP/REST mi­croser­vices or a full blown back-​end message-​bus ap­pli­ca­tion.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Like other re­ac­tive plat­forms, it looks scary in the be­gin­ing when you read the doc­u­men­ta­tion… ;) But once you start play­ing with it, it re­mains fun and sim­ple to use, es­pe­cially with Groovy! Vert.x re­ally al­lows you to build sub­stan­tial sys­tems with­out get­ting tan­gled in com­plex­ity.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In my case, I was mainly in­ter­ested by the dis­trib­uted event-​bus pro­vided (a core fea­ture of Vert.x).\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.strong, {\n          children: \"To val­i­date our ap­proach, we built pro­to­types with the fol­low­ing goals:\"\n        })\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.strong, {\n            children: \"share and syn­chro­nize a com­mon (Ngrx-​based) state be­tween mul­ti­ple con­nected clients, and\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.strong, {\n            children: \"dis­trib­ute real-​time (Ngrx-​based) ac­tions across mul­ti­ple con­nected clients, which im­pact local states/re­duc­ers.\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(Alert, {\n        info: true,\n        children: _jsxs(_components.p, {\n          children: [_jsx(_components.a, {\n            href: \"https://github.com/ngrx/store\",\n            children: \"@ngrx/store\"\n          }), \" is a RxJS pow­ered state man­age­ment in­spired by Redux for An­gu­lar apps. It’s cur­rently the most pop­u­lar way to struc­ture com­plex busi­ness logic in An­gu­lar apps.\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/images/blog/vertx-realtime-angular-ngrx/redux.png\",\n          alt: \"Redux\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsxs(_components.em, {\n          children: [\"Source: \", _jsx(_components.a, {\n            href: \"https://www.smashingmagazine.com/2016/06/an-introduction-to-redux/\",\n            children: \"https://www.smash­ing­magazine.com/2016/06/an-​introduction-to-redux/\"\n          })]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"proof-of-concept\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#proof-of-concept\"\n        }), \"PROOF OF CONCEPT\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Here is the repo of our ini­tial proof of con­cept:\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"http://github.com/benorama/ngrx-realtime-app\",\n          children: \"http://github.com/beno­rama/ngrx-​realtime-app\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The repo is di­vided into two sep­a­rate projects:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"Vert.x server app\"\n          }), \", based on \", _jsx(Link, {\n            href: \"/\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"Vert.x\"\n            })\n          }), \" (ver­sion 3.3), man­aged by \", _jsx(_components.a, {\n            href: \"https://gradle.org\",\n            children: \"Gra­dle\"\n          }), \", with a main ver­ti­cle de­vel­oped in \", _jsx(_components.a, {\n            href: \"http://groovy-lang.org\",\n            children: \"Groovy\"\n          }), \" lang.\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"An­gu­lar client app\"\n          }), \", based on An­gu­lar (ver­sion 4.0.1), man­aged by \", _jsx(_components.a, {\n            href: \"https://angular.io\",\n            children: \"An­gu­lar\"\n          }), \" CLI with state, re­duc­ers and ac­tions logic based on \", _jsx(_components.a, {\n            href: \"https://github.com/ngrx/store\",\n            children: \"@ngrx/store\"\n          }), \" (ver­sion 2.2.1)\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"For the demo, we are using the counter ex­am­ple code (ac­tions and re­duc­ers) from \", _jsx(_components.a, {\n          href: \"https://github.com/ngrx/store\",\n          children: \"@ngrx/store\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The counter client busi­ness logic is based on:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"CounterState\"\n          }), \" in­ter­face, counter state model,\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"counterReducer\"\n          }), \" re­ducer, counter state man­age­ment based on dis­patched ac­tions, and\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.em, {\n            children: \"In­cre­ment\"\n          }), \", \", _jsx(_components.em, {\n            children: \"decre­ment\"\n          }), \" and \", _jsx(_components.em, {\n            children: \"reset\"\n          }), \" counter ac­tions.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"State is main­tained server-​side with a sim­ple sin­gle­ton \", _jsx(_components.code, {\n          children: \"CounterService\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-groovy\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"CounterService\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"static\"\n          }), \" INCREMENT = \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'[Counter] Increment'\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"static\"\n          }), \" DECREMENT = \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'[Counter] Decrement'\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"static\"\n          }), \" RESET = \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'[Counter] Reset'\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" total = \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"void\"\n          }), \" handleEvent(event) {\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"switch\"\n          }), \"(event.type) {\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"case\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"INCREMENT:\"\n          }), \"\\n                total++\\n                \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"break\"\n          }), \"\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"case\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"DECREMENT:\"\n          }), \"\\n                total--\\n                \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"break\"\n          }), \"\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"case\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"RESET:\"\n          }), \"\\n                total = \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"\\n                \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"break\"\n          }), \"\\n        }\\n    }\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"client-state-initialization-through-requestresponse\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#client-state-initialization-through-requestresponse\"\n        }), \"Client state initialization through Request/Response\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Ini­tial state is ini­tial­ized with sim­ple \", _jsx(_components.strong, {\n          children: \"re­quest/re­sponse\"\n        }), \" (or send/reply) on the event bus.\\nOnce the client is con­nected, it sends a re­quest to the event bus at the ad­dress \", _jsx(_components.strong, {\n          children: \"counter::total\"\n        }), \". The server replies di­rectly with the value of \", _jsx(_components.code, {\n          children: \"CounterService\"\n        }), \" total and the client dis­patches lo­cally a \", _jsx(_components.em, {\n          children: \"reset\"\n        }), \" ac­tion with the total value from the reply.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/images/blog/vertx-realtime-angular-ngrx/vertx-request-response.png\",\n          alt: \"Vertx Request Response\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsxs(_components.em, {\n          children: [\"Source: \", _jsx(_components.a, {\n            href: \"https://www.slideshare.net/RedHatDevelopers/vertx-microservices-were-never-so-easy-clement-escoffier\",\n            children: \"https://www.slideshare.net/Red­Hat­De­vel­op­ers/vertx-​microservices-were-never-so-easy-clement-escoffier\"\n          })]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Here is an ex­tract of the cor­re­spond­ing code (from \", _jsx(_components.code, {\n          children: \"AppEventBusService\"\n        }), \"):\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-typescript\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"initializeCounter\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-params\"\n          }), \") {\\n    \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"this\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"eventBusService\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"send\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'counter::total'\"\n          }), \", body, \", _jsxs(_components.span, {\n            className: \"hljs-function\",\n            children: [\"(\", _jsx(_components.span, {\n              className: \"hljs-params\",\n              children: \"error, message\"\n            }), \") =>\"]\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Handle reply\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (message && message.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"body\"\n          }), \") {\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"let\"\n          }), \" localAction = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"CounterActions\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"ResetAction\"\n          }), \"();\\n            localAction.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"payload\"\n          }), \" = message.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"body\"\n          }), \"; \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Total value\"\n          }), \"\\n            \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"this\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"store\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"dispatch\"\n          }), \"(localAction);\\n        }\\n    });\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"actions-distribution-through-publishsubscribe\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#actions-distribution-through-publishsubscribe\"\n        }), \"Actions distribution through Publish/Subscribe\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Ac­tion dis­tri­b­u­tion/sync uses the \", _jsx(_components.strong, {\n          children: \"pub­lish/sub­scribe\"\n        }), \" pat­tern.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Counter ac­tions are pub­lished from the client to the event bus at the ad­dress \", _jsx(_components.strong, {\n          children: \"counter::ac­tions\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Any client that have sub­scribed to \", _jsx(_components.strong, {\n          children: \"counter::ac­tions\"\n        }), \" ad­dress will re­ceive the ac­tions and re­dis­patch them lo­cally to im­pact app states/re­duc­ers.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/images/blog/vertx-realtime-angular-ngrx/vertx-publish-subscribe.png\",\n          alt: \"Vertx Publish Subscribe\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsxs(_components.em, {\n          children: [\"Source: \", _jsx(_components.a, {\n            href: \"https://www.slideshare.net/RedHatDevelopers/vertx-microservices-were-never-so-easy-clement-escoffier\",\n            children: \"https://www.slideshare.net/Red­Hat­De­vel­op­ers/vertx-​microservices-were-never-so-easy-clement-escoffier\"\n          })]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Here is an ex­tract of the cor­re­spond­ing code (from \", _jsx(_components.code, {\n          children: \"AppEventBusService\"\n        }), \"):\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-typescript\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"publishAction\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"action: RemoteAction\"\n          }), \") {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (action.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"publishedByUser\"\n          }), \") {\\n        \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"console\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"error\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"This action has already been published\\\"\"\n          }), \");\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \";\\n    }\\n    action.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"publishedByUser\"\n          }), \" = \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"this\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"currentUser\"\n          }), \";\\n    \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"this\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"eventBusService\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"publish\"\n          }), \"(action.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"eventBusAddress\"\n          }), \", action);\\n}\\n\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"subscribeToActions\"\n          }), \"(\", _jsxs(_components.span, {\n            className: \"hljs-params\",\n            children: [\"eventBusAddress: \", _jsx(_components.span, {\n              className: \"hljs-built_in\",\n              children: \"string\"\n            })]\n          }), \") {\\n    \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"this\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"eventBusService\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"registerHandler\"\n          }), \"(eventBusAddress, \", _jsxs(_components.span, {\n            className: \"hljs-function\",\n            children: [\"(\", _jsx(_components.span, {\n              className: \"hljs-params\",\n              children: \"error, message\"\n            }), \") =>\"]\n          }), \" {\\n        \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Handle message from subscription\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (message.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"body\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"publishedByUser\"\n          }), \" === \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"this\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"currentUser\"\n          }), \") {\\n            \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Ignore action sent by current manager\"\n          }), \"\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \";\\n        }\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"let\"\n          }), \" localAction = message.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"body\"\n          }), \";\\n        \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"this\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"store\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"dispatch\"\n          }), \"(localAction);\\n    });\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The event bus pub­lish­ing logic is achieved through a sim­ple Ngrx Ef­fects. Any ac­tions that ex­tend \", _jsx(_components.code, {\n          children: \"RemoteAction\"\n        }), \" class will be pub­lished to the event bus.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-typescript\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Injectable\"\n          }), \"()\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"export\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"AppEventBusEffects\"\n          }), \" {\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"constructor\"\n          }), \"(\", _jsxs(_components.span, {\n            className: \"hljs-params\",\n            children: [_jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"private\"\n            }), \" actions$: Actions, \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"private\"\n            }), \" appEventBusService: AppEventBusService\"]\n          }), \") {}\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Listen to all actions and publish remote actions to account event bus\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Effect\"\n          }), \"({\", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"dispatch\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \"}) remoteAction$ = \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"this\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"actions$\"\n          }), \"\\n        .\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"filter\"\n          }), \"(\", _jsxs(_components.span, {\n            className: \"hljs-function\",\n            children: [_jsx(_components.span, {\n              className: \"hljs-params\",\n              children: \"action\"\n            }), \" =>\"]\n          }), \" action \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"instanceof\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"RemoteAction\"\n          }), \" && action.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"publishedByUser\"\n          }), \" == \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"undefined\"\n          }), \")\\n        .\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"do\"\n          }), \"(\", _jsxs(_components.span, {\n            className: \"hljs-function\",\n            children: [\"(\", _jsx(_components.span, {\n              className: \"hljs-params\",\n              children: \"action: RemoteAction\"\n            }), \") =>\"]\n          }), \" {\\n            \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"this\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"appEventBusService\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"publishAction\"\n          }), \"(action);\\n        });\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Effect\"\n          }), \"({\", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"dispatch\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \"}) login$ = \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"this\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"actions$\"\n          }), \"\\n        .\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"ofType\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"UserActionTypes\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"LOGIN\"\n          }), \")\\n        .\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"do\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-function\",\n            children: \"() =>\"\n          }), \" {\\n            \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"this\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"appEventBusService\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"connect\"\n          }), \"();\\n        });\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You can see all of this in ac­tion by lo­cally launch­ing the server and the client app in two sep­a­rate browser win­dows.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/images/blog/vertx-realtime-angular-ngrx/demo-app-screen.png\",\n          alt: \"Demo app screen\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.em, {\n          children: \"Bonus: the demo app also in­cludes user sta­tus (of­fline/on­line), based of the event bus con­nec­tion sta­tus.\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The counter state is shared and syn­chro­nized be­tween con­nected clients and each local ac­tion is dis­trib­uted in real-​time to other clients.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.strong, {\n          children: \"Mis­sion ac­com­plished!\"\n        })\n      }), \"\\n\", _jsx(Alert, {\n        info: true,\n        title: \"Typescript version of Vertx EventBus Client\",\n        children: _jsxs(_components.p, {\n          children: [\"The app uses our own Type­script ver­sion of the of­fi­cial JS \", _jsx(_components.a, {\n            href: \"https://github.com/vert-x3/vertx-bus-bower\",\n            children: \"Vertx Event­Bus Client\"\n          }), \". It can be found \", _jsx(_components.a, {\n            href: \"https://gist.github.com/benorama/93373c3c1c3574732d6cc1b4754aab9f\",\n            children: \"here\"\n          }), \", any feed­back, im­prove­ment sug­ges­tions are wel­come!\"]\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Time scheduling with Chime","category":"guides","authors":[{"name":"Lisi","github_id":"LisiLisenok"}],"summary":"Eclipse Vert.x executes periodic and delayed actions with periodic and one-shot timers. Chime is a time scheduler verticle that works on the Vert.x event bus."},"date":"2017-05-09","slug":"time-scheduling-with-chime"},"nextPost":{"meta":{"title":"Dynamic Routing in Serverless Microservice with Vert.x Event Bus","category":"guides","authors":[{"name":"Rowell Belen","github_id":"bytekast"}],"summary":"The Serverless Framework has become the de facto toolkit for building and deploying serverless functions or applications."},"date":"2017-04-14","slug":"dynamic-routing-in-serverless-microservice-with-vert-x-event-bus"},"relatedPosts":[{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"},{"meta":{"title":"Easy SSO for Vert.x with Keycloak","category":"guides","authors":[{"name":"Thomas Darimont","github_id":"thomasdarimont"}],"summary":"In this blog post, you'll learn how to implement Single Sign-on with OpenID Connect and how to use Keycloak together with Eclipse Vert.x."},"date":"2020-03-16","slug":"easy-sso-for-vert-x-with-keycloak"}]},"__N_SSG":true}