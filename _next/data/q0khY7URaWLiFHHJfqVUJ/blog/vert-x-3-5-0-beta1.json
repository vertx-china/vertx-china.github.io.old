{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Vert.x 3.5.0.Beta1","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"It's summer time and we have just released Vert.x 3.5.0.Beta1!"},"date":"2017-08-10","slug":"vert-x-3-5-0-beta1","readingTime":{"text":"3 min read","minutes":2.075,"time":124500,"words":415},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      h2: \"h2\",\n      a: \"a\",\n      code: \"code\",\n      pre: \"pre\",\n      span: \"span\",\n      ul: \"ul\",\n      li: \"li\"\n    }, props.components), {Link} = _components;\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"It’s sum­mer time and we have just re­leased Vert.x 3.5.0.Beta1!\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"lets-go-rxjava2\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#lets-go-rxjava2\"\n        }), \"Let’s go RxJava2\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"First and fore­most this re­lease de­liv­ers the Rx­Java2 API with sup­port of its full range of types.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"In ad­di­tion of \", _jsx(_components.code, {\n          children: \"Single\"\n        }), \", Rx­i­fied APIs ex­pose also the\", _jsx(_components.code, {\n          children: \"Completable\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"Maybe\"\n        }), \" types\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// expose Handler<AsyncResult<Void>>\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"Completable\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"completable\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" server.rxClose();\\n\\ncompletable.subscribe(() -> System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"closed\\\"\"\n          }), \"));\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// expose Handler<AsyncResult<String>> where the result can be null\"\n          }), \"\\nMaybe<String> ipAddress = dnsClient.rxLookup(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"www.google.com\\\"\"\n          }), \");\\nipAddress.subscribe(\\n  value -> System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"resolved to \\\"\"\n          }), \" + value),\\n  err -> err.printStackTrace(),\\n  () -> System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"does not resolve\\\"\"\n          }), \"));\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Rx­Java aug­ments Vert.x streams with a \", _jsx(_components.code, {\n          children: \"toObservable()\"\n        }), \" method, Rx­Java2 adds the \", _jsx(_components.code, {\n          children: \"toFlowable()\"\n        }), \" method:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Flowable<Buffer> maps to a ReadStream<Buffer>\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// back-pressured stream\"\n          }), \"\\nFlowable<Buffer> flowable = asyncFile.toFlowable();\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// but we still can get an Observable<Buffer>\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// non back-pressured stream\"\n          }), \"\\nObservable<Buffer> flowable = asyncFile.toObservable();\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"What’s so dif­fer­ent be­tween \", _jsx(_components.code, {\n          children: \"Flowable\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"Observable\"\n        }), \" ? the for­mer han­dles back-​pressure, i.e the\\nsub­scriber can con­trol the flow of items and the later can not!!!\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can read the doc­u­men­ta­tion in the beta sec­tion of the \", _jsx(Link, {\n          href: \"/docs/3.5.0.Beta1/vertx-rx/java2/\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"docs\"\n          })\n        }), \"\\nor go straight to the \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/rxjava2-examples\",\n          children: \"ex­am­ples\"\n        })]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"mqtt-client\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#mqtt-client\"\n        }), \"MQTT Client\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In Vert.x 3.4 we added the MQTT server, 3.5 com­pletes the MQTT story with the MQTT client:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"MqttClient\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"mqttClient\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" MqttClient.create(vertx,\\n   \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"MqttClientOptions\"\n          }), \"()\\n     .setPort(BROKER_PORT)\\n     .setHost(BROKER_HOST)).connect(ar ->\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (ar.succeeded()) {\\n    System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Connected to a server\\\"\"\n          }), \");\\n\\n    mqttClient.publish(\\n      MQTT_TOPIC,\\n      Buffer.buffer(MQTT_MESSAGE),\\n      MqttQoS.AT_MOST_ONCE,\\n      \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \",\\n      \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \",\\n      s -> mqttClient.disconnect(d -> System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Disconnected from server\\\"\"\n          }), \")));\\n  } \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" {\\n    System.out.println(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Failed to connect to a server\\\"\"\n          }), \");\\n    ar.cause().printStackTrace();\\n  }\\n});\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can find MQTT client and server ex­am­ples \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/mqtt-examples\",\n          children: \"here\"\n        })]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"auth-handler-chaining\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#auth-handler-chaining\"\n        }), \"Auth handler chaining\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"There are times when you want to sup­port mul­ti­ple authN/authZ mech­a­nisms in a sin­gle ap­pli­ca­tion.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Vert.x Web sup­ports auth han­dlers \", _jsx(Link, {\n          href: \"/docs/3.5.0.Beta1/vertx-web/java/#_chaining_multiple_auth_handlers\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"chain­ing\"\n          })\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"ChainAuthHandler\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"chain\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" ChainAuthHandler.create();\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// add http basic auth handler to the chain\"\n          }), \"\\nchain.append(BasicAuthHandler.create(provider));\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// add form redirect auth handler to the chain\"\n          }), \"\\nchain.append(RedirectAuthHandler.create(provider));\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// secure your route\"\n          }), \"\\nrouter.route(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/secure/resource\\\"\"\n          }), \").handler(chain);\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// your app\"\n          }), \"\\nrouter.route(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/secure/resource\\\"\"\n          }), \").handler(ctx -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// do something...\"\n          }), \"\\n});\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"finally\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#finally\"\n        }), \"Finally\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This beta also pro­vides\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Vert.x Con­fig stores for Vault and Con­sul\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Up­grade to Hazel­cast 3.8.2\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"use-it\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#use-it\"\n        }), \"Use it!\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can use and con­sume it in your projects from Maven or Gra­dle as usual with the ver­sion \", _jsx(_components.code, {\n          children: \"3.5.0.Beta1\"\n        }), \" or read\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"the \", _jsx(Link, {\n            href: \"/docs/index-beta.html\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"doc­u­men­ta­tion pre­view\"\n            })\n          })]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"see the \", _jsx(_components.a, {\n            href: \"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1\",\n            children: \"ex­am­ples\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You can also down­load var­i­ous bi­na­ries from Maven Cen­tral:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1.tar.gz\",\n            children: \"base dis­trib\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-full.tar.gz\",\n            children: \"full dis­trib\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-docs.zip\",\n            children: \"docs zip\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-stack-scala.tar.gz\",\n            children: \"scala dis­trib\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"as usual feed­back is very im­por­tant to us and one goal of this beta re­lease is to let the com­mu­nity\\npro­vide early feed­back!\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The final is ex­pected at the be­gin­ning of Oc­to­ber.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Enjoy\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Introducing Vert.x MQTT client","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this article, we will see how to set up the new Vert.x MQTT client. An example project is available on GitHub."},"date":"2017-08-21","slug":"introducing-vert-x-mqtt-client"},"nextPost":{"meta":{"title":"OpenAPI (fka Swagger) 3 support in Eclipse Vert.x now in test stage!","category":"guides","authors":[{"name":"Francesco Guardiani","github_id":"slinkydeveloper"}],"summary":"As GSoC 2017's student, I'm working on an embedded support to OpenAPI 3 standard inside Eclipse Vert.x framework. Now, after a lot of work, you can try it!"},"date":"2017-07-04","slug":"openapi-fka-swagger-3-support-in-eclipse-vert-x-now-in-test-stage"},"relatedPosts":[{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"},{"meta":{"title":"Combine vert.x and mongo to build a giant","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This blog post is part of the introduction to Vert.x series. We are now going to replace this JDBC client by the vertx-mongo-client, and thus connect to a Mongo database."},"date":"2015-11-30","slug":"combine-vert-x-and-mongo-to-build-a-giant"},{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"}]},"__N_SSG":true}