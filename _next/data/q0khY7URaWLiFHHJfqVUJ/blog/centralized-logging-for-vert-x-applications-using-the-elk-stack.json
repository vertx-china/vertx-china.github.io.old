{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Centralized logging for Vert.x applications using the ELK stack","category":"guides","authors":[{"name":"Ricardo Hernandez","github_id":"ricardohmon"}],"summary":"This post entry describes a solution to achieve centralized logging of Vert.x applications using the ELK stack (Logstash, Elasticsearch, and Kibana)."},"date":"2016-09-08","slug":"centralized-logging-for-vert-x-applications-using-the-elk-stack","readingTime":{"text":"11 min read","minutes":10.45,"time":627000,"words":2090},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      h2: \"h2\",\n      img: \"img\",\n      h3: \"h3\",\n      code: \"code\",\n      em: \"em\",\n      pre: \"pre\",\n      span: \"span\",\n      br: \"br\",\n      ul: \"ul\",\n      li: \"li\"\n    }, props.components), {Link} = _components;\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [\"This post entry de­scribes a so­lu­tion to achieve cen­tral­ized log­ging of Vert.x ap­pli­ca­tions using the \", _jsx(_components.a, {\n          href: \"https://www.elastic.co/webinars/introduction-elk-stack\",\n          children: \"ELK stack\"\n        }), \", a set of tools in­clud­ing Logstash, Elas­tic­search, and Kibana that are well known to work to­gether seam­lessly.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"preamble\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#preamble\"\n        }), \"Preamble\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"This post was writ­ten in con­text of the project ti­tled “\", _jsx(_components.a, {\n          href: \"https://summerofcode.withgoogle.com/projects/#4858492141699072\",\n          children: \"De­vOps tool­ing for Vert.x ap­pli­ca­tions\"\n        }), \"”, one of the Vert.x projects tak­ing place dur­ing the 2016 edi­tion of \", _jsx(_components.a, {\n          href: \"https://summerofcode.withgoogle.com/about/\",\n          children: \"Google Sum­mer of Code\"\n        }), \", a pro­gram that aims to bring to­gether stu­dents with open source or­ga­ni­za­tions, in order to help them to gain ex­po­sure to soft­ware de­vel­op­ment prac­tices and real-​world chal­lenges.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"introduction\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#introduction\"\n        }), \"Introduction\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Cen­tral­ized log­ging is an im­por­tant topic while build­ing a Mi­croser­vices ar­chi­tec­ture and it is a step for­ward to adopt­ing the De­vOps cul­ture. Hav­ing an over­all so­lu­tion par­ti­tioned into a set of ser­vices dis­trib­uted across the In­ter­net can rep­re­sent a chal­lenge when try­ing to mon­i­tor the log out­put of each of them, hence, a tool that helps to ac­com­plish this re­sults very help­ful.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"overview\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#overview\"\n        }), \"Overview\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"As shown in the di­a­gram below, the gen­eral cen­tral­ized log­ging so­lu­tion com­prises two main el­e­ments: the ap­pli­ca­tion server, which runs our Vert.x ap­pli­ca­tion; and a sep­a­rate server, host­ing the ELK stack. Both el­e­ments are linked by File­beat, a highly con­fig­urable tool ca­pa­ble of ship­ping our ap­pli­ca­tion logs to the Logstash in­stance, i.e., our gate­way to the ELK stack.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/images/blog/centralized-logging-using-elk/elk-overview.svg\",\n          alt: \"Overview of centralized logging with ELK\"\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"app-logging-configuration\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#app-logging-configuration\"\n        }), \"App logging configuration\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The ap­proach de­scribed here is based on a File­beat + Logstash con­fig­u­ra­tion, that means first we need to make sure our app logs to a file, whose records will be shipped to Logstash by File­beat. Luck­ily, Vert.x pro­vides the means to \", _jsx(Link, {\n          href: \"/docs/vertx-core/java/#_logging\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"con­fig­ure\"\n          })\n        }), \" al­ter­na­tive log­ging frame­works (e.g., Log4j, Log4j2 and SLF4J) be­sides the de­fault JUL log­ging. How­ever, we can use File­beat in­de­pen­dently of the log­ging frame­work cho­sen.\"]\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"log4j-logging\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#log4j-logging\"\n        }), \"Log4j Logging\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The demo that ac­com­pa­nies this post re­lies on Log4j2 as the log­ging frame­work. We in­structed Vert.x to use this frame­work fol­low­ing the \", _jsx(Link, {\n          href: \"/docs/vertx-core/java/#_logging\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"guide­lines\"\n          })\n        }), \" and we made sure our log­ging calls are made asyn­chro­nous, since we don’t want them to block our ap­pli­ca­tion. For this pur­pose, we opted for the \", _jsx(_components.code, {\n          children: \"AsyncAppender\"\n        }), \" and this was in­cluded in the Log4J con­fig­u­ra­tion to­gether with the log out­put for­mat de­scribed in a XML con­fig­u­ra­tion avail­able in the ap­pli­ca­tion’s \", _jsx(_components.em, {\n          children: \"Re­source\"\n        }), \" folder.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Configuration\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Appenders\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"RollingFile\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"name\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"vertx_logs\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"append\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"true\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"fileName\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"/var/log/vertx.log\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"filePattern\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"/var/log/vertx/$${date:yyyy-MM}/vertx-%d{MM-dd-yyyy}-%i.log.gz\\\"\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"PatternLayout\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"pattern\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"%d{ISO8601} %-5p %c:%L - %m%n\\\"\"\n            }), \" />\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"RollingFile\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Async\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"name\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"vertx_async\\\"\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"AppenderRef\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ref\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"vertx_logs\\\"\"\n            }), \"/>\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Async\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Appenders\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Loggers\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Root\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"level\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"DEBUG\\\"\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"AppenderRef\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ref\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"vertx_async\\\"\"\n            }), \" />\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Root\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Loggers\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Configuration\"\n            }), \">\"]\n          }), \"\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"filebeat-configuration\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#filebeat-configuration\"\n        }), \"Filebeat configuration\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Now that we have con­fig­ured the log out­put of our Vert.x ap­pli­ca­tion to be stored in the file sys­tem, we del­e­gate to File­beat the task of for­ward­ing the logs to the Logstash in­stance. File­beat can be con­fig­ured through a YAML file con­tain­ing the logs out­put lo­ca­tion and the pat­tern to in­ter­pret mul­ti­line logs (i.e., stack traces). Also, the Logstash out­put plug­in is con­fig­ured with the host lo­ca­tion and a se­cure con­nec­tion is en­forced using the cer­tifi­cate from the ma­chine host­ing Logstash. We set the \", _jsx(_components.code, {\n          children: \"document_type\"\n        }), \" to the type of in­stance that this log be­longs to, which could later help us while in­dex­ing our logs in­side Elas­tic­search.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-yaml\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"filebeat:\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"prospectors:\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-bullet\",\n            children: \"-\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"document_type:\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"trader_dashboard\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"paths:\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-bullet\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"/var/log/vertx.log\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"multiline:\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"pattern:\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"^[0-9]+\\\"\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"negate:\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"match:\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"after\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"output:\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"logstash:\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"enabled:\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"hosts:\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-bullet\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"elk:5044\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"timeout:\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"15\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"tls:\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"insecure:\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"certificate_authoritites:\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-bullet\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"/etc/pki/tls/certs/logstash-beats.crt\"\n          }), \"\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"elk-configuration\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#elk-configuration\"\n        }), \"ELK configuration\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"To take fully ad­van­tage of the ELK stack with re­spect to Vert.x and our app logs, we need to con­fig­ure each of its in­di­vid­ual com­po­nents, namely Logstash, Elas­tic­search and Kibana.\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"logstash\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#logstash\"\n        }), \"Logstash\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Logstash is the com­po­nent within the ELK stack that is in charge of ag­gre­gat­ing the logs from each of the sources and for­ward­ing them to the Elas­tic­search in­stance.\", _jsx(_components.br, {}), \"\\n\", \"Con­fig­ur­ing Logstash is straight­for­ward with the help of the spe­cific input and out­put plu­g­ins for Beats and Elas­tic­search, re­spec­tively.\\nIn the pre­vi­ous sec­tion we men­tioned that File­beat could be eas­ily cou­pled with Logstash. Now, we see that this can be done by just spec­i­fy­ing \", _jsx(_components.code, {\n          children: \"Beat\"\n        }), \" as the input plug­in and set the pa­ra­me­ters needed to be reached by our ship­pers (lis­ten­ing port, ssl key and cer­tifi­cate lo­ca­tion).\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-bash\",\n          children: [\"input {\\n  beats {\\n    port => 5044\\n    ssl => \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          }), \"\\n    ssl_certificate => \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/etc/pki/tls/certs/logstash-beats.crt\\\"\"\n          }), \"\\n    ssl_key => \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/etc/pki/tls/private/logstash-beats.key\\\"\"\n          }), \"\\n  }\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Now that we are ready to re­ceive logs from the app, we can use Logstash fil­ter­ing ca­pa­bil­i­ties to spec­ify the for­mat of our logs and ex­tract the fields so they can be in­dexed more ef­fi­ciently by Elas­tic­search.\", _jsx(_components.br, {}), \"\\n\", \"The \", _jsx(_components.code, {\n          children: \"grok\"\n        }), \" fil­ter­ing plug­in comes handy in this sit­u­a­tion. This plug­in al­lows to de­clare the logs for­mat using pre­de­fined and cus­tomized pat­terns based in reg­u­lar ex­pres­sions al­low­ing to de­clare new fields from the in­for­ma­tion ex­tracted from each log line. In the fol­low­ing block, we in­struct Logstash to rec­og­nize our Log4j pat­tern in­side a \", _jsx(_components.code, {\n          children: \"message\"\n        }), \" field, which con­tains the log mes­sage shipped by File­beat. After that, the \", _jsx(_components.code, {\n          children: \"date\"\n        }), \" fil­ter­ing plug­in parses the \", _jsx(_components.code, {\n          children: \"timestamp\"\n        }), \" field ex­tracted in the pre­vi­ous step and re­places it for the one set by File­beat after read­ing the log out­put file.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-bash\",\n          children: [\"filter {\\n  grok {\\n    break_on_match => \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \"\\n    match =>  [ \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"message\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"%{LOG4J}\\\"\"\n          }), \"]\\n  }\\n  \", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"date\"\n          }), \"{\\n    match => [ \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"timestamp_string\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"ISO8601\\\"\"\n          }), \"]\\n    remove_field => [ \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"timestamp_string\\\"\"\n          }), \" ]\\n  }\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The Log4j pat­tern is not in­cluded within the Logstash con­fig­u­ra­tion, how­ever, we can spec­ify it using pre­de­fined data for­mats shipped with Logstash and adapt it to the spe­cific log for­mats re­quired in our ap­pli­ca­tion, as shown next.\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-ruby\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"# Pattern to match our Log4j format\"\n          }), \"\\nSPACING (\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"?:\"\n          }), \"[\\\\s]+)\\nLOGGER (\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"?:\"\n          }), \"[a-zA-Z\", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"$_\"\n          }), \"][a-zA-Z\", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"$_0\"\n          }), \"-\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"9\"\n          }), \"]*\\\\.)*[a-zA-Z\", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"$_\"\n          }), \"][a-zA-Z\", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"$_0\"\n          }), \"-\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"9\"\n          }), \"]*\\nLINE \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"%{INT}\"\n          }), \"?\\nLOG4J \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"%{TIMESTAMP_ISO8601:timestamp_string}\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"%{LOGLEVEL:log_level}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"%{SPACING}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"%{LOGGER:logger_name}\"\n          }), _jsxs(_components.span, {\n            className: \"hljs-symbol\",\n            children: [\":\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"%{LINE:loc_line}\"\n            })]\n          }), \" - \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"%{JAVALOGMESSAGE:log_message}\"\n          }), \"\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Fi­nally, we take a look at Logstash’s out­put con­fig­u­ra­tion. This sim­ply points to our elas­tic­search in­stance, in­structs it to pro­vide a list of all clus­ter nodes (\", _jsx(_components.code, {\n          children: \"sniffing\"\n        }), \"), de­fines the name pat­tern for our in­dices, as­signs the doc­u­ment type ac­cord­ing to the meta­data com­ing from File­beat, and al­lows to de­fine a cus­tom index tem­plate for our data.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-ini\",\n          children: [\"output {\\n  elasticsearch {\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"hosts\"\n          }), \" => [\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"localhost\\\"\"\n          }), \"]\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"sniffing\"\n          }), \" => \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"manage_template\"\n          }), \" => \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"index\"\n          }), \" => \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"%{[@metadata][beat]}-%{+YYYY.MM.dd}\\\"\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"document_type\"\n          }), \" => \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"%{[@metadata][type]}\\\"\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"template\"\n          }), \" => \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/etc/filebeat/vertx_app_filebeat.json\\\"\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"template_overwrite\"\n          }), \" => \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          }), \"\\n  }\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"elasticsearch\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#elasticsearch\"\n        }), \"Elasticsearch\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Elas­tic­search is the cen­tral com­po­nent that en­ables the ef­fi­cient in­dex­ing and real-​time search ca­pa­bil­i­ties of the stack. To take the most ad­van­tage of Elas­tic­search, we can pro­vide an in­dex­ing tem­plate of our in­com­ing logs, which can help to op­ti­mize the data stor­age and match the queries is­sued by Kibana at a later point.\", _jsx(_components.br, {}), \"\\n\", \"In the ex­am­ple below, we see an index tem­plate that would be ap­plied to any index match­ing the pat­tern \", _jsx(_components.code, {\n          children: \"filebeat-*\"\n        }), \". Ad­di­tion­ally, we de­clare our new log fields \", _jsx(_components.code, {\n          children: \"type\"\n        }), \", \", _jsx(_components.code, {\n          children: \"host\"\n        }), \", \", _jsx(_components.code, {\n          children: \"log_level\"\n        }), \", \", _jsx(_components.code, {\n          children: \"logger_name\"\n        }), \", and \", _jsx(_components.code, {\n          children: \"log_message\"\n        }), \", which are set as \", _jsx(_components.code, {\n          children: \"not_analyzed\"\n        }), \" ex­cept for the last two that are set as \", _jsx(_components.code, {\n          children: \"analyzed\"\n        }), \" al­low­ing to per­form queries based on reg­u­lar ex­pres­sions and not re­stricted to query the full text.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-json\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"mappings\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"_default_\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"_all\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"enabled\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"true\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"norms\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"enabled\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"false\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"dynamic_templates\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"[\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"template1\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \"\\n            \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"mapping\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \"\\n              \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"doc_values\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"true\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n              \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"ignore_above\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1024\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n              \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"index\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"not_analyzed\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n              \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"type\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"{dynamic_type}\\\"\"\n          }), \"\\n            \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n            \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"match\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"*\\\"\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"properties\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"@timestamp\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"type\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"date\\\"\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"offset\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"type\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"long\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"doc_values\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"true\\\"\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"type\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"type\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"string\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"index\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"not_analyzed\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"host\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"type\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"string\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"index\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"not_analyzed\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"log_level\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"type\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"string\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"index\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"not_analyzed\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"logger_name\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"type\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"string\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"index\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"analyzed\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"log_message\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"type\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"string\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"index\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"analyzed\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"settings\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"{\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"index.refresh_interval\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"5s\\\"\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \",\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"\\\"template\\\"\"\n          }), _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"filebeat-*\\\"\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"kibana\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#kibana\"\n        }), \"Kibana\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Al­though we could fetch all our logs from Elas­tic­search through its API, Kibana is a pow­er­ful tool that al­lows a more friendly query and vi­su­al­iza­tion.\\nBe­sides the op­tion to query our data through the avail­able in­dexed field names and search boxes al­low­ing typ­ing spe­cific queries, Kibana al­lows cre­at­ing our own \", _jsx(_components.em, {\n          children: \"Vi­su­al­iza­tions\"\n        }), \" and \", _jsx(_components.em, {\n          children: \"Dash­boards\"\n        }), \". Com­bined, they rep­re­sent a pow­er­ful way to dis­play data and gain in­sight in a cus­tomized man­ner.\\nThe ac­com­pa­nied demo ships with a cou­ple of sam­ple dash­boards and vi­su­al­iza­tions that take ad­van­tage of the log fields that we spec­i­fied in our index tem­plate and throw valu­able in­sight. This in­cludes: vi­su­al­iz­ing the num­ber of log mes­sages re­ceived by ELK, ob­serve the pro­por­tion of mes­sages that each log source pro­duces, and di­rectly find out the sources of error logs.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/images/blog/centralized-logging-using-elk/kibana-dashboard.png\",\n          alt: \"Kibana Dashboard\\\" width=\\\"550\"\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"log-shipping-challenge\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#log-shipping-challenge\"\n        }), \"Log shipping challenge\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The so­lu­tion pre­sented here re­lied on File­beat to ship log data to Logstash. How­ever, if you are fa­mil­iar with the Log4j frame­work you may be aware that there ex­ists a \", _jsx(_components.em, {\n          children: \"Sock­e­tAp­pen­der\"\n        }), \" that al­lows to write log events di­rectly to a re­mote server using a TCP con­nec­tion. Al­though in­clud­ing the File­beat + Logstash com­bi­na­tion  may sound an un­nec­es­sary over­head to the log­ging pipeline, they pro­vide a num­ber of ben­e­fits in com­par­i­son to the Log4j socket al­ter­na­tive:\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"The Sock­e­tAp­pen­der re­lies on the spe­cific se­ri­al­iza­tion of Log4j’s \", _jsx(_components.em, {\n            children: \"Lo­gEvent\"\n          }), \" ob­jects, which is no an in­ter­change­able for­mat as JSON, which is used by the Beats so­lu­tion. Al­though there are \", _jsx(_components.a, {\n            href: \"https://github.com/majikthys/log4j2-logstash-jsonevent-layout\",\n            children: \"at­tempts\"\n          }), \" to out­put the logs in a JSON for­mat for Logstash, it doesn’t sup­port mul­ti­line logs, which re­sults in mes­sages being split into dif­fer­ent events by Logstash. On the other hand, there is no of­fi­cial nor sta­ble \", _jsx(_components.a, {\n            href: \"https://www.elastic.co/guide/en/logstash/current/input-plugins.html\",\n            children: \"input plugin\"\n          }), \" for Log4j ver­sion 2.\"]\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"While en­abling Log4j’s async log­ging mode in an ap­pli­ca­tion del­e­gates log­ging op­er­a­tions to sep­a­rate threads, given their co­ex­is­tence in the same JVM there is still the risk of data loss in case of a sud­den JVM ter­mi­na­tion with­out proper log chan­nel clos­ing.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"File­beat is a data ship­per de­signed to deal with many con­straints that arise in dis­trib­uted en­vi­ron­ments in a re­li­able man­ner, there­fore it pro­vides op­tions to tai­lor and scale this op­er­a­tion to our needs: the pos­si­bil­ity to load bal­ance be­tween mul­ti­ple Logstash in­stances, spec­ify the num­ber of si­mul­ta­ne­ous File­beat work­ers that ship log files, and spec­ify a com­pres­sion level in order to re­duce the con­sumed band­width. Be­sides that, logs can be shipped in spe­cific batch sizes, with max­i­mum amount of re­tries, and spec­i­fy­ing a con­nec­tion time­out.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Lastly, al­though File­beat can for­ward logs di­rectly to Elas­tic­search, using Logstash as an in­ter­me­di­ary of­fers the pos­si­bil­ity to col­lect logs from di­verse sources (e.g., sys­tem met­rics).\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"demo\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#demo\"\n        }), \"Demo\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"This post is ac­com­pa­nied by a demo based on the Vert.x Mi­croser­vices \", _jsx(_components.a, {\n          href: \"http://vertx-lab.dynamis-technologies.com/\",\n          children: \"work­shop\"\n        }), \", where each of them is shipped in a Docker con­tainer sim­u­lat­ing a dis­trib­uted sys­tem com­posed of in­de­pen­dent ad­dress­able nodes.\", _jsx(_components.br, {}), \"\\n\", \"Also, the ELK stack is pro­vi­sioned using a pre­con­fig­ured Docker image by \", _jsx(_components.a, {\n          href: \"https://github.com/spujadas\",\n          children: \"Sébastien Pu­jadas\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Fol­low­ing the guide­lines in this post, this demo con­fig­ures each of the Mi­croser­vices of the work­shop, sets up a File­beat process on each of them to ship the logs to a cen­tral con­tainer host­ing the ELK stack.\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"installation\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#installation\"\n        }), \"Installation\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In order to run this demo, it is nec­es­sary to have Docker in­stalled, then pro­ceed with:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"Cloning or down­load­ing the demo \", _jsx(_components.a, {\n            href: \"https://github.com/ricardohmon/vertx-elk\",\n            children: \"repos­i­tory\"\n          }), \".\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Sep­a­rately, ob­tain­ing the source code of the \", _jsx(_components.a, {\n            href: \"https://github.com/ricardohmon/vertx-microservices-workshop/tree/elk-demo\",\n            children: \"branch\"\n          }), \" of the Mi­croser­vices work­shop adapted for this demo.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"building-the-example\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#building-the-example\"\n        }), \"Building the example\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The Docker im­ages be­long­ing to the Vert.x Mi­croser­vices work­shop need to be built sep­a­rately to this project be­fore this project can be launched.\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"building-the-vertx-microservices-workshop-docker-images\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#building-the-vertx-microservices-workshop-docker-images\"\n        }), \"Building the Vert.x Microservices workshop Docker images.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Build the \", _jsx(_components.em, {\n          children: \"root\"\n        }), \" project and the \", _jsx(_components.em, {\n          children: \"Trader Dash­board\"\n        }), \" fol­lowed by each of the mod­ules con­tained in the so­lu­tion folder. Issue the fol­low­ing com­mands for this:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-bash\",\n          children: [\"mvn clean install\\n\", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"cd\"\n          }), \" trader-dashboard\\nmvn package docker:build\\n\", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"cd\"\n          }), \" ../solution/audit-service\\nmvn package docker:build\\n\", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"cd\"\n          }), \" ../compulsive-traders\\nmvn package docker:build\\n\", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"cd\"\n          }), \" ../portfolio-service\\nmvn package docker:build\\n\", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"cd\"\n          }), \" ../quote-generator/\\nmvn package docker:build\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"running-the-example\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#running-the-example\"\n        }), \"Running the example\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"After build­ing the pre­vi­ous im­ages, build and run the ex­am­ple in \", _jsx(_components.code, {\n          children: \"vertx-elk\"\n        }), \" using the fol­low­ing com­mand:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"hljs\",\n          children: \"docker-compose up\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"the-demo\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#the-demo\"\n        }), \"The demo\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You can watch the demo in ac­tion in the fol­low­ing screen­cast:\"\n      }), \"\\n\", _jsx(\"div\", {\n        className: \"youtube-embed\",\n        children: _jsx(\"iframe\", {\n          src: \"https://www.youtube.com/embed/8P-MgXSujes\",\n          frameBorder: \"0\",\n          allowFullScreen: true\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"conclusion\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#conclusion\"\n        }), \"Conclusion\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The ELK stack is a pow­er­ful set of tools that ease the ag­gre­ga­tion of logs com­ing from dis­trib­uted ser­vices into a cen­tral server. Its main pil­lar, Elas­tic­search, pro­vides the in­dex­ing and search ca­pa­bil­i­ties of our log data. Also, it is ac­com­pa­nied by the con­ve­nient input/out­put com­po­nents: Logstash, which can be flex­i­bly con­fig­ured to ac­cept dif­fer­ent data sources; and Kibana, which can be cus­tomized to present the in­for­ma­tion in the most con­ve­nient way.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Logstash has been de­signed to work seam­lessly with File­beat, the log ship­per which rep­re­sents a ro­bust so­lu­tion that can be adapted to our ap­pli­ca­tions with­out hav­ing to make \", _jsx(_components.em, {\n          children: \"sig­nif­i­cant\"\n        }), \" changes to our ar­chi­tec­ture. In ad­di­tion, Logstash can ac­cept var­ied types of sources, fil­ter the data, and process it be­fore de­liv­er­ing to Elas­tic­search. This flex­i­bil­ity comes with the price of hav­ing extra el­e­ments in our log ag­gre­ga­tion pipeline, which can rep­re­sent an in­crease of pro­cess­ing over­head or a point-​of-failure. This ad­di­tional over­head could be avoided if an ap­pli­ca­tion would be ca­pa­ble of de­liv­er­ing its log out­put di­rectly to Elas­tic­search.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Happy log­ging!\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Vert.x 3.3.3 is released!","category":"releases","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"We have just released Vert.x 3.3.3, a bug fix release of Vert.x 3.3.x."},"date":"2016-09-12","slug":"vert-x-3-3-3-is-released"},"nextPost":{"meta":{"title":"Vert.x Blueprint Tutorials","category":"guides","authors":[{"name":"Eric Zhao","github_id":"sczyh30"}],"summary":"The Vert.x Blueprint project aims to provide guidelines to Vert.x users to implement various applications such as message-based applications and microservices."},"date":"2016-09-01","slug":"vert-x-blueprint-tutorials"},"relatedPosts":[{"meta":{"title":"Getting started with new fabric8 Vert.x Maven Plugin","category":"guides","authors":[{"name":"Kamesh Sampath","github_id":"kameshsampath"}],"summary":"The all new fabric8 Vert.x Maven Plugin allows you to setup, package, run, start, stop and redeploy easily with a very little configuration resulting in a less verbose pom.xml."},"date":"2016-12-07","slug":"getting-started-with-new-fabric8-vert-x-maven-plugin"},{"meta":{"title":"Vert.x featuring Continuous Delivery with Jenkins and Ansible","category":"guides","authors":[{"name":"Ricardo Hernandez","github_id":"ricardohmon"}],"summary":"This blog entry describes an approach to adopt Continuous Delivery for Vert.x applications using Jenkins and Ansible by taking advantage of the Jenkins Job DSL and Ansible plugins."},"date":"2016-09-28","slug":"vert-x-featuring-continuous-delivery-with-jenkins-and-ansible"},{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"}]},"__N_SSG":true}