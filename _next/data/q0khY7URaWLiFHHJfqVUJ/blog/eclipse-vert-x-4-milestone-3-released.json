{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Eclipse Vert.x 4 milestone 3 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The next milestone release of Vert.x 4 aims to provide a reliable distribution of the current development for people who want to try it and provide feedback."},"date":"2019-09-19","slug":"eclipse-vert-x-4-milestone-3-released","readingTime":{"text":"5 min read","minutes":4.325,"time":259500,"words":865},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      h2: \"h2\",\n      a: \"a\",\n      pre: \"pre\",\n      code: \"code\",\n      span: \"span\",\n      ul: \"ul\",\n      li: \"li\",\n      img: \"img\"\n    }, props.components), {Link} = _components;\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"We are ex­tremely pleased to an­nounce the third 4.0 mile­stone re­lease of Eclipse Vert.x .\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Vert.x 4 is the evo­lu­tion of the Vert.x 3.x se­ries that will bring key fea­tures to Vert.x.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This re­lease aims to pro­vide a re­li­able dis­tri­b­u­tion of the cur­rent de­vel­op­ment of Vert.x 4 for peo­ple who\\nwant to try it and pro­vide feed­back.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"futurisation\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#futurisation\"\n        }), \"Futurisation\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Vert.x 4 ex­tends the 3.x call­back asyn­chro­nous model to a fu­ture/call­back hy­brid model.\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"interface\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"NetClient\"\n          }), \" {\\n\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Since 3.0\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"connect\"\n          }), _jsxs(_components.span, {\n            className: \"hljs-params\",\n            children: [\"(\", _jsx(_components.span, {\n              className: \"hljs-type\",\n              children: \"int\"\n            }), \" port, String host, Handler<AsyncResult<NetSocket>> handler)\"]\n          }), \";\\n\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// New in 4.0\"\n          }), \"\\n  Future<NetSocket> \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"connect\"\n          }), _jsxs(_components.span, {\n            className: \"hljs-params\",\n            children: [\"(\", _jsx(_components.span, {\n              className: \"hljs-type\",\n              children: \"int\"\n            }), \" port, String host)\"]\n          }), \";\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This third mile­stone makes progress and coverts the fol­low­ing stack mod­ules:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"vertx-​service-discovery\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"vertx-​config\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"vertx-​circuit-breaker\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"data-object-mapping-for-service-proxies\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#data-object-mapping-for-service-proxies\"\n        }), \"Data object mapping for service proxies\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Vert.x 3 ser­vice prox­ies is a light­weight layer on top of Vert.x Event-​Bus pro­vid­ing typed con­tracts.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"One can eas­ily cre­ate a ser­vice on top of the Event-​Bus.\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@VertxGen\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"interface\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"DateService\"\n          }), \" {\\n\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// callback the handler with the current date\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"date\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(Handler<AsyncResult<String>> handler)\"\n          }), \"\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Ser­vice prox­ies re­quest/re­sponse pay­load are of type JSON.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Of course ser­vice prox­ies allow to map beans to JSON using data ob­jects but this comes with two caveats\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"only JSON ob­ject can be mapped\"\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"the data ob­ject must be a \", _jsx(_components.code, {\n            children: \"@DataObject\"\n          }), \" an­no­tated bean with a \", _jsx(_components.code, {\n            children: \"toJson()\"\n          }), \" method and a JSON ob­ject con­struc­tor\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In Vert.x 4 we ex­tend the data ob­ject sup­port to any Java class and any JSON type, e.g in this ex­am­ple\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@VertxGen\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"interface\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"DateService\"\n          }), \" {\\n\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// encode the date with iso date format\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Mapper\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"static\"\n          }), \" String \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"toJson\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(ZonedDateTime value)\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" ZonedDateTime.format(value);\\n  }\\n\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// decode the date with iso date format\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Mapper\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"static\"\n          }), \" ZonedDateTime \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"fromJson\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(String value)\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" ZonedDateTime.parse(value);\\n  }\\n\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// callback the handler with the current date\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"date\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(Handler<AsyncResult<ZonedDateTime>> handler)\"\n          }), \"\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The gen­er­ated code will then use these map­pers to en­code and de­code JSON val­ues.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"For reusabil­ity map­pers can also be \", _jsx(_components.code, {\n          children: \"java.util.function.Function\"\n        }), \" in­stead, e.g\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Mapper\"\n          }), \" Function<String, ZonedDateTime) fromJson = ZonedDateTime::parse;\\n\", _jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Mapper\"\n          }), \" Function<ZonedDateTime, String> toJson = ZonedDateTime::toString;\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"mongo-client-gridfs\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#mongo-client-gridfs\"\n        }), \"Mongo client GridFS\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The client can store and re­trieve files and bi­nary data using Mon­goDB GridFS.\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"Future<String> fut = gridFsClient.uploadFile(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"file.name\\\"\"\n          }), \");\\n\\nfut.setHandler(res -> {\\n   \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (res.succeeded()) {\\n     \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"String\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"id\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" res.result();\\n     \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"//The ID of the stored object in Grid FS\"\n          }), \"\\n   } \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" {\\n     res.cause().printStackTrace();\\n   }\\n });\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The client can per­form the usual CRUD op­er­a­tions on files and also pro­vide bucket man­age­ment.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"vertx-web-utilities\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#vertx-web-utilities\"\n        }), \"Vert.x Web utilities\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"While the rout­ing con­text will allow you to ac­cess the un­der­ly­ing re­quest and re­sponse ob­jects, some­times it will be\\nmore pro­duc­tive if a few short­cuts would be present to help with com­mon tasks. A few helpers are present in\\nthe con­text to fa­cil­i­tate with this task.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Serve an “at­tach­ment”, an at­tach­ment is a re­sponse that will trig­ger the browser to open the re­sponse on the OS ap­pli­ca­tion\\ncon­fig­ured to han­dle a spe­cific mime type. Imag­ine you’re gen­er­at­ing a PDF:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"routingContext\\n  .attachment(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"weekly-report.pdf\\\"\"\n          }), \")\\n  .end(pdfBuffer);\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Per­form a redi­rect to a dif­fer­ent page or host. One ex­am­ple is to redi­rect to an HTTPS vari­ant of the ap­pli­ca­tion:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"routingContext.redirect(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"https://securesite.com/\\\"\"\n          }), \");\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Send a JSON re­sponse to the client:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// no need to specify the content type headers\"\n          }), \"\\nrc.json(\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"JsonObject\"\n          }), \"().put(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"hello\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"vert.x\\\"\"\n          }), \"));\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Sim­ple con­tent type check:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (routingContext.is(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"application/json\\\"\"\n          }), \")) {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// ...\"\n          }), \"\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Ver­ify if a re­quest is “fresh” with re­spect to the cache head­ers and the cur­rent val­ues of last mod­i­fied/ etag:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (rc.isFresh()) {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// client cache value is fresh perhaps we\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// can stop and return 304?\"\n          }), \"\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"other-changes\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#other-changes\"\n        }), \"Other changes\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Groovy has been sim­pli­fied in Vert.x 4 to re­move code gen­er­a­tion that was not re­ally needed in prac­tice\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"The orig­i­nal Redis client dep­re­cated in 3.7 has been re­moved re­placed by the new Redis client\"\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"JSON changes\", \"\\n\", _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"Jack­son data­bind is now an op­tional Maven de­pen­dency which means that ap­pli­ca­tions need to ex­plic­itly add this de­pen­dency to the class­path\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Spe­cific Jack­son util­ity meth­ods are moved to spe­cific Jack­son classes\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Vert.x can use an al­ter­na­tive im­ple­men­ta­tion than Jack­son for JSON en­cod­ing and JSON de­cod­ing\"\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"The fol­low­ing com­po­nents have reached their end of life and have been pruned\", \"\\n\", _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"MySQL / Post­greSQL async client re­placed by the Vert.x SQL Client (since 3.8)\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"AMQP bridge re­placed by the Vert.x AMQP Client (since 3.7)\"\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"ramping-up-to-vertx-4\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#ramping-up-to-vertx-4\"\n        }), \"Ramping up to Vert.x 4\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In­stead of de­vel­op­ing all new fea­tures ex­clu­sively in Vert.x 4, we in­tro­duce some of these fea­tures in the 3.x branch\\nso the com­mu­nity can ben­e­fit from them. The Vert.x 4 de­vel­op­ment focus on more fun­da­men­tal changes that can­not be done\\nin the 3.x se­ries.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/images/blog/vertx-4-milestone3-release/vertx-4-timeline.png\",\n          alt: \"Screenshot\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This is the third mile­stone of Vert.x 4, we aim to re­lease Vert.x 4 by the end of this year and you can of course\\nex­pect more mile­stones to out­line the progress of the ef­fort.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"finally\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#finally\"\n        }), \"Finally\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\",\n          children: \"dep­re­ca­tions and break­ing changes\"\n        }), \"\\ncan be found on the wiki.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"For this re­lease there are no Docker im­ages.,\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The re­lease ar­ti­facts have been de­ployed to \", _jsx(_components.a, {\n          href: \"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone3\",\n          children: \"Maven Cen­tral\"\n        }), \" and you can get the dis­tri­b­u­tion on \", _jsx(_components.a, {\n          href: \"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone3/\",\n          children: \"Maven Cen­tral\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can boot­strap a Vert.x 4.0.0-​milestone3 project using \", _jsx(_components.a, {\n          href: \"https://start.vertx.io\",\n          children: \"https://start.vertx.io\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The doc­u­men­ta­tion has been de­ployed on this pre­view web-​site \", _jsx(_components.a, {\n          href: \"https://vertx-ci.github.io/vertx-4-preview/docs/\",\n          children: \"https://vertx-​ci.github.io/vertx-​4-​preview/docs/\"\n        })]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"That’s it! Happy cod­ing and see you soon on our user or dev \", _jsx(Link, {\n          href: \"/community\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"chan­nels\"\n          })\n        }), \".\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.8.2","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"This version is a bug fix release of Vert.x 3.8.3, which addresses quite a few bugs reported by the community."},"date":"2019-10-07","slug":"eclipse-vert-x-3-8-2"},"nextPost":{"meta":{"title":"Eclipse Vert.x for Scala next steps","category":"news","authors":[{"name":"Jochen Mader","github_id":"codepitbull"}],"summary":"This blog post gives an overview of the current plans for the vertx-lang-scala module, in particular with respect to the upcoming Vert.x 4."},"date":"2019-08-30","slug":"eclipse-vert-x-for-scala-next-steps"},"relatedPosts":[{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"},{"meta":{"title":"Building services and APIs with AMQP 1.0","category":"guides","authors":[{"name":"Jakub Scholz","github_id":"scholzj"}],"summary":"Microservices and APIs are everywhere. Everyone talks about them, presentation slides are full of them ... some people are actually even building them."},"date":"2017-01-25","slug":"building-services-and-apis-with-amqp-1-0"}]},"__N_SSG":true}