{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x","readingTime":{"text":"10 min read","minutes":9.485,"time":569100,"words":1897},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      h2: \"h2\",\n      pre: \"pre\",\n      code: \"code\",\n      span: \"span\",\n      h3: \"h3\",\n      img: \"img\"\n    }, props.components), {Link} = _components;\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"The ex­pec­ta­tions of users for in­ter­ac­tiv­ity with web ap­pli­ca­tions have changed over the past few years.\\nUsers dur­ing bid­ding in auc­tion no longer want to press the re­fresh but­ton to check if the price\\nhas changed or the auc­tion is over. This made bid­ding dif­fi­cult and less fun.\\nIn­stead, they ex­pect to see the up­dates in ap­pli­ca­tion in real-​time.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"In this ar­ti­cle I want to show how to cre­ate a sim­ple ap­pli­ca­tion that pro­vides real-​time bid­ding.\\nWe will use Web­Sock­ets, \", _jsx(_components.a, {\n          href: \"https://github.com/sockjs/sockjs-client\",\n          children: \"SockJS\"\n        }), \" and Vert.x.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We will cre­ate a front-​end for fast bid­ding that com­mu­ni­cates with a micro-​service writ­ten in Java and based on Vert.x.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"what-are-websockets\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#what-are-websockets\"\n        }), \"What are Websockets?\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Web­Socket is asyn­chro­nous, bidi­rec­tional, full-​duplex pro­to­col that pro­vides a com­mu­ni­ca­tion chan­nel over a sin­gle TCP con­nec­tion.\\nWith the \", _jsx(_components.a, {\n          href: \"http://www.w3.org/TR/websockets/\",\n          children: \"Web­Socket API\"\n        }), \" it pro­vides bidi­rec­tional com­mu­ni­ca­tion be­tween the web­site and a re­mote server.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Web­Sock­ets solve many prob­lems which pre­vented the HTTP pro­to­col from being suit­able for use in mod­ern,\\nreal-​time ap­pli­ca­tions. Workarounds like polling are no longer needed, which sim­pli­fies ap­pli­ca­tion ar­chi­tec­ture.\\nWeb­Sock­ets do not need to open mul­ti­ple HTTP con­nec­tions, they pro­vide a re­duc­tion of un­nec­es­sary net­work traf­fic and re­duce la­tency.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"websocket-api-vs-sockjs\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#websocket-api-vs-sockjs\"\n        }), \"Websocket API vs SockJS\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Un­for­tu­nately, Web­Sock­ets are not sup­ported by all web browsers. How­ever, there are li­braries that pro­vide a fall­back\\nwhen Web­Sock­ets are not avail­able. One such li­brary is \", _jsx(_components.a, {\n          href: \"https://github.com/sockjs/sockjs-client\",\n          children: \"SockJS\"\n        }), \".\\nSockJS starts from try­ing to use the Web­Socket pro­to­col. How­ever, if this is not pos­si­ble,\\nit uses  a \", _jsx(_components.a, {\n          href: \"https://github.com/sockjs/sockjs-client#supported-transports-by-browser-html-served-from-http-or-https\",\n          children: \"va­ri­ety of browser-​specific trans­port pro­to­cols\"\n        }), \".\\nSockJS is a li­brary de­signed to work in all mod­ern browsers and in en­vi­ron­ments that do not sup­port Web­Socket pro­to­col,\\nfor in­stance be­hind re­stric­tive cor­po­rate proxy. SockJS pro­vides an API sim­i­lar to the stan­dard Web­Socket API.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"frontend-to-fast-bidding\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#frontend-to-fast-bidding\"\n        }), \"Frontend to fast bidding\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Auc­tion web page con­tains the bid­ding form and some sim­ple JavaScript which loads cur­rent price from the ser­vice,\\nopens an event bus con­nec­tion to the SockJS server and of­fers bid­ding.\\nHTML source code of sam­ple web page on which we bid might look like this:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-html\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h3\"\n            }), \">\"]\n          }), \"Auction 1\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h3\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"id\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"error_message\\\"\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"form\"\n            }), \">\"]\n          }), \"\\n    Current price:\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"span\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"id\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"current_price\\\"\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"span\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"for\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"my_bid_value\\\"\"\n            }), \">\"]\n          }), \"Your offer:\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"input\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"id\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"my_bid_value\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"type\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"text\\\"\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"input\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"type\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"button\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onclick\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"bid();\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"value\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"Bid\\\"\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n        Feed:\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"textarea\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"id\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"feed\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"rows\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"4\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"cols\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"50\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"readonly\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"textarea\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"form\"\n            }), \">\"]\n          }), \"\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"We use the \", _jsx(_components.code, {\n          children: \"vertx-eventbus.js\"\n        }), \" li­brary to cre­ate a con­nec­tion to the event bus.\\n\", _jsx(_components.code, {\n          children: \"vertx-eventbus.js\"\n        }), \" li­brary is a part of the Vert.x dis­tri­b­u­tion. \", _jsx(_components.code, {\n          children: \"vertx-eventbus.js\"\n        }), \" in­ter­nally uses SockJS li­brary\\nto send the data to the SockJS server. In the code snip­pet below we cre­ate an in­stance of the event bus.\\nThe pa­ra­me­ter to the con­struc­tor is the URI where to con­nect to the event bus.\\nThen we reg­is­ter the han­dler lis­ten­ing on ad­dress \", _jsx(_components.code, {\n          children: \"auction.<auction_id>\"\n        }), \". Each client has a pos­si­bil­ity of reg­is­ter­ing\\nat mul­ti­ple ad­dresses e.g. when bid­ding in the auc­tion 1234, they reg­is­ter on the ad­dress \", _jsx(_components.code, {\n          children: \"auction.1234\"\n        }), \" etc.\\nWhen data ar­rives in the han­dler, we change the cur­rent price and the bid­ding feed on the auc­tion’s web page.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-javascript\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"function\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"registerHandlerForUpdateCurrentPriceAndFeed\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-params\"\n          }), \") {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"var\"\n          }), \" eventBus = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"EventBus\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'http://localhost:8080/eventbus'\"\n          }), \");\\n    eventBus.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"onopen\"\n          }), \" = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"function\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-params\"\n          }), \") {\\n        eventBus.\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"registerHandler\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'auction.'\"\n          }), \" + auction_id, \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"function\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"error, message\"\n          }), \") {\\n            \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"document\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"getElementById\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'current_price'\"\n          }), \").\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"innerHTML\"\n          }), \" = \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"JSON\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"parse\"\n          }), \"(message.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"body\"\n          }), \").\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"price\"\n          }), \";\\n            \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"document\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"getElementById\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'feed'\"\n          }), \").\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"value\"\n          }), \" += \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'New offer: '\"\n          }), \" + \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"JSON\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"parse\"\n          }), \"(message.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"body\"\n          }), \").\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"price\"\n          }), \" + \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'\\\\n'\"\n          }), \";\\n        });\\n    }\\n};\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Any user at­tempt to bid gen­er­ates a PATCH Ajax re­quest\\nto the ser­vice with in­for­ma­tion about the new offer made at auc­tion (see \", _jsx(_components.code, {\n          children: \"bid()\"\n        }), \" func­tion).\\nOn the server side we pub­lish this in­for­ma­tion on the event bus to all clients reg­is­tered to an ad­dress.\\nIf you re­ceive an HTTP re­sponse sta­tus code other than \", _jsx(_components.code, {\n          children: \"200 (OK)\"\n        }), \", an error mes­sage is dis­played on the web page.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-javascript\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"function\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"bid\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-params\"\n          }), \") {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"var\"\n          }), \" newPrice = \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"document\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"getElementById\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'my_bid_value'\"\n          }), \").\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"value\"\n          }), \";\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"var\"\n          }), \" xmlhttp = (\", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"window\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"XMLHttpRequest\"\n          }), \") ? \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"XMLHttpRequest\"\n          }), \"() : \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"ActiveXObject\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Microsoft.XMLHTTP\\\"\"\n          }), \");\\n    xmlhttp.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"onreadystatechange\"\n          }), \" = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"function\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-params\"\n          }), \") {\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (xmlhttp.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"readyState\"\n          }), \" == \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"4\"\n          }), \") {\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (xmlhttp.\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"status\"\n          }), \" != \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"200\"\n          }), \") {\\n                \", _jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"document\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"getElementById\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'error_message'\"\n          }), \").\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"innerHTML\"\n          }), \" = \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'Sorry, something went wrong.'\"\n          }), \";\\n            }\\n        }\\n    };\\n    xmlhttp.\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"open\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"PATCH\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"http://localhost:8080/api/auctions/\\\"\"\n          }), \" + auction_id);\\n    xmlhttp.\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"setRequestHeader\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Content-Type\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"application/json\\\"\"\n          }), \");\\n    xmlhttp.\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"send\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"JSON\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"stringify\"\n          }), \"({\", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"price\"\n          }), \": newPrice}));\\n};\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"auction-service\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#auction-service\"\n        }), \"Auction Service\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"SockJS client re­quires the server-​side part. Now we are going to cre­ate a light-​weight REST­ful auc­tion ser­vice.\\nWe will send and re­trieve data in JSON for­mat. Let’s start by cre­at­ing a ver­ti­cle.\\nFirst we need to in­herit from \", _jsx(Link, {\n          href: \"/docs/apidocs/io/vertx/core/AbstractVerticle.html\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: _jsx(_components.code, {\n              children: \"AbstractVerticle\"\n            })\n          })\n        }), \"\\nand over­ride the \", _jsx(_components.code, {\n          children: \"start\"\n        }), \" method.\\nEach ver­ti­cle in­stance has a mem­ber vari­able called \", _jsx(_components.code, {\n          children: \"vertx\"\n        }), \". This pro­vides ac­cess to the Vert.x core API.\\nFor ex­am­ple, to cre­ate an HTTP server you call the \", _jsx(_components.code, {\n          children: \"createHttpServer\"\n        }), \" method on \", _jsx(_components.code, {\n          children: \"vertx\"\n        }), \" in­stance.\\nTo tell the server to lis­ten on port 8080 for in­com­ing re­quests you use the \", _jsx(_components.code, {\n          children: \"listen\"\n        }), \" method.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"We need a router with routes. A router takes an HTTP re­quest and finds the first match­ing route.\\nThe route can have a han­dler as­so­ci­ated with it, which re­ceives the re­quest\\n(e.g. route that matches path \", _jsx(_components.code, {\n          children: \"/eventbus/*\"\n        }), \" is  as­so­ci­ated with \", _jsx(_components.code, {\n          children: \"eventBusHandler\"\n        }), \").\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We can do some­thing with the re­quest, and then, end it or pass it to the next match­ing han­dler.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"If you have a lot of han­dlers it makes sense to split them up into mul­ti­ple routers.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can do this by mount­ing a router at a mount point in an­other router\\n(see \", _jsx(_components.code, {\n          children: \"auctionApiRouter\"\n        }), \" that cor­re­sponds to \", _jsx(_components.code, {\n          children: \"/api\"\n        }), \" mount point in code snip­pet below).\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Here’s an ex­am­ple ver­ti­cle:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"AuctionServiceVerticle\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"extends\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"AbstractVerticle\"\n          }), \" {\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Override\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"start\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"()\"\n          }), \" {\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"Router\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"router\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" Router.router(vertx);\\n\\n        router.route(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/eventbus/*\\\"\"\n          }), \").handler(eventBusHandler());\\n        router.mountSubRouter(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/api\\\"\"\n          }), \", auctionApiRouter());\\n        router.route().failureHandler(errorHandler());\\n        router.route().handler(staticHandler());\\n\\n        vertx.createHttpServer().requestHandler(router::accept).listen(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"8080\"\n          }), \");\\n    }\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"//…\"\n          }), \"\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Now we’ll look at things in more de­tail. We’ll dis­cuss Vert.x fea­tures used in ver­ti­cle:\\nerror han­dler, SockJS han­dler, body han­dler, shared data, sta­tic han­dler and rout­ing based on method, path etc.\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"error-handler\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#error-handler\"\n        }), \"Error handler\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"As well as set­ting han­dlers to han­dle re­quests you can also set a han­dler for fail­ures in rout­ing.\\nFail­ure in rout­ing oc­curs if a han­dler throws an ex­cep­tion, or if a han­dler calls \", _jsx(Link, {\n          href: \"/docs/apidocs/io/vertx/ext/web/RoutingContext.html#fail-int-\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: _jsx(_components.code, {\n              children: \"fail\"\n            })\n          })\n        }), \" method.\\nTo ren­der error pages we use error han­dler pro­vides by Vert.x:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"private\"\n          }), \" ErrorHandler \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"errorHandler\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"()\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" ErrorHandler.create();\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"sockjs-handler\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#sockjs-handler\"\n        }), \"SockJS handler\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Vert.x pro­vides SockJS han­dler with the event bus bridge which ex­tends\\nthe server-​side Vert.x event bus into client side JavaScript.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Con­fig­ur­ing the bridge to tell it which mes­sages should pass through is easy.\\nYou can spec­ify which matches you want to allow for in­bound and out­bound traf­fic\\nusing the \", _jsx(Link, {\n          href: \"/docs/apidocs/io/vertx/ext/web/handler/sockjs/BridgeOptions.html\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: _jsx(_components.code, {\n              children: \"BridgeOptions\"\n            })\n          })\n        }), \".\\nIf a mes­sage is out­bound, be­fore send­ing it from the server to the client side JavaScript,\\nVert.x will look through any out­bound per­mit­ted matches. In code snip­pet below we allow any mes­sages\\nfrom ad­dresses start­ing with “auc­tion.” and end­ing with dig­its (e.g. \", _jsx(_components.code, {\n          children: \"auction.1\"\n        }), \", \", _jsx(_components.code, {\n          children: \"auction.100\"\n        }), \" etc).\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"If you want to be no­ti­fied when an event oc­curs on the bridge you can pro­vide a han­dler when call­ing the bridge.\\nFor ex­am­ple, \", _jsx(_components.code, {\n          children: \"SOCKET_CREATED\"\n        }), \" event will occur when a new SockJS socket is cre­ated.\\nThe event is an in­stance of \", _jsx(Link, {\n          href: \"/docs/apidocs/io/vertx/core/Future.html\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: _jsx(_components.code, {\n              children: \"Future\"\n            })\n          })\n        }), \".\\nWhen you are fin­ished han­dling the event you can com­plete the fu­ture with “true” to en­able fur­ther pro­cess­ing.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"To start the bridge sim­ply call \", _jsx(_components.code, {\n          children: \"bridge\"\n        }), \" method on the SockJS han­dler:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"private\"\n          }), \" SockJSHandler \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"eventBusHandler\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"()\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"BridgeOptions\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"options\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"BridgeOptions\"\n          }), \"()\\n            .addOutboundPermitted(\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"PermittedOptions\"\n          }), \"().setAddressRegex(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"auction\\\\\\\\.[0-9]+\\\"\"\n          }), \"));\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" SockJSHandler.create(vertx).bridge(options, event -> {\\n         \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (event.type() == BridgeEventType.SOCKET_CREATED) {\\n            logger.info(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"A socket was created\\\"\"\n          }), \");\\n        }\\n        event.complete(\", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          }), \");\\n    });\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"body-handler\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#body-handler\"\n        }), \"Body handler\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The Body­Han­dler al­lows you to re­trieve the re­quest body, limit the body size and to han­dle the file up­load.\\nBody han­dler should be on a match­ing route for any re­quests that re­quire this func­tion­al­ity.\\nWe need Body­Han­dler dur­ing the bid­ding process (PATCH method re­quest \", _jsx(_components.code, {\n          children: \"/auctions/<auction_id>\"\n        }), \" con­tains re­quest body\\nwith in­for­ma­tion about a new offer made at auc­tion). Cre­at­ing a new body han­dler is sim­ple:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"hljs language-java\",\n          children: \"BodyHandler.create();\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"If re­quest body is in JSON for­mat, you can get it with\\n\", _jsx(Link, {\n          href: \"/docs/apidocs/io/vertx/ext/web/RoutingContext.html#getBodyAsJson--\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: _jsx(_components.code, {\n              children: \"getBodyAsJson\"\n            })\n          })\n        }), \" method.\"]\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"shared-data\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#shared-data\"\n        }), \"Shared data\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Shared data con­tains func­tion­al­ity that al­lows you to safely share the data be­tween dif­fer­ent ap­pli­ca­tions\\nin the same Vert.x in­stance or across a clus­ter of Vert.x in­stances.\\nShared data in­cludes local shared maps, dis­trib­uted, cluster-​wide maps, asyn­chro­nous cluster-​wide locks\\nand asyn­chro­nous cluster-​wide coun­ters.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"To sim­plify the ap­pli­ca­tion we use the local shared map to save in­for­ma­tion about auc­tions.\\nThe local shared map al­lows you to share data be­tween dif­fer­ent ver­ti­cles in the same Vert.x in­stance.\\nHere’s an ex­am­ple of using a shared local map in an auc­tion ser­vice:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"AuctionRepository\"\n          }), \" {\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"//…\"\n          }), \"\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" Optional<Auction> \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"getById\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(String auctionId)\"\n          }), \" {\\n        LocalMap<String, String> auctionSharedData = \", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"this\"\n          }), \".sharedData.getLocalMap(auctionId);\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" Optional.of(auctionSharedData)\\n            .filter(m -> !m.isEmpty())\\n            .map(\", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"this\"\n          }), \"::convertToAuction);\\n    }\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"save\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(Auction auction)\"\n          }), \" {\\n        LocalMap<String, String> auctionSharedData = \", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"this\"\n          }), \".sharedData.getLocalMap(auction.getId());\\n\\n        auctionSharedData.put(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"id\\\"\"\n          }), \", auction.getId());\\n        auctionSharedData.put(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"price\\\"\"\n          }), \", auction.getPrice());\\n    }\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"//…\"\n          }), \"\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"If you want to store auc­tion data in a data­base, Vert.x pro­vides a few dif­fer­ent asyn­chro­nous clients\\nfor ac­cess­ing var­i­ous data stor­ages (Mon­goDB, Redis or JDBC client).\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"auction-api\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#auction-api\"\n        }), \"Auction API\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Vert.x lets you route HTTP re­quests to dif­fer­ent han­dlers based on pat­tern match­ing on the re­quest path.\\nIt also en­ables you to ex­tract val­ues from the path and use them as pa­ra­me­ters in the re­quest.\\nCor­re­spond­ing meth­ods exist for each HTTP method. The first match­ing one will re­ceive the re­quest.\\nThis func­tion­al­ity is par­tic­u­larly use­ful when de­vel­op­ing REST-​style web ap­pli­ca­tions.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"To ex­tract pa­ra­me­ters from the path, you can use the colon char­ac­ter to de­note the name of a pa­ra­me­ter.\\nReg­u­lar ex­pres­sions can also be used to ex­tract more com­plex matches.\\nAny pa­ra­me­ters ex­tracted by pat­tern match­ing are added to the map of re­quest pa­ra­me­ters.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(Link, {\n          href: \"/docs/apidocs/io/vertx/ext/web/Route.html#consumes-java.lang.String-\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: _jsx(_components.code, {\n              children: \"Consumes\"\n            })\n          })\n        }), \"\\nde­scribes which MIME types the han­dler can con­sume.\\nBy using \", _jsx(Link, {\n          href: \"/docs/apidocs/io/vertx/ext/web/Route.html#produces-java.lang.String-\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: _jsx(_components.code, {\n              children: \"produces\"\n            })\n          })\n        }), \"\\nyou de­fine which MIME types the route pro­duces.\\nIn the code below the routes will match any re­quest with \", _jsx(_components.code, {\n          children: \"content-type\"\n        }), \" header\\nand \", _jsx(_components.code, {\n          children: \"accept\"\n        }), \" header that matches \", _jsx(_components.code, {\n          children: \"application/json\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Let’s look at an ex­am­ple of a sub­router mounted on the main router which was cre­ated in \", _jsx(_components.code, {\n          children: \"start\"\n        }), \" method in ver­ti­cle:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"private\"\n          }), \" Router \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"auctionApiRouter\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"()\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"AuctionRepository\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"repository\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"AuctionRepository\"\n          }), \"(vertx.sharedData());\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"AuctionValidator\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"validator\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"AuctionValidator\"\n          }), \"(repository);\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"AuctionHandler\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"handler\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"AuctionHandler\"\n          }), \"(repository, validator);\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"Router\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"router\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" Router.router(vertx);\\n    router.route().handler(BodyHandler.create());\\n\\n    router.route().consumes(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"application/json\\\"\"\n          }), \");\\n    router.route().produces(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"application/json\\\"\"\n          }), \");\\n\\n    router.get(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/auctions/:id\\\"\"\n          }), \").handler(handler::handleGetAuction);\\n    router.patch(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/auctions/:id\\\"\"\n          }), \").handler(handler::handleChangeAuctionPrice);\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" router;\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The GET re­quest re­turns auc­tion data, while the PATCH method re­quest al­lows you to bid up in the auc­tion.\\nLet’s focus on the more in­ter­est­ing method, namely \", _jsx(_components.code, {\n          children: \"handleChangeAuctionPrice\"\n        }), \".\\nIn the sim­plest terms, the method might look like this:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"handleChangeAuctionPrice\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(RoutingContext context)\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"String\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"auctionId\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" context.request().getParam(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"id\\\"\"\n          }), \");\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"Auction\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"auction\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"Auction\"\n          }), \"(\\n        auctionId,\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"BigDecimal\"\n          }), \"(context.getBodyAsJson().getString(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"price\\\"\"\n          }), \"))\\n    );\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"this\"\n          }), \".repository.save(auction);\\n    context.vertx().eventBus().publish(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"auction.\\\"\"\n          }), \" + auctionId, context.getBodyAsString());\\n\\n    context.response()\\n        .setStatusCode(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"200\"\n          }), \")\\n        .end();\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"PATCH\"\n        }), \" re­quest to \", _jsx(_components.code, {\n          children: \"/auctions/1\"\n        }), \" would re­sult in vari­able \", _jsx(_components.code, {\n          children: \"auctionId\"\n        }), \" get­ting the value 1.\\nWe save a new offer in the auc­tion and then pub­lish this in­for­ma­tion on the event bus to all clients\\nreg­is­tered on the ad­dress on the client side JavaScript.\\nAfter you have fin­ished with the HTTP re­sponse you must call the \", _jsx(_components.code, {\n          children: \"end\"\n        }), \" func­tion on it.\"]\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"static-handler\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#static-handler\"\n        }), \"Static handler\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Vert.x pro­vides the han­dler for serv­ing sta­tic web re­sources.\\nThe de­fault di­rec­tory from which sta­tic files are served is \", _jsx(_components.code, {\n          children: \"webroot\"\n        }), \", but this can be con­fig­ured.\\nBy de­fault the sta­tic han­dler will set cache head­ers to en­able browsers to cache files.\\nSet­ting cache head­ers can be dis­abled with\\n\", _jsx(Link, {\n          href: \"/docs/apidocs/io/vertx/ext/web/handler/StaticHandler.html#setCachingEnabled-boolean-\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: _jsx(_components.code, {\n              children: \"setCachingEnabled\"\n            })\n          })\n        }), \" method.\\nTo serve the auc­tion HTML page, JS files (and other sta­tic files) from auc­tion ser­vice, you can cre­ate a sta­tic han­dler like this:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"private\"\n          }), \" StaticHandler \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"staticHandler\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"()\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" StaticHandler.create()\\n        .setCachingEnabled(\", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \");\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"lets-run\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#lets-run\"\n        }), \"Let’s run!\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Full ap­pli­ca­tion code is avail­able on \", _jsx(_components.a, {\n          href: \"https://github.com/mwarc/simple-realtime-auctions-vertx3-example\",\n          children: \"github\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Clone the repos­i­tory and run \", _jsx(_components.code, {\n          children: \"./gradlew run\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Open one or more browsers and point them to \", _jsx(_components.code, {\n          children: \"http://localhost:8080\"\n        }), \". Now you can bid in auc­tion:\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/images/blog/real-time-bidding-with-websockets-and-vertx/bidding_in_application.png\",\n          alt: \"Real time bidding in application\"\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"summary\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#summary\"\n        }), \"Summary\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This ar­ti­cle presents the out­line of a sim­ple ap­pli­ca­tion that al­lows real-​time bid­ding.\\nWe cre­ated a light­weight, high-​performance and scal­able micro-​service writ­ten in Java and based on Vert.x.\\nWe dis­cussed what Vert.x of­fers, among oth­ers, a dis­trib­uted event bus and an el­e­gant API that al­lows you to cre­ate ap­pli­ca­tions in no time.\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Using Hamcrest Matchers with Vert.x Unit","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Vert.x Unit is a very elegant library to test asynchronous applications developed with vert.x. However because of this asynchronous aspect, reporting test failures is not natural for JUnit users."},"date":"2016-01-18","slug":"using-hamcrest-matchers-with-vert-x-unit"},"nextPost":{"meta":{"title":"ECMAScript 6/7 on the JVM with TypeScript and Vert.x","category":"guides","authors":[{"name":"Michel Krämer","github_id":"michel-kraemer"}],"summary":"I figured it would be a good idea to give you a couple of examples how teaming\n  Vert.x and TypeScript helps you use ECMAScript 6 and 7 features on the JVM today."},"date":"2016-01-03","slug":"ecmascript-6-7-on-the-jvm-with-typescript-and-vert-x"},"relatedPosts":[{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"},{"meta":{"title":"Building services and APIs with AMQP 1.0","category":"guides","authors":[{"name":"Jakub Scholz","github_id":"scholzj"}],"summary":"Microservices and APIs are everywhere. Everyone talks about them, presentation slides are full of them ... some people are actually even building them."},"date":"2017-01-25","slug":"building-services-and-apis-with-amqp-1-0"}]},"__N_SSG":true}