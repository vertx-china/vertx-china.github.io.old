{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Eclipse Vert.x 4 beta 3 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The third beta version of Eclipse Vert.x 4.0 highlights many features including (but not limited to) HTTP client request creation, HTTP tunnel improvements, and WebSocket upgrade improvements."},"date":"2020-09-25","slug":"eclipse-vert-x-4-beta-3-released","readingTime":{"text":"4 min read","minutes":3.51,"time":210600,"words":702},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      h2: \"h2\",\n      a: \"a\",\n      pre: \"pre\",\n      code: \"code\",\n      span: \"span\",\n      ul: \"ul\",\n      li: \"li\"\n    }, props.components), {Link} = _components;\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"We are ex­tremely pleased to an­nounce the third 4.0 beta re­lease of Eclipse Vert.x.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Vert.x 4 is the evo­lu­tion of the Vert.x 3.x se­ries that will bring key fea­tures to Vert.x.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"http-client-request-creation\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#http-client-request-creation\"\n        }), \"HTTP client request creation\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Until Beta3, HTTP client has cre­ated lazy HTTP re­quests, since then cre­at­ing a re­quest\\nhas be­come an asyn­chro­nous op­er­a­tion guar­an­tee­ing that a slot for per­form­ing the re­quest\\nis granted:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Created a request\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"HttpClientRequest\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"request\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" client.get(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/some-uri\\\"\"\n          }), \");\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Connect to the server or reuse a connection from the pool and then try to send the request\"\n          }), \"\\nrequest.end();\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Since Beta3\"\n          }), \"\\nclient.get(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/some-uri\\\"\"\n          }), \", ar -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// The client connected to the server or reused a connection from the pool\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (ar.succeeded()) {\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"HttpClientRequest\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"request\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" ar.result();\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Send the request\"\n          }), \"\\n    request.end();\\n  }\\n});\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"An­other (hid­den) mo­ti­va­tion to switch to this model is avoid­ing data races when the\\nHTTP client is used out­side the event-​loop using fu­tures.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Pre­vi­ously, you could write code like:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"Future<HttpClientResponse> get = client.get(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"some-uri\\\"\"\n          }), \");\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Assuming we have a client that returns a future response\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// assuging this is *not* on the event-loop\"\n          }), \"\\nFuture<Buffer> fut = get.send().compose(response -> {\\n\\n  \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Response events might have happen already\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" response.body();\\n});\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Now, you can write in­stead:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"Future<Buffer> fut = client.get(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"some-uri\\\"\"\n          }), \").compose(request -> {\\n  request.send().compose(response -> response.body())\\n});\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"httpserverresponse-send-method\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#httpserverresponse-send-method\"\n        }), \"HttpServerResponse send method\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"In the pre­vi­ous beta, HTTP client re­quest got a new sim­pli­fied \", _jsx(_components.code, {\n          children: \"send\"\n        }), \" method to send\\na body or a stream. We did the same for the HTTP server re­sponse API:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"hljs language-java\",\n          children: \"server.requestHandler(req -> {\\n  req.pause();\\n  getSomeStream().onSuccess(stream -> {\\n    req.response().send(stream);\\n  });\\n});\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"http-tunnel-improvements\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#http-tunnel-improvements\"\n        }), \"HTTP tunnel improvements\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Cre­at­ing an HTTP tun­nel has now be­come more nat­ural:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"client.request(HttpMethod.CONNECT, \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"some-uri\\\"\"\n          }), \")\\n  .onSuccess(request -> {\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Connect to the server\"\n          }), \"\\n    request.connect(ar -> {\\n      \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (ar.succeeded()) {\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"HttpClientResponse\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"response\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" ar.result();\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (response.statusCode() != \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"200\"\n          }), \") {\\n          \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Connect failed for some reason\"\n          }), \"\\n        } \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" {\\n          \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Tunnel created, raw buffers are transmitted on the wire\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"NetSocket\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"socket\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" response.netSocket();\\n        }\\n      }\\n    });\\n});\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The new \", _jsx(_components.code, {\n          children: \"connect\"\n        }), \" method tells the client that when a \", _jsx(_components.code, {\n          children: \"201\"\n        }), \" re­sponse is re­ceived\\nfrom the server then the con­nec­tion should be switched to not in­ter­pret HTTP\\ndata any­more.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"On the server, the API has be­come asyn­chro­nous and re­named to \", _jsx(_components.code, {\n          children: \"toNetSocket()\"\n        }), \":\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"server.requestHandler(request -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (request.method() == HttpMethod.CONNECT) {\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Will send an HTTP 201 status code and switch the connection to use raw buffers\"\n          }), \"\\n    request.toNetSocket(ar -> {\\n      \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (ar.succeeded()) {\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"NetSocket\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"socket\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" ar.result();\\n      }\\n    });\\n  }\\n});\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"websocket-upgrade-improvements\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#websocket-upgrade-improvements\"\n        }), \"WebSocket upgrade improvements\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The server Web­Socket man­ual up­grade op­er­a­tion has also be­come asyn­chro­nous and re­named\\nto \", _jsx(_components.code, {\n          children: \"toWebSocket()\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"server.requestHandler(request -> {\\n  \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (request.method() == HttpMethod.GET && \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Upgrade\\\"\"\n          }), \".equals(request.getHeader(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"connection\\\"\"\n          }), \"))) {\\n    \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// Will do the WebSocket handshake\"\n          }), \"\\n    request.toWebSocket(ar -> {\\n      \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (ar.succeeded()) {\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"ServerWebSocket\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"socket\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" ar.result();\\n      }\\n    });\\n  }\\n});\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"row-to-json-conversion\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#row-to-json-conversion\"\n        }), \"Row to JSON conversion\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"SQL client can now eas­ily trans­form a \", _jsx(_components.code, {\n          children: \"Row\"\n        }), \" into a JSON ob­ject, this can be con­vie­nient\\nfor ap­pli­ca­tions di­rectly trans­fer­ring JSON re­sults to the client:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [\"client\\n  .preparedQuery(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"SELECT * FROM USERS WHERE ID=$1\\\"\"\n          }), \")\\n  .execute(Tuple.of(id))\\n  .onSuccess(row -> {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (row.size() == \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \") {\\n      \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"JsonObject\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"json\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" row.iterator().next().toJson();\\n    }\\n  });\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"oauth2oidc-pkce\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#oauth2oidc-pkce\"\n        }), \"OAuth2/OIDC PKCE\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"OAuth2Handler\"\n        }), \" can now han­dle \", _jsx(_components.a, {\n          href: \"https://tools.ietf.org/html/rfc7636\",\n          children: \"PKCE\"\n        }), \", which means an­other layer of se­cu­rity to your ap­pli­ca­tion.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"redis-resp3\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#redis-resp3\"\n        }), \"Redis RESP3\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The redis client can now speak \", _jsx(_components.code, {\n          children: \"RESP3\"\n        }), \" with redis servers. This means it can han­dle all the new types and APIs avail­able on redis from all ver­sions (RESP2, redis < 6) and (RESP3, redis >= 6).\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"finally\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#finally\"\n        }), \"Finally\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This is the Beta3 re­lase of Vert.x 4, you can of course ex­pect an­other beta as we get feed­back from the com­mu­nity and fix is­sues that we failed to catch be­fore.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You can also read the mile­stone an­nounces to know more about the over­ral changes:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(Link, {\n            href: \"/blog/eclipse-vert-x-4-beta-1-released\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"https://vertx.io/blog/eclipse-​vert-x-4-​beta-1-​released\"\n            })\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(Link, {\n            href: \"/blog/eclipse-vert-x-4-milestone-5-released\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"https://vertx.io/blog/eclipse-​vert-x-4-​milestone-5-​released\"\n            })\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(Link, {\n            href: \"/blog/eclipse-vert-x-4-milestone-5-released\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"https://vertx.io/blog/eclipse-​vert-x-4-​milestone-5-​released\"\n            })\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(Link, {\n            href: \"/blog/eclipse-vert-x-4-milestone-4-released\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"https://vertx.io/blog/eclipse-​vert-x-4-​milestone-4-​released\"\n            })\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(Link, {\n            href: \"/blog/eclipse-vert-x-4-milestone-3-released\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"https://vertx.io/blog/eclipse-​vert-x-4-​milestone-3-​released\"\n            })\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(Link, {\n            href: \"/blog/eclipse-vert-x-4-milestone-2-released\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"https://vertx.io/blog/eclipse-​vert-x-4-​milestone-2-​released\"\n            })\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(Link, {\n            href: \"/blog/eclipse-vert-x-4-milestone-1-released\",\n            passHref: true,\n            children: _jsx(_components.a, {\n              href: \"\",\n              children: \"https://vertx.io/blog/eclipse-​vert-x-4-​milestone-1-​released\"\n            })\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\",\n          children: \"dep­re­ca­tions and break­ing changes\"\n        }), \"\\ncan be found on the wiki.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"For this re­lease, there are no Docker im­ages.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The re­lease ar­ti­facts have been de­ployed to \", _jsx(_components.a, {\n          href: \"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0.Beta1\",\n          children: \"Maven Cen­tral\"\n        }), \" and you can get the dis­tri­b­u­tion on \", _jsx(_components.a, {\n          href: \"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0.Beta1/\",\n          children: \"Maven Cen­tral\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can boot­strap a Vert.x 4.0.0.Beta3 project using \", _jsx(_components.a, {\n          href: \"https://start.vertx.io\",\n          children: \"https://start.vertx.io\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The doc­u­men­ta­tion has been de­ployed on this pre­view web-​site \", _jsx(_components.a, {\n          href: \"https://vertx-web-site.github.io/docs/\",\n          children: \"https://vertx-​web-site.github.io/docs/\"\n        })]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"That’s it! Happy cod­ing and see you soon on our user or dev \", _jsx(Link, {\n          href: \"/community\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"chan­nels\"\n          })\n        }), \".\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"JWT Authorization for Vert.x with Keycloak","category":"guides","authors":[{"name":"Thomas Darimont","github_id":"thomasdarimont"}],"summary":"In this blog post, you'll learn about JWT foundations, protect routes with JWT Authorization, JWT encoded tokens, and RBAC with Keycloak"},"date":"2020-10-01","slug":"jwt-authorization-for-vert-x-with-keycloak"},"nextPost":{"meta":{"title":"Eclipse Vert.x 3.9.3 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"Eclipse Vert.x version 3.9.3 has just been released. It fixes quite a few bugs that have been reported by the community."},"date":"2020-09-17","slug":"eclipse-vert-x-3-9-3-released"},"relatedPosts":[{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"},{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"}]},"__N_SSG":true}