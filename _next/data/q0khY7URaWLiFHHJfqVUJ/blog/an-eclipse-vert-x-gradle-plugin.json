{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"An Eclipse Vert.x Gradle Plugin","category":"news","authors":[{"name":"Julien Ponge","github_id":"jponge"}],"summary":"The new Vert.x Gradle plugin offers an opinionated plugin for building Vert.x applications with Gradle."},"date":"2017-09-28","slug":"an-eclipse-vert-x-gradle-plugin","readingTime":{"text":"4 min read","minutes":3.305,"time":198300,"words":661},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      code: \"code\",\n      em: \"em\",\n      ul: \"ul\",\n      li: \"li\",\n      h2: \"h2\",\n      pre: \"pre\",\n      span: \"span\",\n      ol: \"ol\",\n      h3: \"h3\"\n    }, props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"Eclipse Vert.x is a ver­sa­tile toolkit, and as such it does not have any strong opin­ion on the tools that you should be using.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Gra­dle is a pop­u­lar build tool in the JVM ecosys­tem, and it is quite easy to use for build­ing Vert.x project as \", _jsxs(_components.a, {\n          href: \"https://github.com/vert-x3/vertx-examples/blob/master/gradle-verticles/gradle-verticle/build.gradle\",\n          children: [\"show in one of the \", _jsx(_components.code, {\n            children: \"vertx-examples\"\n          }), \" sam­ples\"]\n        }), \" where a so-​called \", _jsx(_components.em, {\n          children: \"fat Jar\"\n        }), \" is being pro­duced.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The new \", _jsx(_components.a, {\n          href: \"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\",\n          children: \"Vert.x Gra­dle plugin\"\n        }), \" of­fers an \", _jsx(_components.em, {\n          children: \"opin­ion­ated\"\n        }), \" plug­in for build­ing Vert.x ap­pli­ca­tions with Gra­dle.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"It au­to­mat­i­cally ap­plies the fol­low­ing plu­g­ins:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"java\"\n          }), \" (and sets the source com­pat­i­bil­ity to Java 8),\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"application\"\n          }), \" + \", _jsx(_components.code, {\n            children: \"shadow\"\n          }), \" to gen­er­ate fat Jars with all de­pen­den­cies bun­dled,\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"nebula-dependency-recommender-plugin\"\n          }), \" so that you can omit ver­sions from mod­ules from the the Vert.x stack.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The plug­in au­to­mat­i­cally adds \", _jsx(_components.code, {\n          children: \"io.vertx:vertx-core\"\n        }), \" as a \", _jsx(_components.code, {\n          children: \"compile\"\n        }), \" de­pen­dency, so you don’t need to do it.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The plug­in pro­vides a \", _jsx(_components.code, {\n          children: \"vertxRun\"\n        }), \" task that can take ad­van­tage of the Vert.x auto-​reloading ca­pa­bil­i­ties, so you can just run it then have your code being au­to­mat­i­cally com­piled and re­loaded as you make changes.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"getting-started\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#getting-started\"\n        }), \"Getting started\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"A min­i­mal \", _jsx(_components.code, {\n          children: \"build.gradle\"\n        }), \" looks like:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-groovy\",\n          children: [\"plugins {\\n  id \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'io.vertx.vertx-plugin'\"\n          }), \" version \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'0.0.4'\"\n          }), \"\\n}\\n\\nrepositories {\\n  jcenter()\\n}\\n\\nvertx {\\n  mainVerticle = \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'sample.App'\"\n          }), \"\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Pro­vided \", _jsx(_components.code, {\n          children: \"sample.App\"\n        }), \" is a Vert.x ver­ti­cle, then:\"]\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"gradle shadowJar\"\n          }), \" builds an ex­e­cutable Jar with all de­pen­den­cies: \", _jsx(_components.code, {\n            children: \"java -jar build/libs/simple-project-fat.jar\"\n          }), \", and\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"gradle vertxRun\"\n          }), \" starts the ap­pli­ca­tion and au­to­mat­i­cally re­com­piles (\", _jsx(_components.code, {\n            children: \"gradle classes\"\n          }), \") and re­loads the code when any file under \", _jsx(_components.code, {\n            children: \"src/\"\n          }), \" is being added, mod­i­fied or deleted.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"using-with-kotlin-or-groovy-or\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#using-with-kotlin-or-groovy-or\"\n        }), \"Using with Kotlin (or Groovy, or…)\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The plug­in in­te­grates well with plu­g­ins that add con­fig­u­ra­tions and tasks trig­gered by the \", _jsx(_components.code, {\n          children: \"classes\"\n        }), \" task.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Here is how to use the plug­in with Kotlin (re­place the ver­sion num­bers with the lat­est ones…):\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-groovy\",\n          children: [\"plugins {\\n  id \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'io.vertx.vertx-plugin'\"\n          }), \" version \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'x.y.z'\"\n          }), \"\\n  id \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'org.jetbrains.kotlin.jvm'\"\n          }), \" version \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'a.b.c'\"\n          }), \"\\n}\\n\\nrepositories {\\n  jcenter()\\n}\\n\\ndependencies {\\n  compile \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'io.vertx:vertx-lang-kotlin'\"\n          }), \"\\n  compile \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'org.jetbrains.kotlin:kotlin-stdlib-jre8'\"\n          }), \"\\n}\\n\\nvertx {\\n  mainVerticle = \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"sample.MainVerticle\\\"\"\n          }), \"\\n}\\n\\ntasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {\\n  kotlinOptions {\\n    jvmTarget = \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"1.8\\\"\"\n          }), \"\\n  }\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"using-with-webpack-or-any-other-custom-task\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#using-with-webpack-or-any-other-custom-task\"\n        }), \"Using with WebPack (or any other custom task)\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Web­Pack is pop­u­lar to bun­dle web as­sets, and there is even \", _jsx(_components.a, {\n          href: \"https://guides.gradle.org/running-webpack-with-gradle/\",\n          children: \"a guide for its in­te­gra­tion with Gra­dle\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Mix­ing the Vert.x Gra­dle plug­in with Web­Pack is very sim­ple, es­pe­cially in com­bi­na­tion with the \", _jsx(_components.code, {\n          children: \"com.moowork.node\"\n        }), \" plug­in that in­te­grates Node into Gra­dle.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Sup­pose we want to mix Vert.x code and JavaScript with Gra­dle and Web­Pack.\\nWe as­sume a \", _jsx(_components.code, {\n          children: \"package.json\"\n        }), \" as:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-javascript\",\n          children: [\"{\\n  \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"name\\\"\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"webpack-sample\\\"\"\n          }), \",\\n  \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"version\\\"\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"0.0.1\\\"\"\n          }), \",\\n  \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"description\\\"\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"A sample with Vert.x, Gradle and Webpack\\\"\"\n          }), \",\\n  \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"main\\\"\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"src/main/webapp/index.js\\\"\"\n          }), \",\\n  \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"scripts\\\"\"\n          }), \": {\\n    \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"test\\\"\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"echo \\\\\\\"Error: no test specified\\\\\\\" && exit 1\\\"\"\n          }), \"\\n  },\\n  \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"author\\\"\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"\\\"\"\n          }), \",\\n  \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"license\\\"\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"ISC\\\"\"\n          }), \",\\n  \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"devDependencies\\\"\"\n          }), \": {\\n    \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"webpack\\\"\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"^2.7.0\\\"\"\n          }), \"\\n  },\\n  \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"dependencies\\\"\"\n          }), \": {\\n    \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"axios\\\"\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"^0.16.2\\\"\"\n          }), \"\\n  }\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"and \", _jsx(_components.code, {\n          children: \"webpack.config.js\"\n        }), \" as:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-javascript\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-variable hljs-language\",\n            children: \"module\"\n          }), \".\", _jsx(_components.span, {\n            className: \"hljs-property\",\n            children: \"exports\"\n          }), \" = {\\n  \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"entry\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'./src/main/webapp/index.js'\"\n          }), \",\\n  \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"output\"\n          }), \": {\\n    \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"filename\"\n          }), \": \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'./build/resources/main/webroot/bundle.js'\"\n          }), \"\\n  }\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The \", _jsx(_components.code, {\n          children: \"build.gradle\"\n        }), \" file is the fol­low­ing:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-groovy\",\n          children: [\"plugins {\\n  id \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'io.vertx.vertx-plugin'\"\n          }), \" version \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'0.0.4'\"\n          }), \"\\n  id \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'com.moowork.node'\"\n          }), \" version \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'1.2.0'\"\n          }), \"\\n}\\n\\nrepositories {\\n  jcenter()\\n}\\n\\ndependencies {\\n  compile \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"io.vertx:vertx-web\\\"\"\n          }), \"\\n}\\n\\nvertx {\\n  mainVerticle = \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"sample.MainVerticle\\\"\"\n          }), \"\\n  watch = [\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"src/**/*\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"build.gradle\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"yarn.lock\\\"\"\n          }), \"]\\n  onRedeploy = [\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"classes\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"webpack\\\"\"\n          }), \"]\\n}\\n\\ntask webpack(\", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"type:\"\n          }), \" Exec) {\\n  inputs.file(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"$projectDir/yarn.lock\\\"\"\n          }), \")\\n  inputs.file(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"$projectDir/webpack.config.js\\\"\"\n          }), \")\\n  inputs.dir(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"$projectDir/src/main/webapp\\\"\"\n          }), \")\\n  outputs.dir(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"$buildDir/resources/main/webroot\\\"\"\n          }), \")\\n  commandLine \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"$projectDir/node_modules/.bin/webpack\\\"\"\n          }), \"\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"This cus­tom build ex­poses a \", _jsx(_components.code, {\n          children: \"webpack\"\n        }), \" task that in­vokes Web­Pack, with proper file track­ing so that Gra­dle knows when the task is up-​to-date or not.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The Node plug­in adds many tasks, and in­te­grates fine with \", _jsx(_components.code, {\n          children: \"npm\"\n        }), \" or \", _jsx(_components.code, {\n          children: \"yarn\"\n        }), \", so fetch­ing all NPM de­pen­den­cies is done by call­ing \", _jsx(_components.code, {\n          children: \"./gradlew yarn\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The \", _jsx(_components.code, {\n          children: \"vertxRun\"\n        }), \" task now re­de­ploys on mod­i­fi­ca­tions to files in \", _jsx(_components.code, {\n          children: \"src/\"\n        }), \" (and sub-​folders), \", _jsx(_components.code, {\n          children: \"build.gradle\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"yarn.lock\"\n        }), \", call­ing both the \", _jsx(_components.code, {\n          children: \"classes\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"webpack\"\n        }), \" tasks:\"]\n      }), \"\\n\", _jsx(\"div\", {\n        className: \"youtube-embed\",\n        children: _jsx(\"iframe\", {\n          src: \"https://www.youtube.com/embed/OGy-1w8Z6Dc?rel=0\",\n          frameBorder: \"0\",\n          allowFullScreen: true\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"summary\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#summary\"\n        }), \"Summary\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The Vert.x Gra­dle plug­in pro­vides lots of de­faults to con­fig­ure a Gra­dle project for Vert.x ap­pli­ca­tions, pro­duc­ing \", _jsx(_components.em, {\n          children: \"fat Jars\"\n        }), \" and of­fer­ing a run­ning task with au­to­matic re­de­ploy­ment.\\nThe plug­in also in­te­grates well with other plu­g­ins and ex­ter­nal tools for which a Gra­dle task is avail­able.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The project is still in its early stages and we are look­ing for­ward to hear­ing from you!\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"links\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#links\"\n        }), \"Links\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/jponge/vertx-gradle-plugin\",\n            children: \"The project on GitHub\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\",\n            children: \"The plug­in on the Gra­dle plu­g­ins por­tal\"\n          })\n        }), \"\\n\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n"},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.5.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The Vert.x team is pleased to announce the release of Eclipse Vert.x 3.5.0."},"date":"2017-10-20","slug":"eclipse-vert-x-3-5-0-released"},"nextPost":{"meta":{"title":"Introducing Vert.x MQTT client","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this article, we will see how to set up the new Vert.x MQTT client. An example project is available on GitHub."},"date":"2017-08-21","slug":"introducing-vert-x-mqtt-client"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"TCP Client using Eclipse Vert.x, Kotlin and Gradle build","category":"guides","authors":[{"name":"Usman Saleem","github_id":"usmansaleem"}],"summary":"In this blog post, I demonstrate how to write a very simple TCP client that keeps a connection open to a custom-written server in cloud."},"date":"2017-12-20","slug":"tcp-client-using-eclipse-vert-x-kotlin-and-gradle-build"},{"meta":{"title":"Checklist for Migrating from Vert.x 2.1.x to Vert.x 3 - Part One","category":"guides","authors":[{"name":"Mark Spritzler","github_id":"bytor99999"}],"summary":"So while upgrading our application, I thought I should note down all the changes that we had to do in the process. Since Vert.x 3 is a major upgrade from the previous version, with so many changes."},"date":"2015-07-06","slug":"checklist-for-migrating-from-vert-x-2-1-x-to-vert-x-3-part-one"}]},"__N_SSG":true}