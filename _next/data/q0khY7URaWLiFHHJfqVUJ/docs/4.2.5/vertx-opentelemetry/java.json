{"pageProps":{"slug":"4.2.5/vertx-opentelemetry/java","title":"Vertx OpenTelemetry","fallbackGitHubStars":null,"toc":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_tracing_policy\">追踪政策</a></li>\n<li><a href=\"#_http_tracing\">HTTP 跟踪</a></li>\n<li><a href=\"#_eventbus_tracing\">EventBus 追踪</a></li>\n</ul>\n</div>","contents":"<h1>Vertx OpenTelemetry</h1>\n\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x 与 OpenTelemetry 的集成。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"hljs-type\">Vertx</span> <span class=\"hljs-variable\">vertx</span> <span class=\"hljs-operator\">=</span> Vertx.vertx(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VertxOptions</span>()\n  .setTracingOptions(\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">OpenTelemetryOptions</span>()\n  )\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>您还可以通过传递自定义的 <code>OpenTelemetry</code> 对象，\n以掌握在配置上更大的控制权。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"hljs-type\">Vertx</span> <span class=\"hljs-variable\">vertx</span> <span class=\"hljs-operator\">=</span> Vertx.vertx(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VertxOptions</span>()\n  .setTracingOptions(\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">OpenTelemetryOptions</span>(openTelemetry)\n  )\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>如果您只是添加了这个库的依赖，那么您只能使用默认的 <code>noop</code> Tracer，\n它返回的活动轨迹（trace） id 和跨度（span） id 是虚拟值 (都是 0)。为了获取正确的值，您需要使用 OpenTelemetry SDK。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"hljs-type\">SdkTracerProvider</span> <span class=\"hljs-variable\">sdkTracerProvider</span> <span class=\"hljs-operator\">=</span> SdkTracerProvider.builder().build();\n<span class=\"hljs-type\">OpenTelemetry</span> <span class=\"hljs-variable\">openTelemetry</span> <span class=\"hljs-operator\">=</span> OpenTelemetrySdk.builder()\n  .setTracerProvider(sdkTracerProvider)\n  .setPropagators(ContextPropagators.create(W3CTraceContextPropagator.getInstance()))\n  .buildAndRegisterGlobal();\n\nvertxOptions.setTracingOptions(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">OpenTelemetryOptions</span>(openTelemetry));</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_tracing_policy\"><a class=\"anchor\" href=\"#_tracing_policy\"></a>追踪政策</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>当启用跟踪时，跟踪策略定义组件的行为：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code><a href=\"../../apidocs/io/vertx/core/tracing/TracingPolicy.html#PROPAGATE\">PROPAGATE</a></code>：该组件报告活动跟踪中的跨度</p>\n</li>\n<li>\n<p><code><a href=\"../../apidocs/io/vertx/core/tracing/TracingPolicy.html#ALWAYS\">ALWAYS</a></code>：该组件报告活动轨迹中的跨度或创建新的活动轨迹</p>\n</li>\n<li>\n<p><code><a href=\"../../apidocs/io/vertx/core/tracing/TracingPolicy.html#IGNORE\">IGNORE</a></code>：该组件不会参与任何跟踪。</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>跟踪策略通常在组件选项中配置。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_http_tracing\"><a class=\"anchor\" href=\"#_http_tracing\"></a>HTTP 跟踪</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x HTTP 服务器和客户端报告涵盖了 HTTP 请求：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>name</code>：HTTP 方法</p>\n</li>\n<li>\n<p>标签</p>\n</li>\n<li>\n<p><code>http.method</code>：HTTP 方法</p>\n</li>\n<li>\n<p><code>http.url</code>：请求地址链接</p>\n</li>\n<li>\n<p><code>http.status_code</code>：HTTP 状态代码（作为 <code>String字符串</code>）</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>默认的 HTTP 服务器跟踪策略是 <code>ALWAYS</code>，\n您可使用 <code><a href=\"../../apidocs/io/vertx/core/http/HttpServerOptions.html#setTracingPolicy-io.vertx.core.tracing.TracingPolicy-\">setTracingPolicy</a></code> 配置策略</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"hljs-type\">HttpServer</span> <span class=\"hljs-variable\">server</span> <span class=\"hljs-operator\">=</span> vertx.createHttpServer(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HttpServerOptions</span>()\n  .setTracingPolicy(TracingPolicy.IGNORE)\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>默认的 HTTP 客户端跟踪策略是 <code>PROPAGATE</code>，\n您可使用 <code><a href=\"../../apidocs/io/vertx/core/http/HttpClientOptions.html#setTracingPolicy-io.vertx.core.tracing.TracingPolicy-\">setTracingPolicy</a></code> 配置策略</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"hljs-type\">HttpClient</span> <span class=\"hljs-variable\">client</span> <span class=\"hljs-operator\">=</span> vertx.createHttpClient(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HttpClientOptions</span>()\n  .setTracingPolicy(TracingPolicy.IGNORE)\n);</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_eventbus_tracing\"><a class=\"anchor\" href=\"#_eventbus_tracing\"></a>EventBus 追踪</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x EventBus 报告涵盖了事件总线上交换和传递的消息。</p>\n</div>\n<div class=\"paragraph\">\n<p>默认发送策略是 <code>PROPAGATE</code>，\n您可使用 <code><a href=\"../../apidocs/io/vertx/core/eventbus/DeliveryOptions.html#setTracingPolicy-io.vertx.core.tracing.TracingPolicy-\">setTracingPolicy</a></code> 配置策略。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"hljs-type\">DeliveryOptions</span> <span class=\"hljs-variable\">options</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">DeliveryOptions</span>().setTracingPolicy(TracingPolicy.ALWAYS);\nvertx.eventBus().send(<span class=\"hljs-string\">&quot;the-address&quot;</span>, <span class=\"hljs-string\">&quot;foo&quot;</span>, options);</code></pre>\n</div>\n</div>\n</div>\n</div>","version":"4.2.5"},"__N_SSG":true}