{"pageProps":{"slug":"4.1.8/vertx-auth-htdigest/java","title":".htdigest 鉴权与授权的提供程序（.htdigest鉴授权提供者）","fallbackGitHubStars":null,"toc":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_authentication\">鉴权/身份验证</a></li>\n<li><a href=\"#_provider_internal_behavior\">提供程序的内部行为</a></li>\n</ul>\n</div>","contents":"<h1>.htdigest 鉴权与授权的提供程序（.htdigest鉴授权提供者）</h1>\n\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x提供了 <code><a href=\"../../apidocs/io/vertx/ext/auth/authentication/AuthenticationProvider.html\">AuthenticationProvider</a></code> 的实现类，\n它使用了 <code>.digest</code> 的文件格式以验证身份。提供程序加载该文件后，将不再监视文件的更新。\n如果您需要动态的用户管理，使用动态提供程序（如jdbc或mongo提供程序）会更加的方便。</p>\n</div>\n<div class=\"paragraph\">\n<p>要使用该项目，\n需在构建描述文件的 <em>dependencies</em> 部分添加以下依赖项：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Maven (在 <code>pom.xml</code> 文件中)：</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-xml\" data-lang=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-auth-htdigest<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.1.8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span></code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Gradle (在 <code>build.gradle</code> 文件中)：</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-groovy\" data-lang=\"groovy\">compile <span class=\"hljs-string\">&#x27;io.vertx:vertx-auth-htdigest:4.1.8&#x27;</span></code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>要创建一个实例，您首先需要一份.htdigest文件。该文件可使用apache htdigest工具生成。</p>\n</div>\n<div class=\"paragraph\">\n<p>若您已拥有一个Vertx实例，那么您可按如下方式创建 <code><a href=\"../../apidocs/io/vertx/ext/auth/htdigest/HtdigestAuth.html\">HtdigestAuth</a></code> 实例：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"hljs-type\">HtdigestAuth</span> <span class=\"hljs-variable\">authProvider</span> <span class=\"hljs-operator\">=</span> HtdigestAuth.create(vertx, <span class=\"hljs-string\">&quot;.htdigest&quot;</span>);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>获得HtdigestAuth实例后， 您可以像使用任何的 <code><a href=\"../../apidocs/io/vertx/ext/auth/authentication/AuthenticationProvider.html\">AuthenticationProvider</a></code> 实例一样，使用它进行身份验证。</p>\n</div>\n<div class=\"paragraph\">\n<p>缺省配置默认 .htdigest 文件存在于项目的根目录中。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_authentication\"><a class=\"anchor\" href=\"#_authentication\"></a>鉴权/身份验证</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>使用此实现进行身份验证时，假定 digest 授权头是可解析的JSON对象，\n从现在开始，我们将其称为身份验证信息：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"hljs-type\">JsonObject</span> <span class=\"hljs-variable\">authInfo</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">JsonObject</span>()\n  .put(<span class=\"hljs-string\">&quot;username&quot;</span>, <span class=\"hljs-string\">&quot;Mufasa&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;realm&quot;</span>, <span class=\"hljs-string\">&quot;testrealm@host.com&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;nonce&quot;</span>, <span class=\"hljs-string\">&quot;dcd98b7102dd2f0e8b11d0f600bfb0c093&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;method&quot;</span>, <span class=\"hljs-string\">&quot;GET&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;uri&quot;</span>, <span class=\"hljs-string\">&quot;/dir/index.html&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;response&quot;</span>, <span class=\"hljs-string\">&quot;6629fae49393a05397450978507c4ef1&quot;</span>);\n\nauthProvider.authenticate(authInfo)\n  .onSuccess(user -&gt; System.out.println(<span class=\"hljs-string\">&quot;User: &quot;</span> + user.principal()))\n  .onFailure(err -&gt; {\n    <span class=\"hljs-comment\">// Failed!</span>\n  });</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_provider_internal_behavior\"><a class=\"anchor\" href=\"#_provider_internal_behavior\"></a>提供程序的内部行为</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>提供程序将在启动时加载指定的 <code>.htdigest</code> 文件，并且不会监视文件的修改。\n如果需要动态加载, 您需要重新启动程序。</p>\n</div>\n<div class=\"paragraph\">\n<p>除.htdigest文件本身之外，该实现是无状态的，\n这意味着必须在此实现外部进行处理验证以及“nonce”字符串还有计数器的生成。</p>\n</div>\n<div class=\"paragraph\">\n<p>最后，不支持 <code>auth-int</code> <code>qop</code> ，以避免为了验证完整请求的哈希值而不得不使用潜在的大块数据。\n在现代Web浏览器中通常也不会出现这种情况。</p>\n</div>\n<div class=\"paragraph\">\n<p>验证用户的特定权限时总是返回false，\n因为 htdigest 文件是一个纯粹身份验证机制，并非是授权。</p>\n</div>\n</div>\n</div>","version":"4.1.8"},"__N_SSG":true}