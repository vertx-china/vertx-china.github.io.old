{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Eclipse Vert.x 3.6.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are pleased to announce the Eclipse Vert.x 3.6.0 release."},"date":"2018-12-03","slug":"eclipse-vert-x-3-6-0-released","readingTime":{"text":"6 min read","minutes":5.21,"time":312600,"words":1042},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are pleased to an\\xADnounce the Eclipse Vert.x 3.6.0 re\\xADlease.\"), mdx(\"p\", null, \"As al\\xADways, the com\\xADmu\\xADnity con\\xADtri\\xADbu\\xADtions have been key in achiev\\xADing this mile\\xADstone.\\nTo all of you who par\\xADtic\\xADi\\xADpated: thank you, you are awe\\xADsome!\"), mdx(\"p\", null, \"With\\xADout fur\\xADther ado, let\\u2019s take a look at some of the most ex\\xADcit\\xADing new fea\\xADtures and en\\xADhance\\xADments.  \"), mdx(\"h4\", {\n    \"id\": \"vertx-cassandra-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-cassandra-client\"\n  })), \"Vert.x Cassandra client\"), mdx(\"p\", null, \"In this re\\xADlease we in\\xADtro\\xADduce the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-cassandra-client\"\n  }), \"Vert.x Cas\\xADsan\\xADdra client\"), \", an ex\\xADten\\xADsion for in\\xADter\\xADa\\xADtion with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://cassandra.apache.org/\"\n  }), \"Apache Cas\\xADsan\\xADdra\"), \".\"), mdx(\"p\", null, \"The client sup\\xADports:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pre\\xADpared queries\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"batch\\xADing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"query stream\\xADing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bulk fetch\\xADing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"low level fetch\\xADing\")), mdx(\"p\", null, \"To give you an idea of how the API usage may looks like, we pro\\xADvide this ex\\xADam\\xADple:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"cassandraClient.queryStream(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT my_string_col FROM my_keyspace.my_table where my_key = 'my_value'\\\"\"), \", queryStream -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (queryStream.succeeded()) {\\n    CassandraRowStream stream = queryStream.result();\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// resume stream when queue is ready to accept buffers again\"), \"\\n    response.drainHandler(v -> stream.resume());\\n\\n    stream.handler(row -> {\\n        String value = row.getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my_string_col\\\"\"), \");\\n        response.write(value);\\n\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// pause row stream when we buffer queue is full\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (response.writeQueueFull()) {\\n        stream.pause();\\n        }\\n    });\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// end request when we reached end of the stream\"), \"\\n    stream.endHandler(end -> response.end());\\n\\n    } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    queryStream.cause().printStackTrace();\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// response with internal server error if we are not able to execute given query\"), \"\\n    response\\n        .setStatusCode(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"500\"), \")\\n        .end(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Unable to execute the query\\\"\"), \");\\n    }\\n});\\n\")), mdx(\"h4\", {\n    \"id\": \"vertx-for-kotlin\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-for-kotlin\"\n  })), \"Vert.x for Kotlin\"), mdx(\"p\", null, \"Vert.x for Kotlin has been up\\xADdated to the very re\\xADcent Kotlin 1.3 (and corou\\xADtines 1.0).\"), mdx(\"p\", null, \"Vert.x 3.5 in\\xADtro\\xADduced a pow\\xADer\\xADful way to write syn\\xADchro\\xADnous non-\\u200Bblocking code with Kotlin corou\\xADtines:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" result = awaitResult<ResultSet> { client.queryWithParams(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT TITLE FROM MOVIE WHERE ID=?\\\"\"), \", json { array(id) }, it) };\\n\")), mdx(\"p\", null, \"In this re\\xADlease, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awaitResult\"), \" idiom as ex\\xADten\\xADsion meth\\xADods are pro\\xADvided, so now you can di\\xADrectly write:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" result = client.queryWithParamsAwait(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT TITLE FROM MOVIE WHERE ID=?\\\"\"), \", json { array(id) })\\n\")), mdx(\"p\", null, \"Note the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Await\"), \" suf\\xADfix: all Vert.x asyn\\xADchro\\xADnous meth\\xADods pro\\xADvide now an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"await\\xADi\\xADfied\"), \" ex\\xADten\\xADsion.\"), mdx(\"h4\", {\n    \"id\": \"web-api-gateways\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#web-api-gateways\"\n  })), \"Web API gateways\"), mdx(\"p\", null, \"The new \", mdx(Link, {\n    href: \"/docs/vertx-web-api-service/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x Web API Ser\\xADvice\")), \" mod\\xADule al\\xADlows you to\\ncre\\xADate \", mdx(Link, {\n    href: \"/docs/vertx-web-api-contract/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x Web API Con\\xADtract\")), \" gate\\xADways.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/blog/vertx-web-api-service/vertx-web-api-service.png\",\n    \"alt\": \"Web API Service Architecture\"\n  }))), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@WebApiServiceGen\"), \" can an\\xADno\\xADtate your ser\\xADvice in\\xADter\\xADface to han\\xADdle\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.openapis.org/\"\n  }), \"Ope\\xADnAPI 3\"), \": \", mdx(Link, {\n    href: \"/docs/vertx-web-api-service/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x Web API Ser\\xADvice\")), \"\\nre\\xADquests:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@WebApiServiceGen\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"TransactionService\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"getTransactionsList\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(String from, String to, OperationRequest context, Handler<AsyncResult<OperationResponse>> resultHandler)\")), \";\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"putTransaction\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(JsonObject body, OperationRequest context, Handler<AsyncResult<OperationResponse>> resultHandler)\")), \";\\n}\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OpenAPI3RouterFactory\"), \" web router be\\xADcomes an API gate\\xADway send\\xADing re\\xADquests di\\xADrectly to your ser\\xADvices.\"), mdx(\"p\", null, \"These ser\\xADvices are pow\\xADered by the Vert.x \", mdx(Link, {\n    href: \"/docs/vertx-core/java/#event_bus\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"event bus\")), \" and ben\\xADe\\xADfits\\nfrom fea\\xADtures like load bal\\xADanc\\xADing and clus\\xADter\\xADing.\"), mdx(\"p\", null, \"Check the \", mdx(Link, {\n    href: \"/docs/vertx-web-api-service/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"com\\xADplete doc\\xADu\\xADmen\\xADta\\xADtion\")), \" for more de\\xADtails (a tu\\xADto\\xADr\\xADial post is com\\xADing soon!)\"), mdx(\"h4\", {\n    \"id\": \"web-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#web-client\"\n  })), \"Web Client\"), mdx(\"p\", null, \"Our beloved \", mdx(Link, {\n    href: \"/docs/vertx-web-client/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"We\\xADb\\xADClient\")), \" is now ca\\xADpa\\xADble of han\\xADdling client ses\\xADsions. The\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WebClientSession\"), \" is a client ex\\xADten\\xADsion that is very help\\xADful when you need to man\\xADage cook\\xADies on the client side.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// The session is created per user\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// from now on cookies are handled by the session\"), \"\\nWebClientSession session = WebClientSession.create(client);\\n\")), mdx(\"p\", null, \"Cherry on the cake, the web client is now ca\\xADpa\\xADble of per\\xADform\\xADing server side re\\xADsponse checks using \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"re\\xADsponse pred\\xADi\\xADcates\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"client\\n  .get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8080\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"myserver.mycompany.com\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/some-uri\\\"\"), \")\\n  .expect(ResponsePredicate.SC_SUCCESS)\\n  .expect(ResponsePredicate.JSON)\\n  .send(result -> { ... });\\n\")), mdx(\"p\", null, \"The server side re\\xADsponse must val\\xADi\\xADdate the ex\\xADpec\\xADta\\xADtions de\\xADfined be\\xADfore send\\xADing the re\\xADquest in order to make the re\\xADsponse\\nsuc\\xADcess\\xADful, re\\xADliev\\xADing the user code to per\\xADform these checks man\\xADu\\xADally. Of course many out of box ex\\xADpeca\\xADtions are pro\\xADvided\\nand you can al\\xADways cre\\xADate your own to im\\xADple\\xADment cus\\xADtom checks.\"), mdx(\"h4\", {\n    \"id\": \"use-templating-everywhere\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#use-templating-everywhere\"\n  })), \"Use templating everywhere\"), mdx(\"p\", null, \"Tem\\xADplate en\\xADgines can now be used out\\xADside the realm of Vert.x Web.\\nOne great use case is to use them to gen\\xADer\\xADate email con\\xADtent:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"TemplateEngine template = ...\\n\\ntemplate.render(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject(), \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my-template.txt, res -> {\\n   // Send result with the Vert.x Mail client\\n});\\n\"))), mdx(\"h4\", {\n    \"id\": \"openid-connect-discovery\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#openid-connect-discovery\"\n  })), \"OpenID Connect Discovery\"), mdx(\"p\", null, mdx(Link, {\n    href: \"/docs/vertx-auth-oauth2/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Oauth2\")), \" has been greatly en\\xADhanced to sup\\xADport more of OpenID Con\\xADnect, the most noti\\xADci\\xADble is the sup\\xADport of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OpenID Connect Discovery 1.0\"), \".\"), mdx(\"p\", null, \"What this means for the end user is that, con\\xADfig\\xADu\\xADra\\xADtion is now a triv\\xADial task, as it is \\u201D\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"dis\\xADcoverd\"), \"\\u201D from the server, e.g.:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"OpenIDConnectAuth.discover(vertx,\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" OAuth2ClientOptions()\\n    .setSite(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"https://accounts.google.com\\\"\"), \")\\n    .setClientID(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"clientId\\\"\"), \"),\\n  res -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (res.succeeded()) {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// the setup call succeeded.\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// at this moment your auth is ready to use and\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// google signature keys are loaded so tokens can be decoded and verified.\"), \"\\n    } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// the setup failed.\"), \"\\n    }\\n});\\n\")), mdx(\"p\", null, \"If you know your \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cli\\xADen\\xADtId\"), \" and your provider server URL (of course), all the re\\xADmain\\xADing en\\xADdoints, key sig\\xADna\\xADture al\\xADgo\\xADrithms and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"JSON Web Keys\"), \" are \\u201Cdis\\xADcov\\xADered\\u201D for you and\\ncon\\xADfig\\xADured to the auth provider.\"), mdx(\"h4\", {\n    \"id\": \"password-hashing-strategy\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#password-hashing-strategy\"\n  })), \"Password Hashing strategy\"), mdx(\"p\", null, \"Vert.x auth com\\xADpo\\xADnents now sup\\xADport user de\\xADfined pass\\xADword hash\\xADing strate\\xADgies, If you\\u2019re not happy with the pro\\xADvided im\\xADple\\xADmen\\xADta\\xADtions: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SHA512\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PKDBF2\"), \" you can now pro\\xADvide your own strat\\xADegy\\nso it can be used with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JDBC\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Mongo\"), \" auth.\"), mdx(\"p\", null, \"The hash ver\\xADi\\xADfi\\xADca\\xADtion al\\xADgo\\xADrithm has been im\\xADproved to be time con\\xADstant, re\\xADgard\\xADless of the re\\xADsult, which pro\\xADtects Vert.x\\nap\\xADpli\\xADca\\xADtions from hash tim\\xADing at\\xADtacks.\"), mdx(\"h4\", {\n    \"id\": \"externalized-configuration-of-vertx-options\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#externalized-configuration-of-vertx-options\"\n  })), \"Externalized configuration of Vert.x options\"), mdx(\"p\", null, \"Whether you run your Vert.x app with the CLI or as an ex\\xADe\\xADcutable JAR with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Launcher\"), \", you can now pro\\xADvide Vert.x\\nop\\xADtions as a com\\xADmand line pa\\xADra\\xADme\\xADter:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-gradle\"\n  }), \"java -jar my-app.jar -\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"options\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/path/\"), \"to\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/my/\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \".json\\n\")), mdx(\"p\", null, \"Or with the CLI:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-gradle\"\n  }), \"vertx run my-verticle.js -\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"options\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/path/\"), \"to\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/my/\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \".json\\n\")), mdx(\"p\", null, \"This is par\\xADtic\\xADu\\xADlarly use\\xADful for com\\xADplex clus\\xADtered event-\\u200Bbus se\\xADtups (en\\xADcryp\\xADtion, pub\\xADlic host vs clus\\xADter host\\u2026).\"), mdx(\"h4\", {\n    \"id\": \"and-more\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#and-more\"\n  })), \"And more\\u2026\"), mdx(\"p\", null, \"Here are some other im\\xADpor\\xADtant im\\xADprove\\xADments you can find in this re\\xADlease:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Java 11 sup\\xADport (un\\xADless a Vert.x mod\\xADule de\\xADpends on a third-\\u200Bparty de\\xADpen\\xADdency that does not sup\\xADport it yet)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hazel\\xADcast Clus\\xADter Man\\xADager \", mdx(Link, {\n    href: \"/docs/vertx-hazelcast/java/#_using_lite_members\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"sup\\xADport for lite mem\\xADbers\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    href: \"/blog/simplified-database-transaction-management-with-the-vert-x-rxjava-api/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"Sim\\xADpli\\xADfied data\\xADbase trans\\xADac\\xADtion man\\xADage\\xADment\")), \" with the Vert.x \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Rx\\xADi\\xADfied\"), \" API\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Event-\\u200Bbus in\\xADter\\xADcep\\xADtors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Doc\\xADu\\xADmen\\xADta\\xADtion im\\xADprove\\xADments\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clus\\xADter ad\\xADmin\\xADis\\xADtra\\xADtion with \", mdx(Link, {\n    href: \"/docs/vertx-infinispan/java/#_cluster_administration\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"In\\xADfin\\xADis\\xADpan\")), \" and \", mdx(Link, {\n    href: \"/docs/vertx-hazelcast/java/#_cluster_administration\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"Hazel\\xADcast\")), \" clus\\xADter man\\xADagers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Rx\\xADi\\xADfied\"), \" API in the Vert.x \", mdx(Link, {\n    href: \"/docs/vertx-kafka-client/java/#_rxjava_2_api\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"Kafka\")), \", \", mdx(Link, {\n    href: \"/docs/vertx-web-client/java/#_rxjava_2_api\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"Web\")), \" and \", mdx(Link, {\n    href: \"/docs/vertx-mongo-client/java/#_rxjava_2_api\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"Mongo\")), \" clients\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Per\\xADfor\\xADmance im\\xADprove\\xADments\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"And ob\\xADvi\\xADously we have the usual bug fixes!\")), mdx(\"h4\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.6.0-Release-Notes\"\n  }), \"3.6.0 re\\xADlease notes\"), \" can be found on the wiki, as well as the list of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.6.0-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\")), mdx(\"p\", null, \"Docker im\\xADages are avail\\xADable on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \".\"), mdx(\"p\", null, \"The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion can be down\\xADloaded on the web\\xADsite but is also avail\\xADable from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"The event bus client using the SockJS bridge is avail\\xADable from:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"NPM\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"Bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"We\\xADb\\xADJars\"))), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.6.0%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.6.0/view\"\n  }), \"Bin\\xADtray\"), \".\"), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(Link, {\n    href: \"/community\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"chan\\xADnels\")), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are pleased to an­nounce the Eclipse Vert.x 3.6.0 re­lease.</p><p>As al­ways, the com­mu­nity con­tri­bu­tions have been key in achiev­ing this mile­stone.\nTo all of you who par­tic­i­pated: thank you, you are awe­some!</p><p>With­out fur­ther ado, let’s take a look at some of the most ex­cit­ing new fea­tures and en­hance­ments.  </p><h4 id=\"vertx-cassandra-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-cassandra-client\"></a>Vert.x Cassandra client</h4><p>In this re­lease we in­tro­duce the <a href=\"https://github.com/vert-x3/vertx-cassandra-client\">Vert.x Cas­san­dra client</a>, an ex­ten­sion for in­ter­a­tion with <a href=\"http://cassandra.apache.org/\">Apache Cas­san­dra</a>.</p><p>The client sup­ports:</p><ul><li>pre­pared queries</li><li>batch­ing</li><li>query stream­ing</li><li>bulk fetch­ing</li><li>low level fetch­ing</li></ul><p>To give you an idea of how the API usage may looks like, we pro­vide this ex­am­ple:</p><pre><code class=\"hljs language-java\">cassandraClient.queryStream(<span class=\"hljs-string\">&quot;SELECT my_string_col FROM my_keyspace.my_table where my_key = &#x27;my_value&#x27;&quot;</span>, queryStream -&gt; {\n    <span class=\"hljs-keyword\">if</span> (queryStream.succeeded()) {\n    CassandraRowStream stream = queryStream.result();\n\n    <span class=\"hljs-comment\">// resume stream when queue is ready to accept buffers again</span>\n    response.drainHandler(v -&gt; stream.resume());\n\n    stream.handler(row -&gt; {\n        String value = row.getString(<span class=\"hljs-string\">&quot;my_string_col&quot;</span>);\n        response.write(value);\n\n        <span class=\"hljs-comment\">// pause row stream when we buffer queue is full</span>\n        <span class=\"hljs-keyword\">if</span> (response.writeQueueFull()) {\n        stream.pause();\n        }\n    });\n\n    <span class=\"hljs-comment\">// end request when we reached end of the stream</span>\n    stream.endHandler(end -&gt; response.end());\n\n    } <span class=\"hljs-keyword\">else</span> {\n    queryStream.cause().printStackTrace();\n    <span class=\"hljs-comment\">// response with internal server error if we are not able to execute given query</span>\n    response\n        .setStatusCode(<span class=\"hljs-number\">500</span>)\n        .end(<span class=\"hljs-string\">&quot;Unable to execute the query&quot;</span>);\n    }\n});\n</code></pre><h4 id=\"vertx-for-kotlin\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-for-kotlin\"></a>Vert.x for Kotlin</h4><p>Vert.x for Kotlin has been up­dated to the very re­cent Kotlin 1.3 (and corou­tines 1.0).</p><p>Vert.x 3.5 in­tro­duced a pow­er­ful way to write syn­chro­nous non-​blocking code with Kotlin corou­tines:</p><pre><code class=\"hljs language-kotlin\"><span class=\"hljs-keyword\">val</span> result = awaitResult&lt;ResultSet&gt; { client.queryWithParams(<span class=\"hljs-string\">&quot;SELECT TITLE FROM MOVIE WHERE ID=?&quot;</span>, json { array(id) }, it) };\n</code></pre><p>In this re­lease, <code>awaitResult</code> idiom as ex­ten­sion meth­ods are pro­vided, so now you can di­rectly write:</p><pre><code class=\"hljs language-kotlin\"><span class=\"hljs-keyword\">val</span> result = client.queryWithParamsAwait(<span class=\"hljs-string\">&quot;SELECT TITLE FROM MOVIE WHERE ID=?&quot;</span>, json { array(id) })\n</code></pre><p>Note the <code>Await</code> suf­fix: all Vert.x asyn­chro­nous meth­ods pro­vide now an <em>await­i­fied</em> ex­ten­sion.</p><h4 id=\"web-api-gateways\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#web-api-gateways\"></a>Web API gateways</h4><p>The new <a href=\"/docs/vertx-web-api-service/java/\">Vert.x Web API Ser­vice</a> mod­ule al­lows you to\ncre­ate <a href=\"/docs/vertx-web-api-contract/java/\">Vert.x Web API Con­tract</a> gate­ways.</p><p><img src=\"/images/blog/vertx-web-api-service/vertx-web-api-service.png\" alt=\"Web API Service Architecture\"/></p><p><code>@WebApiServiceGen</code> can an­no­tate your ser­vice in­ter­face to han­dle\n<a href=\"https://www.openapis.org/\">Ope­nAPI 3</a>: <a href=\"/docs/vertx-web-api-service/java/\">Vert.x Web API Ser­vice</a>\nre­quests:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-meta\">@WebApiServiceGen</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">TransactionService</span> </span>{\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getTransactionsList</span><span class=\"hljs-params\">(String from, String to, OperationRequest context, Handler&lt;AsyncResult&lt;OperationResponse&gt;&gt; resultHandler)</span></span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">putTransaction</span><span class=\"hljs-params\">(JsonObject body, OperationRequest context, Handler&lt;AsyncResult&lt;OperationResponse&gt;&gt; resultHandler)</span></span>;\n}\n</code></pre><p>The <code>OpenAPI3RouterFactory</code> web router be­comes an API gate­way send­ing re­quests di­rectly to your ser­vices.</p><p>These ser­vices are pow­ered by the Vert.x <a href=\"/docs/vertx-core/java/#event_bus\">event bus</a> and ben­e­fits\nfrom fea­tures like load bal­anc­ing and clus­ter­ing.</p><p>Check the <a href=\"/docs/vertx-web-api-service/java/\">com­plete doc­u­men­ta­tion</a> for more de­tails (a tu­to­r­ial post is com­ing soon!)</p><h4 id=\"web-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#web-client\"></a>Web Client</h4><p>Our beloved <a href=\"/docs/vertx-web-client/java/\">We­b­Client</a> is now ca­pa­ble of han­dling client ses­sions. The\n<code>WebClientSession</code> is a client ex­ten­sion that is very help­ful when you need to man­age cook­ies on the client side.</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// The session is created per user</span>\n<span class=\"hljs-comment\">// from now on cookies are handled by the session</span>\nWebClientSession session = WebClientSession.create(client);\n</code></pre><p>Cherry on the cake, the web client is now ca­pa­ble of per­form­ing server side re­sponse checks using <em>re­sponse pred­i­cates</em>:</p><pre><code class=\"hljs language-java\">client\n  .get(<span class=\"hljs-number\">8080</span>, <span class=\"hljs-string\">&quot;myserver.mycompany.com&quot;</span>, <span class=\"hljs-string\">&quot;/some-uri&quot;</span>)\n  .expect(ResponsePredicate.SC_SUCCESS)\n  .expect(ResponsePredicate.JSON)\n  .send(result -&gt; { ... });\n</code></pre><p>The server side re­sponse must val­i­date the ex­pec­ta­tions de­fined be­fore send­ing the re­quest in order to make the re­sponse\nsuc­cess­ful, re­liev­ing the user code to per­form these checks man­u­ally. Of course many out of box ex­peca­tions are pro­vided\nand you can al­ways cre­ate your own to im­ple­ment cus­tom checks.</p><h4 id=\"use-templating-everywhere\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#use-templating-everywhere\"></a>Use templating everywhere</h4><p>Tem­plate en­gines can now be used out­side the realm of Vert.x Web.\nOne great use case is to use them to gen­er­ate email con­tent:</p><pre><code class=\"hljs language-java\">TemplateEngine template = ...\n\ntemplate.render(<span class=\"hljs-keyword\">new</span> JsonObject(), <span class=\"hljs-string\">&quot;my-template.txt, res -&gt; {\n   // Send result with the Vert.x Mail client\n});\n</span></code></pre><h4 id=\"openid-connect-discovery\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#openid-connect-discovery\"></a>OpenID Connect Discovery</h4><p><a href=\"/docs/vertx-auth-oauth2/java/\">Oauth2</a> has been greatly en­hanced to sup­port more of OpenID Con­nect, the most noti­ci­ble is the sup­port of <code>OpenID Connect Discovery 1.0</code>.</p><p>What this means for the end user is that, con­fig­u­ra­tion is now a triv­ial task, as it is ”<em>dis­coverd</em>” from the server, e.g.:</p><pre><code class=\"hljs language-java\">OpenIDConnectAuth.discover(vertx,\n  <span class=\"hljs-keyword\">new</span> OAuth2ClientOptions()\n    .setSite(<span class=\"hljs-string\">&quot;https://accounts.google.com&quot;</span>)\n    .setClientID(<span class=\"hljs-string\">&quot;clientId&quot;</span>),\n  res -&gt; {\n    <span class=\"hljs-keyword\">if</span> (res.succeeded()) {\n      <span class=\"hljs-comment\">// the setup call succeeded.</span>\n      <span class=\"hljs-comment\">// at this moment your auth is ready to use and</span>\n      <span class=\"hljs-comment\">// google signature keys are loaded so tokens can be decoded and verified.</span>\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-comment\">// the setup failed.</span>\n    }\n});\n</code></pre><p>If you know your <strong>cli­en­tId</strong> and your provider server URL (of course), all the re­main­ing en­doints, key sig­na­ture al­go­rithms and <em>JSON Web Keys</em> are “dis­cov­ered” for you and\ncon­fig­ured to the auth provider.</p><h4 id=\"password-hashing-strategy\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#password-hashing-strategy\"></a>Password Hashing strategy</h4><p>Vert.x auth com­po­nents now sup­port user de­fined pass­word hash­ing strate­gies, If you’re not happy with the pro­vided im­ple­men­ta­tions: <code>SHA512</code> or <code>PKDBF2</code> you can now pro­vide your own strat­egy\nso it can be used with <code>JDBC</code> or <code>Mongo</code> auth.</p><p>The hash ver­i­fi­ca­tion al­go­rithm has been im­proved to be time con­stant, re­gard­less of the re­sult, which pro­tects Vert.x\nap­pli­ca­tions from hash tim­ing at­tacks.</p><h4 id=\"externalized-configuration-of-vertx-options\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#externalized-configuration-of-vertx-options\"></a>Externalized configuration of Vert.x options</h4><p>Whether you run your Vert.x app with the CLI or as an ex­e­cutable JAR with the <code>Launcher</code>, you can now pro­vide Vert.x\nop­tions as a com­mand line pa­ra­me­ter:</p><pre><code class=\"hljs language-gradle\">java -jar my-app.jar -<span class=\"hljs-keyword\">options</span> <span class=\"hljs-regexp\">/path/</span>to<span class=\"hljs-regexp\">/my/</span><span class=\"hljs-keyword\">file</span>.json\n</code></pre><p>Or with the CLI:</p><pre><code class=\"hljs language-gradle\">vertx run my-verticle.js -<span class=\"hljs-keyword\">options</span> <span class=\"hljs-regexp\">/path/</span>to<span class=\"hljs-regexp\">/my/</span><span class=\"hljs-keyword\">file</span>.json\n</code></pre><p>This is par­tic­u­larly use­ful for com­plex clus­tered event-​bus se­tups (en­cryp­tion, pub­lic host vs clus­ter host…).</p><h4 id=\"and-more\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#and-more\"></a>And more…</h4><p>Here are some other im­por­tant im­prove­ments you can find in this re­lease:</p><ul><li>Java 11 sup­port (un­less a Vert.x mod­ule de­pends on a third-​party de­pen­dency that does not sup­port it yet)</li><li>Hazel­cast Clus­ter Man­ager <a href=\"/docs/vertx-hazelcast/java/#_using_lite_members\">sup­port for lite mem­bers</a></li><li><a href=\"/blog/simplified-database-transaction-management-with-the-vert-x-rxjava-api/\">Sim­pli­fied data­base trans­ac­tion man­age­ment</a> with the Vert.x <em>Rx­i­fied</em> API</li><li>Event-​bus in­ter­cep­tors</li><li>Doc­u­men­ta­tion im­prove­ments<ul><li>Clus­ter ad­min­is­tra­tion with <a href=\"/docs/vertx-infinispan/java/#_cluster_administration\">In­fin­is­pan</a> and <a href=\"/docs/vertx-hazelcast/java/#_cluster_administration\">Hazel­cast</a> clus­ter man­agers</li><li><em>Rx­i­fied</em> API in the Vert.x <a href=\"/docs/vertx-kafka-client/java/#_rxjava_2_api\">Kafka</a>, <a href=\"/docs/vertx-web-client/java/#_rxjava_2_api\">Web</a> and <a href=\"/docs/vertx-mongo-client/java/#_rxjava_2_api\">Mongo</a> clients</li></ul></li><li>Per­for­mance im­prove­ments</li><li>And ob­vi­ously we have the usual bug fixes!</li></ul><h4 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h4><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/3.6.0-Release-Notes\">3.6.0 re­lease notes</a> can be found on the wiki, as well as the list of <a href=\"https://github.com/vert-x3/wiki/wiki/3.6.0-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a></p><p>Docker im­ages are avail­able on <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>.</p><p>The Vert.x dis­tri­b­u­tion can be down­loaded on the web­site but is also avail­able from <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>The event bus client using the SockJS bridge is avail­able from:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">NPM</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">Bower</a></li><li><a href=\"http://www.webjars.org/\">We­b­Jars</a></li></ul><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.6.0%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.6.0/view\">Bin­tray</a>.</p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"/community/\">chan­nels</a>.</p>","scope":{}}},"prevPost":{"meta":{"title":"The RSS reader tutorial (Step 3)","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"This is the third installment of our Vert.x Cassandra Client tutorial. We will implement the last RSS endpoint serving a list of articles related to a specific channel."},"date":"2018-12-06","slug":"the-rss-reader-tutorial-step-3"},"nextPost":{"meta":{"title":"Eclipse Vert.x 3.5.4","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.5.4, a bug fix release of Vert.x 3.5.x."},"date":"2018-10-03","slug":"eclipse-vert-x-3-5-4"},"relatedPosts":[{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"},{"meta":{"title":"Building services and APIs with AMQP 1.0","category":"guides","authors":[{"name":"Jakub Scholz","github_id":"scholzj"}],"summary":"Microservices and APIs are everywhere. Everyone talks about them, presentation slides are full of them ... some people are actually even building them."},"date":"2017-01-25","slug":"building-services-and-apis-with-amqp-1-0"},{"meta":{"title":"Eclipse Vert.x 4 milestone 5 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are extremely pleased to announce the fifth 4.0 milestone release of Eclipse Vert.x. This release aims to provide a reliable distribution of the current development of Vert.x 4."},"date":"2020-06-10","slug":"eclipse-vert-x-4-milestone-5-released"}]},"__N_SSG":true}