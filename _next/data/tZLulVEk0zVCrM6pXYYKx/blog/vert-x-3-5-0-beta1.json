{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Vert.x 3.5.0.Beta1","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"It's summer time and we have just released Vert.x 3.5.0.Beta1!"},"date":"2017-08-10","slug":"vert-x-3-5-0-beta1","readingTime":{"text":"3 min read","minutes":2.075,"time":124500.00000000001,"words":415},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"It\\u2019s sum\\xADmer time and we have just re\\xADleased Vert.x 3.5.0.Beta1!\"), mdx(\"h2\", {\n    \"id\": \"lets-go-rxjava2\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#lets-go-rxjava2\"\n  })), \"Let\\u2019s go RxJava2\"), mdx(\"p\", null, \"First and fore\\xADmost this re\\xADlease de\\xADliv\\xADers the Rx\\xADJava2 API with sup\\xADport of its full range of types.\"), mdx(\"p\", null, \"In ad\\xADdi\\xADtion of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Single\"), \", Rx\\xADi\\xADfied APIs ex\\xADpose also the\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Completable\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Maybe\"), \" types\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// expose Handler<AsyncResult<Void>>\"), \"\\nCompletable completable = server.rxClose();\\n\\ncompletable.subscribe(() -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"closed\\\"\"), \"));\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// expose Handler<AsyncResult<String>> where the result can be null\"), \"\\nMaybe<String> ipAddress = dnsClient.rxLookup(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"www.google.com\\\"\"), \");\\nipAddress.subscribe(\\n  value -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"resolved to \\\"\"), \" + value),\\n  err -> err.printStackTrace(),\\n  () -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"does not resolve\\\"\"), \"));\\n\")), mdx(\"p\", null, \"Rx\\xADJava aug\\xADments Vert.x streams with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"toObservable()\"), \" method, Rx\\xADJava2 adds the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"toFlowable()\"), \" method:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Flowable<Buffer> maps to a ReadStream<Buffer>\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// back-pressured stream\"), \"\\nFlowable<Buffer> flowable = asyncFile.toFlowable();\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// but we still can get an Observable<Buffer>\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// non back-pressured stream\"), \"\\nObservable<Buffer> flowable = asyncFile.toObservable();\\n\")), mdx(\"p\", null, \"What\\u2019s so dif\\xADfer\\xADent be\\xADtween \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Flowable\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Observable\"), \" ? the for\\xADmer han\\xADdles back-\\u200Bpressure, i.e the\\nsub\\xADscriber can con\\xADtrol the flow of items and the later can not!!!\"), mdx(\"p\", null, \"You can read the doc\\xADu\\xADmen\\xADta\\xADtion in the beta sec\\xADtion of the \", mdx(Link, {\n    href: \"/docs/3.5.0.Beta1/vertx-rx/java2/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"docs\")), \"\\nor go straight to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/rxjava2-examples\"\n  }), \"ex\\xADam\\xADples\")), mdx(\"h2\", {\n    \"id\": \"mqtt-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#mqtt-client\"\n  })), \"MQTT Client\"), mdx(\"p\", null, \"In Vert.x 3.4 we added the MQTT server, 3.5 com\\xADpletes the MQTT story with the MQTT client:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"MqttClient mqttClient = MqttClient.create(vertx,\\n   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" MqttClientOptions()\\n     .setPort(BROKER_PORT)\\n     .setHost(BROKER_HOST)).connect(ar ->\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Connected to a server\\\"\"), \");\\n\\n    mqttClient.publish(\\n      MQTT_TOPIC,\\n      Buffer.buffer(MQTT_MESSAGE),\\n      MqttQoS.AT_MOST_ONCE,\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"false\"), \",\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"false\"), \",\\n      s -> mqttClient.disconnect(d -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Disconnected from server\\\"\"), \")));\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Failed to connect to a server\\\"\"), \");\\n    ar.cause().printStackTrace();\\n  }\\n});\\n\")), mdx(\"p\", null, \"You can find MQTT client and server ex\\xADam\\xADples \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/mqtt-examples\"\n  }), \"here\")), mdx(\"h2\", {\n    \"id\": \"auth-handler-chaining\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#auth-handler-chaining\"\n  })), \"Auth handler chaining\"), mdx(\"p\", null, \"There are times when you want to sup\\xADport mul\\xADti\\xADple authN/authZ mech\\xADa\\xADnisms in a sin\\xADgle ap\\xADpli\\xADca\\xADtion.\"), mdx(\"p\", null, \"Vert.x Web sup\\xADports auth han\\xADdlers \", mdx(Link, {\n    href: \"/docs/3.5.0.Beta1/vertx-web/java/#_chaining_multiple_auth_handlers\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"chain\\xADing\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"ChainAuthHandler chain = ChainAuthHandler.create();\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// add http basic auth handler to the chain\"), \"\\nchain.append(BasicAuthHandler.create(provider));\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// add form redirect auth handler to the chain\"), \"\\nchain.append(RedirectAuthHandler.create(provider));\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// secure your route\"), \"\\nrouter.route(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/secure/resource\\\"\"), \").handler(chain);\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// your app\"), \"\\nrouter.route(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/secure/resource\\\"\"), \").handler(ctx -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// do something...\"), \"\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"This beta also pro\\xADvides\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vert.x Con\\xADfig stores for Vault and Con\\xADsul\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Up\\xADgrade to Hazel\\xADcast 3.8.2\")), mdx(\"h2\", {\n    \"id\": \"use-it\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#use-it\"\n  })), \"Use it!\"), mdx(\"p\", null, \"You can use and con\\xADsume it in your projects from Maven or Gra\\xADdle as usual with the ver\\xADsion \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"3.5.0.Beta1\"), \" or read\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(Link, {\n    href: \"/docs/index-beta.html\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"doc\\xADu\\xADmen\\xADta\\xADtion pre\\xADview\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"see the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1\"\n  }), \"ex\\xADam\\xADples\"))), mdx(\"p\", null, \"You can also down\\xADload var\\xADi\\xADous bi\\xADna\\xADries from Maven Cen\\xADtral:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1.tar.gz\"\n  }), \"base dis\\xADtrib\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-full.tar.gz\"\n  }), \"full dis\\xADtrib\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-docs.zip\"\n  }), \"docs zip\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-stack-scala.tar.gz\"\n  }), \"scala dis\\xADtrib\"))), mdx(\"p\", null, \"as usual feed\\xADback is very im\\xADpor\\xADtant to us and one goal of this beta re\\xADlease is to let the com\\xADmu\\xADnity\\npro\\xADvide early feed\\xADback!\"), mdx(\"p\", null, \"The final is ex\\xADpected at the be\\xADgin\\xADning of Oc\\xADto\\xADber.\"), mdx(\"p\", null, \"Enjoy\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>It’s sum­mer time and we have just re­leased Vert.x 3.5.0.Beta1!</p><h2 id=\"lets-go-rxjava2\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#lets-go-rxjava2\"></a>Let’s go RxJava2</h2><p>First and fore­most this re­lease de­liv­ers the Rx­Java2 API with sup­port of its full range of types.</p><p>In ad­di­tion of <code>Single</code>, Rx­i­fied APIs ex­pose also the<code>Completable</code> and <code>Maybe</code> types</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// expose Handler&lt;AsyncResult&lt;Void&gt;&gt;</span>\nCompletable completable = server.rxClose();\n\ncompletable.subscribe(() -&gt; System.out.println(<span class=\"hljs-string\">&quot;closed&quot;</span>));\n\n<span class=\"hljs-comment\">// expose Handler&lt;AsyncResult&lt;String&gt;&gt; where the result can be null</span>\nMaybe&lt;String&gt; ipAddress = dnsClient.rxLookup(<span class=\"hljs-string\">&quot;www.google.com&quot;</span>);\nipAddress.subscribe(\n  value -&gt; System.out.println(<span class=\"hljs-string\">&quot;resolved to &quot;</span> + value),\n  err -&gt; err.printStackTrace(),\n  () -&gt; System.out.println(<span class=\"hljs-string\">&quot;does not resolve&quot;</span>));\n</code></pre><p>Rx­Java aug­ments Vert.x streams with a <code>toObservable()</code> method, Rx­Java2 adds the <code>toFlowable()</code> method:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Flowable&lt;Buffer&gt; maps to a ReadStream&lt;Buffer&gt;</span>\n<span class=\"hljs-comment\">// back-pressured stream</span>\nFlowable&lt;Buffer&gt; flowable = asyncFile.toFlowable();\n\n<span class=\"hljs-comment\">// but we still can get an Observable&lt;Buffer&gt;</span>\n<span class=\"hljs-comment\">// non back-pressured stream</span>\nObservable&lt;Buffer&gt; flowable = asyncFile.toObservable();\n</code></pre><p>What’s so dif­fer­ent be­tween <code>Flowable</code> and <code>Observable</code> ? the for­mer han­dles back-​pressure, i.e the\nsub­scriber can con­trol the flow of items and the later can not!!!</p><p>You can read the doc­u­men­ta­tion in the beta sec­tion of the <a href=\"/docs/3.5.0.Beta1/vertx-rx/java2/\">docs</a>\nor go straight to the <a href=\"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/rxjava2-examples\">ex­am­ples</a></p><h2 id=\"mqtt-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#mqtt-client\"></a>MQTT Client</h2><p>In Vert.x 3.4 we added the MQTT server, 3.5 com­pletes the MQTT story with the MQTT client:</p><pre><code class=\"hljs language-java\">MqttClient mqttClient = MqttClient.create(vertx,\n   <span class=\"hljs-keyword\">new</span> MqttClientOptions()\n     .setPort(BROKER_PORT)\n     .setHost(BROKER_HOST)).connect(ar -&gt;\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    System.out.println(<span class=\"hljs-string\">&quot;Connected to a server&quot;</span>);\n\n    mqttClient.publish(\n      MQTT_TOPIC,\n      Buffer.buffer(MQTT_MESSAGE),\n      MqttQoS.AT_MOST_ONCE,\n      <span class=\"hljs-keyword\">false</span>,\n      <span class=\"hljs-keyword\">false</span>,\n      s -&gt; mqttClient.disconnect(d -&gt; System.out.println(<span class=\"hljs-string\">&quot;Disconnected from server&quot;</span>)));\n  } <span class=\"hljs-keyword\">else</span> {\n    System.out.println(<span class=\"hljs-string\">&quot;Failed to connect to a server&quot;</span>);\n    ar.cause().printStackTrace();\n  }\n});\n</code></pre><p>You can find MQTT client and server ex­am­ples <a href=\"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/mqtt-examples\">here</a></p><h2 id=\"auth-handler-chaining\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#auth-handler-chaining\"></a>Auth handler chaining</h2><p>There are times when you want to sup­port mul­ti­ple authN/authZ mech­a­nisms in a sin­gle ap­pli­ca­tion.</p><p>Vert.x Web sup­ports auth han­dlers <a href=\"/docs/3.5.0.Beta1/vertx-web/java/#_chaining_multiple_auth_handlers\">chain­ing</a></p><pre><code class=\"hljs language-java\">ChainAuthHandler chain = ChainAuthHandler.create();\n\n<span class=\"hljs-comment\">// add http basic auth handler to the chain</span>\nchain.append(BasicAuthHandler.create(provider));\n\n<span class=\"hljs-comment\">// add form redirect auth handler to the chain</span>\nchain.append(RedirectAuthHandler.create(provider));\n\n<span class=\"hljs-comment\">// secure your route</span>\nrouter.route(<span class=\"hljs-string\">&quot;/secure/resource&quot;</span>).handler(chain);\n\n<span class=\"hljs-comment\">// your app</span>\nrouter.route(<span class=\"hljs-string\">&quot;/secure/resource&quot;</span>).handler(ctx -&gt; {\n  <span class=\"hljs-comment\">// do something...</span>\n});\n</code></pre><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>This beta also pro­vides</p><ul><li>Vert.x Con­fig stores for Vault and Con­sul</li><li>Up­grade to Hazel­cast 3.8.2</li></ul><h2 id=\"use-it\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#use-it\"></a>Use it!</h2><p>You can use and con­sume it in your projects from Maven or Gra­dle as usual with the ver­sion <code>3.5.0.Beta1</code> or read</p><ul><li>the <a href=\"/docs/index-beta.html\">doc­u­men­ta­tion pre­view</a></li><li>see the <a href=\"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1\">ex­am­ples</a></li></ul><p>You can also down­load var­i­ous bi­na­ries from Maven Cen­tral:</p><ul><li><a href=\"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1.tar.gz\">base dis­trib</a></li><li><a href=\"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-full.tar.gz\">full dis­trib</a></li><li><a href=\"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-docs.zip\">docs zip</a></li><li><a href=\"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-stack-scala.tar.gz\">scala dis­trib</a></li></ul><p>as usual feed­back is very im­por­tant to us and one goal of this beta re­lease is to let the com­mu­nity\npro­vide early feed­back!</p><p>The final is ex­pected at the be­gin­ning of Oc­to­ber.</p><p>Enjoy</p>","scope":{}}},"prevPost":{"meta":{"title":"Introducing Vert.x MQTT client","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this article, we will see how to set up the new Vert.x MQTT client. An example project is available on GitHub."},"date":"2017-08-21","slug":"introducing-vert-x-mqtt-client"},"nextPost":{"meta":{"title":"OpenAPI (fka Swagger) 3 support in Eclipse Vert.x now in test stage!","category":"guides","authors":[{"name":"Francesco Guardiani","github_id":"slinkydeveloper"}],"summary":"As GSoC 2017's student, I'm working on an embedded support to OpenAPI 3 standard inside Eclipse Vert.x framework. Now, after a lot of work, you can try it!"},"date":"2017-07-04","slug":"openapi-fka-swagger-3-support-in-eclipse-vert-x-now-in-test-stage"},"relatedPosts":[{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"},{"meta":{"title":"Combine vert.x and mongo to build a giant","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This blog post is part of the introduction to Vert.x series. We are now going to replace this JDBC client by the vertx-mongo-client, and thus connect to a Mongo database."},"date":"2015-11-30","slug":"combine-vert-x-and-mongo-to-build-a-giant"},{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"}]},"__N_SSG":true}