{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Vert.x 3 and Azure cloud platform tutorial","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"Vert.x 3.2.1 applications can quickly be deployed on Microsoft Azure. Deployment is independent of your build so it is all about configuration."},"date":"2016-03-17","slug":"vertx-3-and-azure-cloud-platform-tutorial","readingTime":{"text":"1 min read","minutes":0.585,"time":35099.99999999999,"words":117},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Vert.x 3.2.1 ap\\xADpli\\xADca\\xADtions can quickly be de\\xADployed on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://portal.azure.com/\"\n  }), \"Mi\\xADcrosoft Azure\"), \". De\\xADploy\\xADment is in\\xADde\\xADpen\\xADdent of your build so it is all about con\\xADfig\\xADu\\xADra\\xADtion.\"), mdx(\"h2\", {\n    \"id\": \"about-azure\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#about-azure\"\n  })), \"About Azure\"), mdx(\"p\", null, \"Azure by de\\xADsign does not sup\\xADport \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"multicast\"), \" on the net\\xADwork vir\\xADtu\\xADal\\xADiza\\xADtion level, how\\xADever all vir\\xADtual ma\\xADchines de\\xADfined\\non the same group are de\\xADployed on the same net\\xADwork (by de\\xADfault), so \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TCP-IP\"), \" dis\\xADcov\\xADery can be en\\xADabled and quickly setup\\nto form a clus\\xADter.\"), mdx(\"p\", null, \"This how you would de\\xADploy your app:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"cre\\xADate a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fat-jar\"), \" with your app\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"cre\\xADate a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cluster.xml\"), \" with tcp-\\u200Bip dis\\xADcov\\xADery\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"run your app with: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cp folder_of_your_cluster_xml_file -cluster -cluster-host VM_PRIVATE_IP\"))), mdx(\"h2\", {\n    \"id\": \"screencast\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#screencast\"\n  })), \"Screencast\"), mdx(\"p\", null, \"The fol\\xADlow\\xADing screen\\xADcast \"), mdx(\"div\", {\n    className: \"youtube-embed\"\n  }, mdx(\"iframe\", {\n    src: \"https://www.youtube.com/embed/nGQs_swWwAM\",\n    frameBorder: \"0\",\n    allowFullScreen: true\n  })), mdx(\"p\", null, \"Don\\u2019t for\\xADget to fol\\xADlow our \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/channel/UCGN6L3tRhs92Uer3c6VxOSA\"\n  }), \"youtube chan\\xADnel\"), \"!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>Vert.x 3.2.1 ap­pli­ca­tions can quickly be de­ployed on <a href=\"http://portal.azure.com/\">Mi­crosoft Azure</a>. De­ploy­ment is in­de­pen­dent of your build so it is all about con­fig­u­ra­tion.</p><h2 id=\"about-azure\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#about-azure\"></a>About Azure</h2><p>Azure by de­sign does not sup­port <code>multicast</code> on the net­work vir­tu­al­iza­tion level, how­ever all vir­tual ma­chines de­fined\non the same group are de­ployed on the same net­work (by de­fault), so <code>TCP-IP</code> dis­cov­ery can be en­abled and quickly setup\nto form a clus­ter.</p><p>This how you would de­ploy your app:</p><ol><li>cre­ate a <code>fat-jar</code> with your app</li><li>cre­ate a <code>cluster.xml</code> with tcp-​ip dis­cov­ery</li><li>run your app with: <code>cp folder_of_your_cluster_xml_file -cluster -cluster-host VM_PRIVATE_IP</code></li></ol><h2 id=\"screencast\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#screencast\"></a>Screencast</h2><p>The fol­low­ing screen­cast </p><div class=\"youtube-embed\"><iframe src=\"https://www.youtube.com/embed/nGQs_swWwAM\" frameBorder=\"0\" allowfullscreen=\"\"></iframe></div><p>Don’t for­get to fol­low our <a href=\"https://www.youtube.com/channel/UCGN6L3tRhs92Uer3c6VxOSA\">youtube chan­nel</a>!</p>","scope":{}}},"prevPost":{"meta":{"title":"Vertx 3 and Keycloak tutorial","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"With the upcoming release of Vert.x 3.3 securing your application with Keycloak is even easier than before."},"date":"2016-03-30","slug":"vertx-3-and-keycloak-tutorial"},"nextPost":{"meta":{"title":"Vert.x 3.2.1 is released!","category":"releases","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"We are pleased to announce the release of Vert.x 3.2.1!"},"date":"2016-02-05","slug":"vert-x-3-2-1-is-released"},"relatedPosts":[{"meta":{"title":"Vert.x featuring Continuous Delivery with Jenkins and Ansible","category":"guides","authors":[{"name":"Ricardo Hernandez","github_id":"ricardohmon"}],"summary":"This blog entry describes an approach to adopt Continuous Delivery for Vert.x applications using Jenkins and Ansible by taking advantage of the Jenkins Job DSL and Ansible plugins."},"date":"2016-09-28","slug":"vert-x-featuring-continuous-delivery-with-jenkins-and-ansible"},{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"My first Vert.x 3 Application","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let's say, you heard someone saying that Vert.x is awesome. Ok great, but you may want to try it by yourself. Well, the next natural question is “where do I start ?”"},"date":"2015-07-14","slug":"my-first-vert-x-3-application"}]},"__N_SSG":true}