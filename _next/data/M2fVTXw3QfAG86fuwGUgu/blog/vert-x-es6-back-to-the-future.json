{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Vert.x ES6 back to the future","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"On October 21th, 2015 we all rejoiced with the return from the past of Marty McFly with his flying car and so on, however in the Vert.x world we were quite sad about our rather old JavaScript support."},"date":"2015-11-25","slug":"vert-x-es6-back-to-the-future","readingTime":{"text":"3 min read","minutes":2.42,"time":145200,"words":484},"content":{"compiledSource":"var c=Object.defineProperty,m=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var i=(a,n,s)=>n in a?c(a,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[n]=s,e=(a,n)=>{for(var s in n||(n={}))o.call(n,s)&&i(a,s,n[s]);if(r)for(var s of r(n))p.call(n,s)&&i(a,s,n[s]);return a},l=(a,n)=>m(a,h(n));var d=(a,n)=>{var s={};for(var t in a)o.call(a,t)&&n.indexOf(t)<0&&(s[t]=a[t]);if(a!=null&&r)for(var t of r(a))n.indexOf(t)<0&&p.call(a,t)&&(s[t]=a[t]);return s};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:a}=t,n=d(t,[\"components\"]);return mdx(MDXLayout,l(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"On \",mdx(\"a\",e({parentName:\"p\"},{href:\"http://backtothefuture.wikia.com/wiki/2015\"}),\"Oc\\xADto\\xADber 21th, 2015\"),` we all re\\xADjoiced with the re\\xADturn from the past of\nMarty McFly with his fly\\xADing car and so on, how\\xADever in the Vert.x world we were quite sad that the JavaScript sup\\xADport we\nhave was still using a tech\\xADnol\\xADogy re\\xADleased in `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://en.wikipedia.org/wiki/ECMAScript#Versions\"}),\"De\\xADcem\\xADber 2009\"),`. The\nsup\\xADport for ES5 is not some\\xADthing that we Vert.x team con\\xADtrols but some\\xADthing that is in\\xADher\\xADited from run\\xADning on top of\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"http://openjdk.java.net/projects/nashorn/\"}),\"Nashorn\"),\".\"),mdx(\"p\",null,`With all these nos\\xADtal\\xADgic thoughts on my mind I\\u2019ve de\\xADcided to bring us back to the fu\\xADture and by fu\\xADture I mean, let\\u2019s\nstart using a mod\\xADern JavaScript, or more cor\\xADrectly, let\\u2019s start using `,mdx(\"a\",e({parentName:\"p\"},{href:\"http://es6-features.org/\"}),\"EC\\xADMAScript 6\"),\".\"),mdx(\"p\",null,`It turned out to be quite sim\\xADple to achieve this so I\\u2019ll pick the hello world ex\\xADam\\xADple and write it in ES6 just to show\nhow you can port your code to ES6 and still use the cur\\xADrent Vert.x APIs. Note that Vert.x in\\xADter\\xADnals still are ES5 and\nhave not been touched or mod\\xADi\\xADfied to sup\\xADport any of ES6 fea\\xADtures.`),mdx(\"h2\",e({},{id:\"main\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#main\"})),\"main\"),mdx(\"p\",null,\"Tra\\xADdi\\xADtion\\xADally your \",mdx(\"inlineCode\",{parentName:\"p\"},\"main.js\"),\" file would re\\xADside in the root of your mod\\xADule (this is where \",mdx(\"inlineCode\",{parentName:\"p\"},\"NPM\"),` will look for it by\nde\\xADfault); how\\xADever as we are going to tran\\xADspile to `,mdx(\"inlineCode\",{parentName:\"p\"},\"ES5\"),\" you\\u2019ll want to put your index file in \",mdx(\"inlineCode\",{parentName:\"p\"},\"/src/main.js\"),\".\"),mdx(\"p\",null,\"How\\xADever, be\\xADcause we are tran\\xADspiling to \",mdx(\"inlineCode\",{parentName:\"p\"},\"ES5\"),\", your \",mdx(\"inlineCode\",{parentName:\"p\"},\"package.json\"),\"\\u2019s main block should point to the tran\\xADspiled \",mdx(\"inlineCode\",{parentName:\"p\"},\"index.js\"),`\nfile in the `,mdx(\"inlineCode\",{parentName:\"p\"},\"/lib\"),\" di\\xADrec\\xADtory.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-json\"}),`{\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"name\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"vertx-es6\"'),`,\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"version\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"0.0.1\"'),`,\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"private\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-literal\"}),\"true\"),`,\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"main\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"lib/main.js\"'),`,\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"scripts\"'),`: {\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"build\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"rm -Rf lib && ./node_modules/.bin/babel --out-dir lib src\"'),`,\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"start\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"./node_modules/.bin/vertx run lib/main.js\"'),`\n  },\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"dependencies\"'),`: {\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"vertx3-full\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"3.1.0\"'),`,\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"babel-cli\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"6.2.0\"'),`,\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"babel-preset-es2015\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"6.1.18\"'),`\n  }\n}\n`)),mdx(\"p\",null,`As you can see, the main idea is to in\\xADvoke the tran\\xADspiler (Babel) when we are build\\xADing our project, and run it using the\ngen\\xADer\\xADated files. This is slightly equiv\\xADa\\xADlent to a com\\xADpi\\xADla\\xADtion process you would have using com\\xADpiled lan\\xADguage.`),mdx(\"h2\",e({},{id:\"npmignore\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#npmignore\"})),\".npmignore\"),mdx(\"p\",null,`If you\\u2019re plan\\xADning to de\\xADploy your pack\\xADage to npm ei\\xADther local or pri\\xADvate you should be aware that npm will ex\\xADclude\nany\\xADthing listed on your `,mdx(\"inlineCode\",{parentName:\"p\"},\".gitignore\"),` since we should ig\\xADnore the gen\\xADer\\xADated code from git it need to in\\xADform npm to ig\\xADnore\nthat rule and keep the `,mdx(\"inlineCode\",{parentName:\"p\"},\"lib\"),\" di\\xADrec\\xADtory. The \",mdx(\"inlineCode\",{parentName:\"p\"},\".gitignore\"),\" should be some\\xADthing like:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-text\"}),`/lib\n/node_modules\n`)),mdx(\"p\",null,\"And the \",mdx(\"inlineCode\",{parentName:\"p\"},\".npmignore\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-text\"}),`/.gitignore\n`)),mdx(\"h2\",e({},{id:\"hello-fat-arrows-and-let-keywords\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#hello-fat-arrows-and-let-keywords\"})),\"Hello fat arrows and let keywords\"),mdx(\"p\",null,\"So all the heavy work has been done, in order to cre\\xADate our hello world we just need to code some \",mdx(\"inlineCode\",{parentName:\"p\"},\"ES6\"),` in our\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"src/main.js\"),\" file:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),\" Router = \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-built_in\"}),\"require\"),\"(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"vertx-web-js/router\"'),`);\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),` server = vertx.createHttpServer();\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),` router = Router.router(vertx);\n\nrouter.get(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/\"'),\").handler(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),\"(\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"ctx\"),\") =>\"),` {\n\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"let\"),` response = ctx.response();\n    response.putHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"content-type\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"text/plain\"'),`);\n\n    response.end(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Hello ES6 World!\"'),`);\n});\n\nserver.requestHandler(router.accept).listen(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"8080\"),`);\n`)),mdx(\"p\",null,\"As you can see we\\u2019re using fat ar\\xADrows in\\xADstead of writ\\xADing a func\\xADtion clo\\xADsure and scoped vari\\xADables using \",mdx(\"inlineCode\",{parentName:\"p\"},\"let\"),` key\\xADword. If\nyou now com\\xADpile your project:`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-routeros\"}),\"npm \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-builtin-name\"}),\"run\"),` build\n`)),mdx(\"p\",null,\"And then start it:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-coffeescript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-built_in\"}),\"npm\"),` start\n`)),mdx(\"p\",null,\"You have your first back to the fu\\xADture \",mdx(\"inlineCode\",{parentName:\"p\"},\"ES6\"),\" ver\\xADti\\xADcle!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"prevPost":{"meta":{"title":"Combine vert.x and mongo to build a giant","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This blog post is part of the introduction to Vert.x series. We are now going to replace this JDBC client by the vertx-mongo-client, and thus connect to a Mongo database."},"date":"2015-11-30","slug":"combine-vert-x-and-mongo-to-build-a-giant"},"nextPost":{"meta":{"title":"Using the asynchronous SQL client","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Finally, back... This post is the fifth post of the introduction to vert.x blog series, after a not-that-small break. In this post we are going to see how we can use JDBC in a vert.x application."},"date":"2015-10-19","slug":"using-the-asynchronous-sql-client"},"relatedPosts":[{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"},{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Using the asynchronous SQL client","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Finally, back... This post is the fifth post of the introduction to vert.x blog series, after a not-that-small break. In this post we are going to see how we can use JDBC in a vert.x application."},"date":"2015-10-19","slug":"using-the-asynchronous-sql-client"}]},"__N_SSG":true}