{"pageProps":{"slug":"4.1.4/vertx-http-proxy/java","title":"Vert.x Http Proxy","fallbackGitHubStars":null,"toc":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_using_vert_x_http_proxy\">Using Vert.x Http Proxy</a></li>\n<li><a href=\"#_basic_http_proxy\">Basic Http Proxy</a></li>\n<li><a href=\"#_origin_server\">Origin Server</a></li>\n<li><a href=\"#_proxy_server_with_httpproxy\">Proxy Server With <code>HttpProxy</code></a></li>\n</ul>\n</div>","contents":"<h1>Vert.x Http Proxy</h1>\n\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x Http Proxy is a reverse proxy based on Vert.x, it aims to implement reusable reverse proxy logic to focus on\nhigher concerns.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">警告</div>\n</td>\n<td class=\"content\">\nThis module has <em>Tech Preview</em> status, this means the API can change between versions.\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_using_vert_x_http_proxy\"><a class=\"anchor\" href=\"#_using_vert_x_http_proxy\"></a>Using Vert.x Http Proxy</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>To use Vert.x Http Proxy, add the following dependency to the <em>dependencies</em> section of your build descriptor:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Maven (in your <code>pom.xml</code>):</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-xml\" data-lang=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-http-proxy<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.1.4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span></code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Gradle (in your <code>build.gradle</code> file):</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-groovy\" data-lang=\"groovy\">dependencies {\n compile <span class=\"hljs-string\">&#x27;io.vertx:vertx-http-proxy:4.1.4&#x27;</span>\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_basic_http_proxy\"><a class=\"anchor\" href=\"#_basic_http_proxy\"></a>Basic Http Proxy</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>In order to accomplish a reverse proxy with Vert.x Http Proxy you need the following:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p><strong>Proxy Server</strong> that handles outbound requests and forward them to the <strong>origin server</strong> using <code>HttpProxy</code> instance.</p>\n</li>\n<li>\n<p><strong>Origin Server</strong> that handles requests from the <strong>proxy server</strong> and handles responses accordingly.</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>Now, you have the overall concept so let&#8217;s dive in implementation and begin with <strong>origin server</strong> then\nthe <strong>proxy server</strong> with <code>HttpProxy</code>:</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_origin_server\"><a class=\"anchor\" href=\"#_origin_server\"></a>Origin Server</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>You simply create the <strong>origin server</strong> that listens to port <code>7070</code></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">HttpServer originServer = vertx.createHttpServer();\n\noriginServer.requestHandler(req -&gt; {\n  req.response()\n    .putHeader(<span class=\"hljs-string\">&quot;content-type&quot;</span>, <span class=\"hljs-string\">&quot;text/html&quot;</span>)\n    .end(<span class=\"hljs-string\">&quot;&lt;html&gt;&lt;body&gt;&lt;h1&gt;I&#x27;m the target resource!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span>);\n}).listen(<span class=\"hljs-number\">7070</span>);</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_proxy_server_with_httpproxy\"><a class=\"anchor\" href=\"#_proxy_server_with_httpproxy\"></a>Proxy Server With <code>HttpProxy</code></h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Create the <strong>proxy server</strong> that listens to port <code>8080</code> with <code>HttpProxy</code> instance that handles reverse proxy logic\naccordingly.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">HttpClient proxyClient = vertx.createHttpClient();\n\nHttpProxy proxy = HttpProxy.reverseProxy(proxyClient);\nproxy.origin(<span class=\"hljs-number\">7070</span>, <span class=\"hljs-string\">&quot;origin&quot;</span>);\n\nHttpServer proxyServer = vertx.createHttpServer();\n\nproxyServer.requestHandler(proxy).listen(<span class=\"hljs-number\">8080</span>);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Finally, all outbound requests will be forwarded as a reverse proxy to the <strong>origin server</strong> conveniently.</p>\n</div>\n</div>\n</div>","version":"4.1.4"},"__N_SSG":true}