{"pageProps":{"slug":"3.8.4/vertx-ignite/java","title":"Apache Ignite Cluster Manager for Vert.x","fallbackGitHubStars":null,"toc":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_using_ignite_cluster_manager\">Using Ignite cluster manager</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_using_vert_x_from_command_line\">Using Vert.x from command line</a></li>\n<li><a href=\"#_using_vert_x_in_maven_or_gradle_project\">Using Vert.x in Maven or Gradle project</a></li>\n<li><a href=\"#_programmatically_specifying_cluster_manager\">Programmatically specifying cluster manager</a></li>\n</ul>\n</li>\n<li><a href=\"#_configuring_cluster_manager\">Configuring cluster manager</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_using_configuration_file\">Using configuration file</a></li>\n<li><a href=\"#_configuring_programmatically\">Configuring programmatically</a></li>\n<li><a href=\"#_discovery_and_network_transport_configuration\">Discovery and network transport configuration</a></li>\n</ul>\n</li>\n<li><a href=\"#_trouble_shooting_clustering\">Trouble shooting clustering</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_multicast_not_enabled_on_the_machine\">Multicast not enabled on the machine.</a></li>\n<li><a href=\"#_using_wrong_network_interface\">Using wrong network interface</a></li>\n<li><a href=\"#_using_a_vpn\">Using a VPN</a></li>\n<li><a href=\"#_when_multicast_is_not_available\">When multicast is not available</a></li>\n<li><a href=\"#_enabling_logging\">Enabling logging</a></li>\n</ul>\n</li>\n</ul>\n</div>","contents":"<h1>Apache Ignite Cluster Manager for Vert.x</h1>\n\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This is a cluster manager implementation for Vert.x that uses <a href=\"http://ignite.apache.org/index.html\">Apache Ignite</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>In Vert.x a cluster manager is used for various functions including:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Discovery and group membership of Vert.x nodes in a cluster</p>\n</li>\n<li>\n<p>Maintaining cluster wide topic subscriber lists (so we know which nodes are interested in which event bus\naddresses)</p>\n</li>\n<li>\n<p>Distributed Map support</p>\n</li>\n<li>\n<p>Distributed Locks</p>\n</li>\n<li>\n<p>Distributed Counters</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Cluster managersdo not* handle the event bus inter-node transport, this is done directly by Vert.x with TCP\nconnections.</p>\n</div>\n<div class=\"paragraph\">\n<p>Vert.x cluster manager is a pluggable component, so you can pick the one you want, or the one that is the most\nadapted to your environment. So you can replace default Vert.x cluster manager by this implementation.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_using_ignite_cluster_manager\"><a class=\"anchor\" href=\"#_using_ignite_cluster_manager\"></a>Using Ignite cluster manager</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>If the jar is on your classpath then Vert.x will automatically detect this and use it as the cluster manager.\nPlease make sure you donâ€™t have any other cluster managers on your classpath or Vert.x might choose the wrong one.</p>\n</div>\n<div class=\"paragraph\">\n<p>Alternatively, you can configure the following system property to instruct vert.x to use this cluster manager:\n<code>-Dvertx.clusterManagerFactory=io.vertx.spi.cluster.ignite.IgniteClusterManager</code></p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_using_vert_x_from_command_line\"><a class=\"anchor\" href=\"#_using_vert_x_from_command_line\"></a>Using Vert.x from command line</h3>\n<div class=\"paragraph\">\n<p><code>vertx-ignite-3.8.4.jar</code> should be in the <code>lib</code> directory of the Vert.x installation.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_using_vert_x_in_maven_or_gradle_project\"><a class=\"anchor\" href=\"#_using_vert_x_in_maven_or_gradle_project\"></a>Using Vert.x in Maven or Gradle project</h3>\n<div class=\"paragraph\">\n<p>Add a dependency to the artifact.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Maven (in your <code>pom.xml</code>):</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-xml\" data-lang=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-ignite<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.8.4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span></code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Gradle (in your <code>build.gradle</code> file):</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-groovy\" data-lang=\"groovy\">compile <span class=\"hljs-string\">'io.vertx:vertx-ignite:3.8.4'</span></code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_programmatically_specifying_cluster_manager\"><a class=\"anchor\" href=\"#_programmatically_specifying_cluster_manager\"></a>Programmatically specifying cluster manager</h3>\n<div class=\"paragraph\">\n<p>You can also specify the cluster manager programmatically. In order to do this just specify it on the options\nwhen you are creating your Vert.x instance, for example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">ClusterManager clusterManager = <span class=\"hljs-keyword\">new</span> IgniteClusterManager();\n\nVertxOptions options = <span class=\"hljs-keyword\">new</span> VertxOptions().setClusterManager(clusterManager);\nVertx.clusteredVertx(options, res -&gt; {\n <span class=\"hljs-keyword\">if</span> (res.succeeded()) {\n   Vertx vertx = res.result();\n } <span class=\"hljs-keyword\">else</span> {\n   <span class=\"hljs-comment\">// failed!</span>\n }\n});</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_configuring_cluster_manager\"><a class=\"anchor\" href=\"#_configuring_cluster_manager\"></a>Configuring cluster manager</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Note: Starting with version 2.0, Apache Ignite has introduced a new off-heap memory architecture. All caches use\noff-heap memory by default. New memory architecture is described in\n<a href=\"https://apacheignite.readme.io/docs/page-memory\">Ignite Virtual Memory</a> article.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_using_configuration_file\"><a class=\"anchor\" href=\"#_using_configuration_file\"></a>Using configuration file</h3>\n<div class=\"paragraph\">\n<p>The cluster manager is configured by a file <code>default-ignite.xml</code> which is packaged inside the jar.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you want to override this configuration you can provide <code>ignite.xml</code> file on your classpath and this will be\nused instead.</p>\n</div>\n<div class=\"paragraph\">\n<p>The xml file is a Ignite configuration file and is described in details in\n<a href=\"https://apacheignite.readme.io/docs\">Apache Ignite documentation</a>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_configuring_programmatically\"><a class=\"anchor\" href=\"#_configuring_programmatically\"></a>Configuring programmatically</h3>\n<div class=\"paragraph\">\n<p>You can also specify configuration programmatically:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">IgniteConfiguration cfg = <span class=\"hljs-keyword\">new</span> IgniteConfiguration();\n<span class=\"hljs-comment\">// Configuration code (omitted)</span>\n\nClusterManager clusterManager = <span class=\"hljs-keyword\">new</span> IgniteClusterManager(cfg);\n\nVertxOptions options = <span class=\"hljs-keyword\">new</span> VertxOptions().setClusterManager(clusterManager);\nVertx.clusteredVertx(options, res -&gt; {\n <span class=\"hljs-keyword\">if</span> (res.succeeded()) {\n   Vertx vertx = res.result();\n } <span class=\"hljs-keyword\">else</span> {\n   <span class=\"hljs-comment\">// failed!</span>\n }\n});</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_discovery_and_network_transport_configuration\"><a class=\"anchor\" href=\"#_discovery_and_network_transport_configuration\"></a>Discovery and network transport configuration</h3>\n<div class=\"paragraph\">\n<p>The default configuration uses <code>TcpDiscoveryMulticastIpFinder</code> so you must have multicast enabled on your network.\nFor cases when multicast is disabled <code>TcpDiscoveryVmIpFinder</code> should be used with pre-configured list of IP addresses.\nPlease see <a href=\"http://apacheignite.readme.io/docs/cluster-config\">Cluster Configuration</a> section\nat Apache Ignite documentation for details.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_trouble_shooting_clustering\"><a class=\"anchor\" href=\"#_trouble_shooting_clustering\"></a>Trouble shooting clustering</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>If the default multicast configuration is not working here are some common causes:</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_multicast_not_enabled_on_the_machine\"><a class=\"anchor\" href=\"#_multicast_not_enabled_on_the_machine\"></a>Multicast not enabled on the machine.</h3>\n<div class=\"paragraph\">\n<p>By default the cluster manager is using <code>TcpDiscoveryMulticastIpFinder</code>, so IP multicasting is required,\non some systems, multicast route(s) need to be added to the routing table otherwise, the default route will be used.</p>\n</div>\n<div class=\"paragraph\">\n<p>Note that some systems don&#8217;t consult the routing table for IP multicast routing, only for unicast routing</p>\n</div>\n<div class=\"paragraph\">\n<p>MacOS example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre># Adds a multicast route for 224.0.0.1-231.255.255.254\nsudo route add -net 224.0.0.0/5 127.0.0.1\n\n# Adds a multicast route for 232.0.0.1-239.255.255.254\nsudo route add -net 232.0.0.0/5 192.168.1.3</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Please google for more information.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_using_wrong_network_interface\"><a class=\"anchor\" href=\"#_using_wrong_network_interface\"></a>Using wrong network interface</h3>\n<div class=\"paragraph\">\n<p>If you have more than one network interface on your machine (and this can also be the case if you are running\nVPN software on your machine), then Apache Ignite may be using the wrong one.</p>\n</div>\n<div class=\"paragraph\">\n<p>To tell Ignite to use a specific interface you can provide the IP address of the interface to the\nbean of <code>IgniteConfiguration</code> type using <code>localHost</code> property. For example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>&lt;bean class=\"org.apache.ignite.configuration.IgniteConfiguration\"&gt;\n &lt;property name=\"localHost\" value=\"192.168.1.20\"/&gt;\n&lt;/bean&gt;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>When running Vert.x is in clustered mode, you should also make sure that Vert.x knows about the correct interface.\nWhen running at the command line this is done by specifying the <code>cluster-host</code> option:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>vertx run myverticle.js -cluster -cluster-host your-ip-address</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Where <code>your-ip-address</code> is the same IP address you specified in the Apache Ignite configuration.</p>\n</div>\n<div class=\"paragraph\">\n<p>If using Vert.x programmatically you can specify this using <code><a href=\"../../apidocs/io/vertx/core/VertxOptions.html#setClusterHost-java.lang.String-\">setClusterHost</a></code>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_using_a_vpn\"><a class=\"anchor\" href=\"#_using_a_vpn\"></a>Using a VPN</h3>\n<div class=\"paragraph\">\n<p>This is a variation of the above case. VPN software often works by creating a virtual network interface which often\ndoesn&#8217;t support multicast. If you have a VPN running and you do not specify the correct interface to use in both the\nIgnite configuration and to Vert.x then the VPN interface may be chosen instead of the correct interface.</p>\n</div>\n<div class=\"paragraph\">\n<p>So, if you have a VPN running you may have to configure both the Ignite and Vert.x to use the correct interface as\ndescribed in the previous section.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_when_multicast_is_not_available\"><a class=\"anchor\" href=\"#_when_multicast_is_not_available\"></a>When multicast is not available</h3>\n<div class=\"paragraph\">\n<p>In some cases you may not be able to use multicast as it might not be available in your environment. In that case\nyou should configure another transport using corresponding IP finder, e.g. <code>TcpDiscoveryVmIpFinder</code> to use TCP sockets,\nor <code>TcpDiscoveryS3IpFinder</code> to use Amazon S3.</p>\n</div>\n<div class=\"paragraph\">\n<p>For more information on available Ignite transports and how to configure them please consult the\n<a href=\"https://apacheignite.readme.io/docs/clustering\">Ignite Clustering</a> documentation.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_enabling_logging\"><a class=\"anchor\" href=\"#_enabling_logging\"></a>Enabling logging</h3>\n<div class=\"paragraph\">\n<p>When trouble-shooting clustering issues it&#8217;s often useful to get some logging output from Ignite\nto see if it&#8217;s forming a cluster properly. You can do this (when using the default JUL logging) by adding a file\ncalled <code>vertx-default-jul-logging.properties</code> on your classpath. This is a standard java.util.loging (JUL)\nconfiguration file. Inside it set:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>org.apache.ignite.level=INFO</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>and also</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>java.util.logging.ConsoleHandler.level=INFO\njava.util.logging.FileHandler.level=INFO</pre>\n</div>\n</div>\n</div>\n</div>\n</div>"},"__N_SSG":true}