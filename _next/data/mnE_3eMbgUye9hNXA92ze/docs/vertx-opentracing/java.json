{"pageProps":{"slug":"vertx-opentracing/java","title":"Vertx OpenTracing","fallbackGitHubStars":null,"toc":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_tracing_policy\">追踪策略</a></li>\n<li><a href=\"#_http_tracing\">HTTP tracing</a></li>\n<li><a href=\"#_eventbus_tracing\">事件总线追踪</a></li>\n</ul>\n</div>","contents":"<h1>Vertx OpenTracing</h1>\n\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x 借助 Jaeger 的支持集成了 OpenTracing 。</p>\n</div>\n<div class=\"paragraph\">\n<p>您可以使用Jaeger客户端的下列配置项来配置 Vert.x\n<a href=\"https://github.com/jaegertracing/jaeger-client-java/blob/master/jaeger-core/README.md#configuration-via-environment\">环境</a>。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions()\n  .setTracingOptions(\n    <span class=\"hljs-keyword\">new</span> OpenTracingOptions()\n  )\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>您也可以传递一个自定义的`Tracer`来更好地调控\n配置项</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions()\n  .setTracingOptions(\n    <span class=\"hljs-keyword\">new</span> OpenTracingOptions(tracer)\n  )\n);</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_tracing_policy\"><a class=\"anchor\" href=\"#_tracing_policy\"></a>追踪策略</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>当追踪功能启用时, 一个组件的行为由追踪策略来定义：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code><a href=\"../../apidocs/io/vertx/core/tracing/TracingPolicy.html#PROPAGATE\">PROPAGATE</a></code>: 该组件上报活跃trace中的span</p>\n</li>\n<li>\n<p><code><a href=\"../../apidocs/io/vertx/core/tracing/TracingPolicy.html#ALWAYS\">ALWAYS</a></code>: 该组件上报活跃trace中的span或者创建一个新的活跃trace</p>\n</li>\n<li>\n<p><code><a href=\"../../apidocs/io/vertx/core/tracing/TracingPolicy.html#IGNORE\">IGNORE</a></code>: 该组件不会参与任何的trace</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>tracing 策略通常可在组件选项里配置</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_http_tracing\"><a class=\"anchor\" href=\"#_http_tracing\"></a>HTTP tracing</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x HTTP服务端和客户端根据HTTP请求上报跨度（span）：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>operationName</code>: 当前HTTP方法</p>\n</li>\n<li>\n<p>tags</p>\n</li>\n<li>\n<p><code>http.method</code>: HTTP请求方法</p>\n</li>\n<li>\n<p><code>http.url</code>: 请求URL</p>\n</li>\n<li>\n<p><code>http.status_code</code>: HTTP状态码</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>HTTP服务端默认的追踪策略是 <code>ALWAYS</code>,\n您可以使用`<a href=\"../../apidocs/io/vertx/core/http/HttpServerOptions.html#setTracingPolicy-io.vertx.core.tracing.TracingPolicy-\">setTracingPolicy</a>` 来调配该策略。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">HttpServer server = vertx.createHttpServer(<span class=\"hljs-keyword\">new</span> HttpServerOptions()\n  .setTracingPolicy(TracingPolicy.IGNORE)\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>HTTP客户端默认的追踪策略是 <code>PROPAGATE</code> ,\n您可以使用`<a href=\"../../apidocs/io/vertx/core/http/HttpClientOptions.html#setTracingPolicy-io.vertx.core.tracing.TracingPolicy-\">setTracingPolicy</a>` 来调配该策略。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">HttpClient client = vertx.createHttpClient(<span class=\"hljs-keyword\">new</span> HttpClientOptions()\n  .setTracingPolicy(TracingPolicy.IGNORE)\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>要启动客户端调用的追踪，\n您需要先创建它并使得 Vert.x 通过使用 OpenTracingUtil.setSpan 留意到这一点：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Span span = tracer.buildSpan(<span class=\"hljs-string\">\"my-operation\"</span>)\n  .withTag(<span class=\"hljs-string\">\"some-key\"</span>, <span class=\"hljs-string\">\"some-value\"</span>)\n  .start();\nOpenTracingUtil.setSpan(span);\n<span class=\"hljs-comment\">// 做一些事，例如客户端发送请求</span>\nspan.finish();</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>在包含有两个Vert.x服务的HTTP场景中，将会在客户端创建一个跨度，\n而后追踪上下文将在服务器端传播，另一个跨度将添加到追踪中。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_eventbus_tracing\"><a class=\"anchor\" href=\"#_eventbus_tracing\"></a>事件总线追踪</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x 事件总线围绕消息交换报告跨度。</p>\n</div>\n<div class=\"paragraph\">\n<p>默认的追踪策略是 <code>PROPAGATE</code> ,\n您可以使用`<a href=\"../../apidocs/io/vertx/core/eventbus/DeliveryOptions.html#setTracingPolicy-io.vertx.core.tracing.TracingPolicy-\">setTracingPolicy</a>` 来调配该策略.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">DeliveryOptions options = <span class=\"hljs-keyword\">new</span> DeliveryOptions().setTracingPolicy(TracingPolicy.ALWAYS);\nvertx.eventBus().send(<span class=\"hljs-string\">\"the-address\"</span>, <span class=\"hljs-string\">\"foo\"</span>, options);</code></pre>\n</div>\n</div>\n</div>\n</div>"},"__N_SSG":true}