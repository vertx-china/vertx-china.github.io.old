{"pageProps":{"slug":"4.2.0/vertx-opentelemetry/java","title":"Vertx OpenTelemetry","fallbackGitHubStars":null,"toc":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_tracing_policy\">Tracing policy</a></li>\n<li><a href=\"#_http_tracing\">HTTP tracing</a></li>\n<li><a href=\"#_eventbus_tracing\">EventBus tracing</a></li>\n</ul>\n</div>","contents":"<h1>Vertx OpenTelemetry</h1>\n\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x integration with OpenTelemetry.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions()\n  .setTracingOptions(\n    <span class=\"hljs-keyword\">new</span> OpenTelemetryOptions()\n  )\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You can also pass a custom <code>OpenTelemetry</code> allowing for greater control\nover the configuration.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions()\n  .setTracingOptions(\n    <span class=\"hljs-keyword\">new</span> OpenTelemetryOptions(openTelemetry)\n  )\n);</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_tracing_policy\"><a class=\"anchor\" href=\"#_tracing_policy\"></a>Tracing policy</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The tracing policy defines the behavior of a component when tracing is enabled:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code><a href=\"../../apidocs/io/vertx/core/tracing/TracingPolicy.html#PROPAGATE\">PROPAGATE</a></code>: the component reports a span in the active trace</p>\n</li>\n<li>\n<p><code><a href=\"../../apidocs/io/vertx/core/tracing/TracingPolicy.html#ALWAYS\">ALWAYS</a></code>: the component reports a span in the active trace or creates a new active trace</p>\n</li>\n<li>\n<p><code><a href=\"../../apidocs/io/vertx/core/tracing/TracingPolicy.html#IGNORE\">IGNORE</a></code>: the component will not be involved in any trace.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>The tracing policy is usually configured in the component options.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_http_tracing\"><a class=\"anchor\" href=\"#_http_tracing\"></a>HTTP tracing</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The Vert.x HTTP server and client reports span around HTTP requests:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>name</code>: the HTTP method</p>\n</li>\n<li>\n<p>tags</p>\n</li>\n<li>\n<p><code>http.method</code>: the HTTP method</p>\n</li>\n<li>\n<p><code>http.url</code>: the request URL</p>\n</li>\n<li>\n<p><code>http.status_code</code>: the HTTP status code (as <code>String</code>)</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>The default HTTP server tracing policy is <code>ALWAYS</code>, you can configure the policy with <code><a href=\"../../apidocs/io/vertx/core/http/HttpServerOptions.html#setTracingPolicy-io.vertx.core.tracing.TracingPolicy-\">setTracingPolicy</a></code></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">HttpServer server = vertx.createHttpServer(<span class=\"hljs-keyword\">new</span> HttpServerOptions()\n  .setTracingPolicy(TracingPolicy.IGNORE)\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The default HTTP client tracing policy is <code>PROPAGATE</code>, you can configure the policy with <code><a href=\"../../apidocs/io/vertx/core/http/HttpClientOptions.html#setTracingPolicy-io.vertx.core.tracing.TracingPolicy-\">setTracingPolicy</a></code></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">HttpClient client = vertx.createHttpClient(<span class=\"hljs-keyword\">new</span> HttpClientOptions()\n  .setTracingPolicy(TracingPolicy.IGNORE)\n);</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_eventbus_tracing\"><a class=\"anchor\" href=\"#_eventbus_tracing\"></a>EventBus tracing</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The Vert.x EventBus reports spans around message exchanges.</p>\n</div>\n<div class=\"paragraph\">\n<p>The default sending policy is <code>PROPAGATE</code>, you can configure the policy with <code><a href=\"../../apidocs/io/vertx/core/eventbus/DeliveryOptions.html#setTracingPolicy-io.vertx.core.tracing.TracingPolicy-\">setTracingPolicy</a></code>.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">DeliveryOptions options = <span class=\"hljs-keyword\">new</span> DeliveryOptions().setTracingPolicy(TracingPolicy.ALWAYS);\nvertx.eventBus().send(<span class=\"hljs-string\">&quot;the-address&quot;</span>, <span class=\"hljs-string\">&quot;foo&quot;</span>, options);</code></pre>\n</div>\n</div>\n</div>\n</div>","version":"4.2.0"},"__N_SSG":true}