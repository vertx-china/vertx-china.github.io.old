{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"ECMAScript 6/7 on the JVM with TypeScript and Vert.x","category":"guides","authors":[{"name":"Michel Krämer","github_id":"michel-kraemer"}],"summary":"I figured it would be a good idea to give you a couple of examples how teaming\n  Vert.x and TypeScript helps you use ECMAScript 6 and 7 features on the JVM today."},"date":"2016-01-03","slug":"ecmascript-6-7-on-the-jvm-with-typescript-and-vert-x","readingTime":{"text":"4 min read","minutes":3.75,"time":225000,"words":750},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      img: \"img\",\n      h2: \"h2\",\n      code: \"code\",\n      pre: \"pre\",\n      ol: \"ol\",\n      li: \"li\",\n      em: \"em\"\n    }, props.components), {Link, Gist} = _components;\n    if (!Gist) _missingMdxReference(\"Gist\", true);\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [\"Fol­low­ing the lat­est re­leases of \", _jsx(Link, {\n          href: \"/\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"Vert.x 3.2\"\n          })\n        }), \" and\\n\", _jsx(_components.a, {\n          href: \"https://github.com/michel-kraemer/vertx-lang-typescript\",\n          children: \"vertx-​lang-typescript 1.1.0\"\n        }), \"\\nI fig­ured it would be a good idea to give you a cou­ple of ex­am­ples how team­ing\\nVert.x and Type­Script helps you use EC­MAScript 6 and 7 fea­tures on the JVM today.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The vertx-​lang-typescript li­brary adds \", _jsx(_components.a, {\n          href: \"http://www.typescriptlang.org/\",\n          children: \"Type­Script\"\n        }), \" sup­port to Vert.x 3.\\nType­Script is a typed su­per­set of JavaScript that com­piles to plain JavaScript. It sup­ports the\\nEC­MAScript 6 (EC­MAScript 2015, ES6) stan­dard and also a few parts of EC­MAScript 7 (ES7) al­ready.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The li­brary au­to­mat­i­cally com­piles Vert.x ver­ti­cles writ­ten in\\nType­Script to JavaScript and ex­e­cutes them on the JVM. vertx-​lang-typescript also pro­vides\\ntype de­f­i­n­i­tions for the Vert.x JavaScript API. Use them in your favourite\\nType­Script ed­i­tor/IDE to get auto-​completion, API doc­u­men­ta­tion and mean­ing­ful error\\nmes­sages. See the fol­low­ing screen­cast:\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"https://raw.githubusercontent.com/michel-kraemer/vertx-lang-typescript/aaa67228c998bf9dc64b5f45fb407ef56169efec/screencast.gif\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"ecmascript-67-and-vertx\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#ecmascript-67-and-vertx\"\n        }), \"ECMAScript 6/7 and Vert.x\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Below you find an ex­am­ple ver­ti­cle writ­ten in Type­Script. Well, I left all\\nthe TypeScript-​specific parts out. In fact the ver­ti­cle is valid EC­MAScript 6\\n(ex­cept for the last snip­pet [9] which is EC­MAScript 7).\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"First, fol­low the \", _jsx(_components.a, {\n          href: \"https://github.com/michel-kraemer/vertx-lang-typescript/blob/master/README.md\",\n          children: \"vertx-​lang-typescript README\"\n        }), \"\\nto in­stall the li­brary and to en­able Type­Script in Vert.x. Then ex­tract the\\ntype de­f­i­n­i­tions (\", _jsx(_components.code, {\n          children: \"vertx-lang-typescript-1.1.0-typings.zip\"\n        }), \") into a new di­rec­tory.\\nCre­ate a new file named \", _jsx(_components.code, {\n          children: \"es7verticle.ts\"\n        }), \" in this di­rec­tory and copy the code\\nbelow into it. Fi­nally, open your com­mand prompt and ex­e­cute\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"hljs language-bash\",\n          children: \"vertx run es7verticle.ts\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"This will run a small HTTP server that lis­tens to re­quests on port 8080. If you\\nopen your browser and go to \", _jsx(_components.a, {\n          href: \"http://localhost:8080\",\n          children: \"http://lo­cal­host:8080\"\n        }), \" you will see the fol­low­ing:\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/images/blog/ecmascript-6-7-on-the-jvm-with-typscript-and-vertx/output.png\",\n          alt: \"Output of the verticle written in TypeScript\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"So far so good. Now let’s have a look at the code. I num­bered the in­di­vid­ual\\nEC­MAScript fea­tures used. Here’s a com­plete list:\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"Use an \", _jsx(_components.em, {\n            children: \"arrow func­tion\"\n          }), \" to cre­ate a re­quest han­dler (ES6)\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.em, {\n            children: \"Block-​scoped vari­ables\"\n          }), \" do not pol­lute your global name­space (ES6)\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Spec­ify a \", _jsx(_components.em, {\n            children: \"de­fault value\"\n          }), \" for a func­tion pa­ra­me­ter (ES6)\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Use \", _jsx(_components.em, {\n            children: \"rest pa­ra­me­ters\"\n          }), \" to col­lect mul­ti­ple pa­ra­me­ters in an array (ES6)\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.em, {\n            children: \"Spread\"\n          }), \" the con­tents of an array to func­tion pa­ra­me­ters (ES6)\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"It­er­ate over array con­tents using the \", _jsx(_components.em, {\n            children: \"for…of loop\"\n          }), \" (ES6)\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.em, {\n            children: \"tem­plate strings\"\n          }), \" en­able \", _jsx(_components.em, {\n            children: \"string in­ter­po­la­tion\"\n          }), \" and \", _jsx(_components.em, {\n            children: \"multi-​line strings\"\n          }), \" (ES6)\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Use \", _jsx(_components.em, {\n            children: \"classes\"\n          }), \" and \", _jsx(_components.em, {\n            children: \"in­her­i­tance\"\n          }), \" (ES6)\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Use the new \", _jsx(_components.em, {\n            children: \"ex­po­nen­ti­a­tion op­er­a­tor\"\n          }), \" as a short­cut for \", _jsx(_components.code, {\n            children: \"Math.pow()\"\n          }), \" (ES7)\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(Gist, {\n        url: \"https://gist.github.com/michel-kraemer/892866038dabcb8376e6\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"conclusion\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#conclusion\"\n        }), \"Conclusion\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The ex­am­ple demon­strates very well how you can use EC­MAScript 6 (and parts of\\n7) on the JVM today. In fact, there are a lot more\\n\", _jsx(_components.a, {\n          href: \"http://es6-features.org/\",\n          children: \"cool ES6 fea­tures\"\n        }), \" not in­cluded in the ex­am­ple such\\nas con­stants (\", _jsx(_components.code, {\n          children: \"const\"\n        }), \"), the prop­erty short­hand or method prop­er­ties.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Type­Script is so much more than just ES6. It ac­tu­ally has a\\nvery good sta­tic type sys­tem that al­lows you to make compile-​time type checks.\\nThis is makes it much eas­ier to write large Vert.x ap­pli­ca­tions with many\\nver­ti­cles. Per­son­ally I re­ally like the sup­port that I get from my IDE when\\npro­gram­ming Type­Script. Since vertx-​lang-typescript comes with type de­f­i­n­i­tions\\nfor the Vert.x JavaScript API I get auto-​completion and ac­cess to the doc­u­men­ta­tion\\nright in the ed­i­tor. I mostly use \", _jsx(_components.a, {\n          href: \"http://www.sublimetext.com/\",\n          children: \"Sub­lime\"\n        }), \" by the\\nway, but I have tested it suc­cess­fully with\\n\", _jsx(_components.a, {\n          href: \"https://code.visualstudio.com/\",\n          children: \"Vi­sual Stu­dio Code\"\n        }), \", \", _jsx(_components.a, {\n          href: \"http://www.eclipse.org/\",\n          children: \"Eclipse\"\n        }), \"\\nand \", _jsx(_components.a, {\n          href: \"https://atom.io/\",\n          children: \"Atom\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Un­for­tu­nately, the only ES7 fea­ture that you can use at the mo­ment with\\nvertx-​lang-typescript is the \", _jsx(_components.em, {\n          children: \"ex­po­nen­ti­a­tion op­er­a­tor\"\n        }), \". Type­Script 1.7 also\\nsup­ports \", _jsx(_components.em, {\n          children: \"dec­o­ra­tors\"\n        }), \" but this fea­ture is dis­abled at the mo­ment in\\nvertx-​lang-typescript be­cause it is ex­per­i­men­tal and sub­ject to change. I’ll\\nkeep you up to date when new fea­tures are in­tro­duced.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"alternatives\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#alternatives\"\n        }), \"Alternatives\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"We’ve re­cently \", _jsx(Link, {\n          href: \"/blog/vert-x-es6-back-to-the-future/\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"pub­lished a post\"\n          })\n        }), \"\\non how to use EC­MAScript 6 with Vert.x here on this blog. We used \", _jsx(_components.a, {\n          href: \"https://babeljs.io/\",\n          children: \"Babel\"\n        }), \", a\\ncom­piler that trans­lates ES6 to ES5.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Al­though this ap­proach works well it is a bit harder to set up and use than the\\none pre­sented here. First, you need to wrap your Vert.x ap­pli­ca­tion in a NPM pack­age.\\nSec­ond, in order to run your ap­pli­ca­tion, you need to ex­e­cute two com­mands.\\nYou have to com­pile it with \", _jsx(_components.code, {\n          children: \"npm run build\"\n        }), \" and then then call \", _jsx(_components.code, {\n          children: \"npm start\"\n        }), \".\\nWith vertx-​lang-typescript you only need one com­mand. vertx-​lang-typescript\\nalso al­lows you to embed the Type­Script ver­ti­cle in a larger Vert.x ap­pli­ca­tion\\nand also mix mul­ti­ple lan­guages in one project. This is not pos­si­ble if you wrap\\nevery­thing in a NPM pack­age.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Fi­nally, the ap­proach based on Babel only sup­ports EC­MAScript 6 (2015), al­though\\nmore fea­tures from ES7 will surely be in­tro­duced in Babel in the fu­ture.\\nType­Script on the other hand gives you much more fea­tures such as sta­tic\\ntyp­ing that you will cer­tainly find use­ful for any larger project.\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"},"nextPost":{"meta":{"title":"Automatic redeployment in Eclipse IDE","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Vert.x 3.1 has (re-)introduced the redeploy feature. This blog post explains how to use this feature in the Eclipse IDE. However, you can easily adapt the content to your IDE."},"date":"2015-12-20","slug":"automatic-redeployment-in-eclipse-ide"},"relatedPosts":[{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Scala is here","category":"guides","authors":[{"name":"Jochen Mader","github_id":"codepitbull"}],"summary":"The rise of Scala as one of the most important languages on the JVM caught many (me included) by surprise. This hybrid of functional and imperative paradigms struck a chord with many developers."},"date":"2017-03-20","slug":"scala-is-here"}]},"__N_SSG":true}