{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Eclipse Vert.x 3.5.1 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.5.1!"},"date":"2018-02-13","slug":"eclipse-vert-x-3-5-1-released","readingTime":{"text":"4 min read","minutes":3.38,"time":202800,"words":676},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      h2: \"h2\",\n      a: \"a\",\n      ul: \"ul\",\n      li: \"li\",\n      code: \"code\",\n      pre: \"pre\",\n      span: \"span\"\n    }, props.components), {Link} = _components;\n    if (!Link) _missingMdxReference(\"Link\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"We have just reÂ­leased Vert.x 3.5.1!\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"fixes-first\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#fixes-first\"\n        }), \"Fixes first!\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"As usual this reÂ­lease fixes bugs reÂ­ported in 3.5.0, see the reÂ­lease notes.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"junit-5-support\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#junit-5-support\"\n        }), \"JUnit 5 support\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"This reÂ­lease inÂ­troÂ­duces the new \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/vertx-junit5\",\n          children: \"vertx-â€‹junit5 modÂ­ule\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          href: \"http://junit.org/junit5/\",\n          children: \"JUnit 5\"\n        }), \" is a rewrite of the faÂ­mous Java testÂ­ing frameÂ­work that brings new inÂ­terÂ­estÂ­ing feaÂ­tures, inÂ­cludÂ­ing:\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"nested tests,\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"the abilÂ­ity to give a human-â€‹readable deÂ­scripÂ­tion of tests and test cases (and yes, even use emoÂ­jis),\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"a modÂ­uÂ­lar exÂ­tenÂ­sion mechÂ­aÂ­nism that is more powÂ­erÂ­ful than the JUnit 4 runÂ­ner mechÂ­aÂ­nism (@RunÂ­With anÂ­noÂ­taÂ­tion),\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"conÂ­diÂ­tional test exÂ­eÂ­cuÂ­tion,\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"paÂ­raÂ­meÂ­terÂ­ized tests, inÂ­cludÂ­ing from sources such as CSV data,\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"the supÂ­port of Java 8 lambda exÂ­presÂ­sions in the reÂ­worked built-â€‹in asÂ­serÂ­tions API,\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"supÂ­port for runÂ­ning tests preÂ­viÂ­ously writÂ­ten for JUnit 4.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"SupÂ­pose that we have a \", _jsx(_components.code, {\n          children: \"SampleVerticle\"\n        }), \" verÂ­tiÂ­cle that exÂ­poses a HTTP server on port 11981.\\nHere is how we can test its deÂ­ployÂ­ment as well as the reÂ­sult of 10 conÂ­curÂ­rent HTTP reÂ­quests:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Test\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@DisplayName(\\\"ğŸš€ Deploy a HTTP service verticle and make 10 requests\\\")\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"useSampleVerticle\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(Vertx vertx, VertxTestContext testContext)\"\n          }), \" {\\n  \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"WebClient\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"webClient\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" WebClient.create(vertx);\\n  \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"Checkpoint\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"deploymentCheckpoint\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" testContext.checkpoint();\\n\\n  \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"Checkpoint\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"requestCheckpoint\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" testContext.checkpoint(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"10\"\n          }), \");\\n  vertx.deployVerticle(\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"SampleVerticle\"\n          }), \"(), testContext.succeeding(id -> {\\n    deploymentCheckpoint.flag();\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"i\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"; i < \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"10\"\n          }), \"; i++) {\\n      webClient.get(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"11981\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"localhost\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"/\\\"\"\n          }), \")\\n        .as(BodyCodec.string())\\n        .send(testContext.succeeding(resp -> {\\n          testContext.verify(() -> {\\n            assertThat(resp.statusCode()).isEqualTo(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"200\"\n          }), \");\\n            assertThat(resp.body()).contains(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Yo!\\\"\"\n          }), \");\\n            requestCheckpoint.flag();\\n          });\\n        }));\\n    }\\n  }));\\n}\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The test method above benÂ­eÂ­fits from the inÂ­jecÂ­tion of a workÂ­ing \", _jsx(_components.code, {\n          children: \"Vertx\"\n        }), \" conÂ­text, a \", _jsx(_components.code, {\n          children: \"VertxTestContext\"\n        }), \" for dealÂ­ing with\\nasynÂ­chroÂ­nous opÂ­erÂ­aÂ­tions, and the guarÂ­anÂ­tee that the exÂ­eÂ­cuÂ­tion time is bound by a timeÂ­out which can opÂ­tionÂ­ally be conÂ­figÂ­ured\\nusing a \", _jsx(_components.code, {\n          children: \"@Timeout\"\n        }), \" anÂ­noÂ­taÂ­tion.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The test sucÂ­ceeds when all checkÂ­points have been flagged.\\nNote that \", _jsx(_components.code, {\n          children: \"vertx-junit5\"\n        }), \" is agÂ­nosÂ­tic of the asÂ­serÂ­tions liÂ­brary being used: you may opt for the built-â€‹in JUnit 5 asÂ­serÂ­tions\\nor use a 3rd-â€‹party liÂ­brary such as \", _jsx(_components.a, {\n          href: \"http://joel-costigliola.github.io/assertj/\",\n          children: \"AsÂ­sertJ\"\n        }), \" as we did in the exÂ­amÂ­ple above.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can checkÂ­out the \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/vertx-junit5\",\n          children: \"source on GitHub\"\n        }), \", read \", _jsx(Link, {\n          href: \"/docs/vertx-junit5/java/\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"the manÂ­ual\"\n          })\n        }), \" and learn from \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/vertx-examples/tree/master/junit5-examples\",\n          children: \"the exÂ­amÂ­ples\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"web-api-contract-enhancements\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#web-api-contract-enhancements\"\n        }), \"Web API Contract enhancements\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The packÂ­age \", _jsx(_components.code, {\n          children: \"vertx-web-api-contract\"\n        }), \" inÂ­cludes a vaÂ­riÂ­ety of fixes, from schema \", _jsx(_components.code, {\n          children: \"$ref\"\n        }), \" to\\n\", _jsx(Link, {\n          href: \"/docs/vertx-web-api-contract/java/\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: \"reÂ­vamped docÂ­uÂ­menÂ­taÂ­tion\"\n          })\n        }), \". You can give a look at list of all\\n\", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/vertx-web/pull/802\",\n          children: \"fixes/imÂ­proveÂ­ments here\"\n        }), \" and all\\n\", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/wiki/wiki/3.5.1-Breaking-Changes#vertx-web-api-contracts\",\n          children: \"breakÂ­ing changes here\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"From 3.5.1 to load the opeÂ­napi spec and inÂ­stanÂ­tiÂ­ate the Router you should use new method \", _jsx(_components.code, {\n          children: \"OpenAPI3RouterFactory.create()\"\n        }), \"\\nthat reÂ­places old methÂ­ods \", _jsx(_components.code, {\n          children: \"createRouterFactoryFromFile()\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"createRouterFactoryFromURL()\"\n        }), \". This new method acÂ­cepts\\nrelÂ­aÂ­tive paths, abÂ­solute paths, local URL with \", _jsx(_components.code, {\n          children: \"file://\"\n        }), \" and reÂ­mote URL with \", _jsx(_components.code, {\n          children: \"http://\"\n        }), \". Note that if you want refeer to\\na file relÂ­aÂ­tive to your jarâ€™s root, you can simÂ­ply use a relÂ­aÂ­tive path and the parser will look out the jar and into the\\njar for the spec.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"From 3.5.1 all setÂ­tings about \", _jsx(_components.code, {\n          children: \"OpenAPI3RouterFactory\"\n        }), \" beÂ­havÂ­iours durÂ­ing router genÂ­erÂ­aÂ­tion are inÂ­globed in a new obÂ­ject called\\n\", _jsx(Link, {\n          href: \"/docs/apidocs/io/vertx/ext/web/api/contract/RouterFactoryOptions.html\",\n          passHref: true,\n          children: _jsx(_components.a, {\n            href: \"\",\n            children: _jsx(_components.code, {\n              children: \"RouterFactoryOptions\"\n            })\n          })\n        }), \". From\\nthis obÂ­ject you can:\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"ConÂ­figÂ­ure if you want to mount a deÂ­fault valÂ­iÂ­daÂ­tion failÂ­ure hanÂ­dler and which one\\n(methÂ­ods \", _jsx(_components.code, {\n            children: \"setMountValidationFailureHandler(boolean)\"\n          }), \" and \", _jsx(_components.code, {\n            children: \"setValidationFailureHandler(Handler)\"\n          }), \")\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"ConÂ­figÂ­ure if you want to mount a deÂ­fault 501 not imÂ­pleÂ­mented hanÂ­dler and which one\\n(methÂ­ods \", _jsx(_components.code, {\n            children: \"setMountNotImplementedFailureHandler(boolean)\"\n          }), \" and \", _jsx(_components.code, {\n            children: \"setNotImplementedFailureHandler(Handler)\"\n          }), \")\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"ConÂ­figÂ­ure if you want to mount \", _jsx(_components.code, {\n            children: \"ResponseContentTypeHandler\"\n          }), \" auÂ­toÂ­matÂ­iÂ­cally\\n(method \", _jsx(_components.code, {\n            children: \"setMountResponseContentTypeHandler(boolean)\"\n          }), \")\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"ConÂ­figÂ­ure if you want to fail durÂ­ing router genÂ­erÂ­aÂ­tion when seÂ­cuÂ­rity hanÂ­dlers are not conÂ­figÂ­ured\\n(method \", _jsx(_components.code, {\n            children: \"setRequireSecurityHandlers(boolean)\"\n          }), \")\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"After iniÂ­tialÂ­izaÂ­tion of route, you can mount the \", _jsx(_components.code, {\n          children: \"RouterFactoryOptions\"\n        }), \" obÂ­ject with method \", _jsx(_components.code, {\n          children: \"routerFactory.setOptions()\"\n        }), \"\\nwhen you want beÂ­fore callÂ­ing \", _jsx(_components.code, {\n          children: \"getRouter()\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"rxjava-deprecation-removal\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#rxjava-deprecation-removal\"\n        }), \"RxJava deprecation removal\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"It is imÂ­porÂ­tant to know that 3.5.x will be the last reÂ­lease with the legacy \", _jsx(_components.code, {\n          children: \"xyzObservable()\"\n        }), \" methÂ­ods:\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Deprecated()\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" Observable<HttpServer> \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"listenObservable\"\n          }), _jsxs(_components.span, {\n            className: \"hljs-params\",\n            children: [\"(\", _jsx(_components.span, {\n              className: \"hljs-type\",\n              children: \"int\"\n            }), \" port, String host)\"]\n          }), \";\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"has been reÂ­placed since Vert.x 3.4 by:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" Single<HttpServer> \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"rxListen\"\n          }), _jsxs(_components.span, {\n            className: \"hljs-params\",\n            children: [\"(\", _jsx(_components.span, {\n              className: \"hljs-type\",\n              children: \"int\"\n            }), \" port, String host)\"]\n          }), \";\\n\"]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The \", _jsx(_components.code, {\n          children: \"xyzObservable()\"\n        }), \" depÂ­reÂ­cated methÂ­ods will be \", _jsx(_components.a, {\n          href: \"https://github.com/vert-x3/vertx-rx/issues/113\",\n          children: \"reÂ­moved\"\n        }), \" in Vert.x 3.6.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"wrap-up\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": true,\n          tabIndex: \"-1\",\n          className: \"heading-anchor\",\n          href: \"#wrap-up\"\n        }), \"Wrap up\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Vert.x 3.5.1 reÂ­lease notes and breakÂ­ing changes:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/vert-x3/wiki/wiki/3.5.1-Release-Notes\",\n            children: \"https://github.com/vert-â€‹x3/wiki/wiki/3.5.1-â€‹Release-Notes\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/vert-x3/wiki/wiki/3.5.1-Breaking-Changes\",\n            children: \"https://github.com/vert-â€‹x3/wiki/wiki/3.5.1-â€‹Breaking-Changes\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The event bus client using the SockJS bridge are availÂ­able from NPM, Bower and as a WeÂ­bÂ­Jar:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://www.npmjs.com/package/vertx3-eventbus-client\",\n            children: \"https://www.npmjs.com/packÂ­age/vertx3-â€‹eventbus-client\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/vert-x3/vertx-bus-bower\",\n            children: \"https://github.com/vert-â€‹x3/vertx-â€‹bus-bower\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"http://www.webjars.org/\",\n            children: \"http://www.weÂ­bÂ­jars.org/\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Docker imÂ­ages are also availÂ­able on the \", _jsx(_components.a, {\n          href: \"https://hub.docker.com/u/vertx/\",\n          children: \"Docker Hub\"\n        }), \". The Vert.x disÂ­triÂ­bÂ­uÂ­tion is also availÂ­able from \", _jsx(_components.a, {\n          href: \"http://sdkman.io/index.html\",\n          children: \"SDÂ­KMan\"\n        }), \" and \", _jsx(_components.a, {\n          href: \"http://brew.sh/\",\n          children: \"HomeÂ­Brew\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The arÂ­tiÂ­facts have been deÂ­ployed to \", _jsx(_components.a, {\n          href: \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.5.1%22\",\n          children: \"Maven CenÂ­tral\"\n        }), \" and you can get the disÂ­triÂ­bÂ­uÂ­tion on \", _jsx(_components.a, {\n          href: \"https://bintray.com/vertx/downloads/distribution/3.3.3/view\",\n          children: \"BinÂ­tray\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Happy codÂ­ing !\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"},"prevPost":{"meta":{"title":"Google Summer of Code 2018","category":"news","authors":[{"name":"Thomas Segismont","github_id":"tsegismont"}],"summary":"It's this time of year again! Google Summer of Code 2018 submission period has just started!"},"date":"2018-03-13","slug":"google-summer-of-code-2018"},"nextPost":{"meta":{"title":"TCP Client using Eclipse Vert.x, Kotlin and Gradle build","category":"guides","authors":[{"name":"Usman Saleem","github_id":"usmansaleem"}],"summary":"In this blog post, I demonstrate how to write a very simple TCP client that keeps a connection open to a custom-written server in cloud."},"date":"2017-12-20","slug":"tcp-client-using-eclipse-vert-x-kotlin-and-gradle-build"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Letâ€™s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didnâ€™t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Checklist for Migrating from Vert.x 2.1.x to Vert.x 3 - Part One","category":"guides","authors":[{"name":"Mark Spritzler","github_id":"bytor99999"}],"summary":"So while upgrading our application, I thought I should note down all the changes that we had to do in the process. Since Vert.x 3 is a major upgrade from the previous version, with so many changes."},"date":"2015-07-06","slug":"checklist-for-migrating-from-vert-x-2-1-x-to-vert-x-3-part-one"},{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"}]},"__N_SSG":true}