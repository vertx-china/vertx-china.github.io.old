{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Vert.x 3 real time web apps","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"One of the interesting features of Vert.x is the SockJS event bus bridge. It allows external applications to communicate with Vert.x event bus using Websockets."},"date":"2015-08-31","slug":"vert-x3-real-time-web-apps","readingTime":{"text":"7 min read","minutes":6.975,"time":418500,"words":1395},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"One of the in\\xADter\\xADest\\xADing fea\\xADtures of Vert.x is the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sockjs.org\"\n  }), \"SockJS\"), \" event bus bridge. This piece of soft\\xADware\\nal\\xADlows ex\\xADter\\xADnal ap\\xADpli\\xADca\\xADtions to com\\xADmu\\xADni\\xADcate with Vert.x event bus using Web\\xADsock\\xADets and if your browser does not\\nsup\\xADport it then it grace\\xADfully de\\xADgrades to pool\\xADing AJAX calls.\"), mdx(\"p\", null, \"Web\\xADSock\\xADets bring a new level of in\\xADter\\xADac\\xADtion to the web, they re\\xADally bring real time to web ap\\xADpli\\xADca\\xADtions due to the\\nfact that its com\\xADmu\\xADni\\xADca\\xADtion model is bi-\\u200Bdirectional in con\\xADtrast to the tra\\xADdi\\xADtional HTTP model where a client can\\nini\\xADti\\xADate a data re\\xADquest to a server but not the other way around.\"), mdx(\"p\", null, \"In this small post I will demon\\xADstrate how you can cre\\xADate a sim\\xADple col\\xADlab\\xADo\\xADra\\xADtive draw\\xADing app. The idea is sim\\xADple, all\\nusers that open the app will be be pre\\xADsented with a empty can\\xADvas and what they draw or is drawn on other can\\xADvas is\\nshared in real time on their screen.\"), mdx(\"p\", null, \"For the sake of sim\\xADplic\\xADity and mak\\xADing this post light there is no se\\xADcu\\xADrity in\\xADvolved so, every\\xADone is free to lis\\xADten to\\nwhat is being drawn, how\\xADever the ex\\xADter\\xADnal ap\\xADpli\\xADca\\xADtion has lim\\xADited read write ac\\xADcess to a sin\\xADgle ad\\xADdress on Vert.x\\nevent bus, en\\xADsur\\xADing that other ser\\xADvices run\\xADning on the clus\\xADter will not be ex\\xADposed.\"), mdx(\"p\", null, \"This is what you should ex\\xADpect to see:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/blog/vertx3-realtime-webapps/screencast.gif\",\n    \"alt\": \"Screencast\"\n  }))), mdx(\"h2\", {\n    \"id\": \"bootstrap-a-project\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#bootstrap-a-project\"\n  })), \"Bootstrap a project\"), mdx(\"p\", null, \"If you fol\\xADlowed the pre\\xADvi\\xADous \", mdx(Link, {\n    href: \"/blog/my-first-vert-x-3-application/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"se\\xADries\")), \" on Vert.x de\\xADvel\\xADop\\xADment, you saw\\nthat Java and Maven were the main topic, since Vert.x is poly\\xADglot I will focus on JavaScript and\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/\"\n  }), \"NPM\"), \" as my pro\\xADgram\\xADming lan\\xADguage and pack\\xADage man\\xADage\\xADment tool.\"), mdx(\"p\", null, \"With NPM start by cre\\xADat\\xADing a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \", in order to do this we should run:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"npm init\\n\")), mdx(\"p\", null, \"This will present a se\\xADlec\\xADtion of ques\\xADtions and in the end you should have a basic \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" file. This\\ncon\\xADfig\\xADu\\xADra\\xADtion is very basic so you need to add a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-full\"\n  }), \"de\\xADpen\\xADdency\"), \" to Vert.x so\\nyou can run the ap\\xADpli\\xADca\\xADtion. You can add it to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dependencies\"), \" prop\\xADerty and it should look more or less like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-javascript\"\n  }), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"name\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"draw\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"private\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-literal\"\n  }), \"true\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"dependencies\\\"\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"vertx3-full\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"3.0.0-1\\\"\"), \"\\n  },\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"scripts\\\"\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"start\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"vertx run server.js\\\"\"), \"\\n  },\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"version\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"1.0.0\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"main\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"server.js\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"devDependencies\\\"\"), \": {},\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"author\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"license\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"ISC\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"description\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"A Real Time Drawing App\\\"\"), \"\\n}\\n\")), mdx(\"p\", null, \"If you do not know why there is the de\\xADpen\\xADdency on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx3-full\"), \" or why the added \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scripts\"), \" prop\\xADerty please check the \", mdx(Link, {\n    href: \"/blog/vert-x3-says-hello-to-npm-users/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"older\")), \" blog post about it.\"), mdx(\"h2\", {\n    \"id\": \"project-structure\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#project-structure\"\n  })), \"Project Structure\"), mdx(\"p\", null, \"This post has no pref\\xADer\\xADence over project struc\\xADture, so if you do not agree with the struc\\xADture used here feel free to\\nuse what you feel best. For this ex\\xADam\\xADple I will keep it to:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-text\"\n  }), \"\\u251C\\u2500\\u2500 package.json\\n\\u251C\\u2500\\u2500 server.js\\n\\u2514\\u2500\\u2500 webroot\\n  \\u251C\\u2500\\u2500 assets\\n  \\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 js\\n  \\u2502\\xA0\\xA0   \\u251C\\u2500\\u2500 script.js\\n  \\u2502\\xA0\\xA0   \\u2514\\u2500\\u2500 vertxbus.js\\n  \\u2514\\u2500\\u2500 index.html\\n\\n3 directories, 5 files\\n\")), mdx(\"p\", null, \"As you can imag\\xADine \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"server.js\"), \" will be our Vert.x ap\\xADpli\\xADca\\xADtion and every\\xADthing under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webroot\"), \" will be the client\\nap\\xADpli\\xADca\\xADtion.\"), mdx(\"p\", null, \"The client ap\\xADpli\\xADca\\xADtion is not re\\xADally Vert.x spe\\xADcific and could in the\\xADory be used by any other frame\\xADwork so I will go\\nlightly over its code.\"), mdx(\"h3\", {\n    \"id\": \"client-application\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#client-application\"\n  })), \"Client Application\"), mdx(\"p\", null, \"Our ap\\xADpli\\xADca\\xADtion main entry point is as one can ex\\xADpect \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.html\"), \". In the index file de\\xADfine the fol\\xADlow\\xADing HTML:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-html\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"<!DOCTYPE \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-meta-keyword\"\n  }), \"html\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"html\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"head\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"meta\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"charset\"), \"=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"utf-8\\\"\"), \"/>\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"title\"), \">\"), \"Real time drawing App\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"title\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"<!--[if lt IE 9]>\\n  <script src=\\\"http://html5shiv.googlecode.com/svn/trunk/html5.js\\\"></script>\\n  <![endif]-->\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"head\"), \">\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"body\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"canvas\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"id\"), \"=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"paper\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"width\"), \"=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"1900\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"height\"), \"=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"1000\\\"\"), \">\"), \"\\n  Your browser needs to support canvas for this to work!\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"canvas\"), \">\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"<!-- JavaScript includes. -->\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"script\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"src\"), \"=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"http://code.jquery.com/jquery-1.8.0.min.js\\\"\"), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"script\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"script\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"src\"), \"=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"//cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js\\\"\"), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"script\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"script\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"src\"), \"=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'assets/js/vertxbus.js'\"), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"script\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"script\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"src\"), \"=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"assets/js/script.js\\\"\"), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"script\"), \">\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"body\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"html\"), \">\"), \"\\n\")), mdx(\"p\", null, \"As I pre\\xADvi\\xADously wrote, the idea is to keep it as sim\\xADple as pos\\xADsi\\xADble so it is all about hav\\xADing a can\\xADvas el\\xADe\\xADment and a\\nap\\xADpli\\xADca\\xADtion main script \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"script.js\"), \". All the rest are files served by CDNs that pro\\xADvide com\\xADmon web ap\\xADpli\\xADca\\xADtion\\nli\\xADbraries such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jQuery\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HTML5\"), \" shim for older browsers, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SockJS\"), \" client and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertxbus\"), \" bridge.\"), mdx(\"p\", null, \"The main code is on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"script.js\"), \" file:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-javascript\"\n  }), \"$(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"function\"), \" (\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  })), \") \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// This demo depends on the canvas element\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (!(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'getContext'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"in\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"document\"), \".createElement(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'canvas'\"), \"))) {\\n    alert(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'Sorry, it looks like your browser does not support canvas!'\"), \");\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-literal\"\n  }), \"false\"), \";\\n  }\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" doc = $(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"document\"), \"),\\n    canvas = $(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'#paper'\"), \"),\\n    ctx = canvas[\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"0\"), \"].getContext(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'2d'\"), \");\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Generate an unique ID\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" id = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"Math\"), \".round($.now() * \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"Math\"), \".random());\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// A flag for drawing activity\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" drawing = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-literal\"\n  }), \"false\"), \";\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" clients = {};\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// create a event bus bridge to the server that served this file\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" eb = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" vertx.EventBus(\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"window\"), \".location.protocol + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'//'\"), \" + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"window\"), \".location.hostname + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"':'\"), \" + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"window\"), \".location.port + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'/eventbus'\"), \");\\n\\n  eb.onopen = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"function\"), \" (\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  })), \") \"), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// listen to draw events\"), \"\\n    eb.registerHandler(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'draw'\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"function\"), \" (\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"data\"), \") \"), \"{\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Is the user drawing?\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (data.drawing && clients[data.id]) {\\n\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Draw a line on the canvas. clients[data.id] holds\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// the previous position of this user's mouse pointer\"), \"\\n\\n        drawLine(clients[data.id].x, clients[data.id].y, data.x, data.y);\\n      }\\n\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Saving the current client state\"), \"\\n      clients[data.id] = data;\\n      clients[data.id].updated = $.now();\\n    });\\n  };\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" prev = {};\\n\\n  canvas.on(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'mousedown'\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"function\"), \" (\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"e\"), \") \"), \"{\\n    e.preventDefault();\\n    drawing = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-literal\"\n  }), \"true\"), \";\\n    prev.x = e.pageX;\\n    prev.y = e.pageY;\\n  });\\n\\n  doc.bind(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'mouseup mouseleave'\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"function\"), \" (\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  })), \") \"), \"{\\n    drawing = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-literal\"\n  }), \"false\"), \";\\n  });\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" lastEmit = $.now();\\n\\n  doc.on(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'mousemove'\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"function\"), \" (\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"e\"), \") \"), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" ($.now() - lastEmit > \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"30\"), \") {\\n      eb.publish(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'draw'\"), \", {\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'x'\"), \": e.pageX,\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'y'\"), \": e.pageY,\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'drawing'\"), \": drawing,\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'id'\"), \": id\\n      });\\n      lastEmit = $.now();\\n    }\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Draw a line for the current user's movement, as it is\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// not received in the eventbus\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (drawing) {\\n\\n      drawLine(prev.x, prev.y, e.pageX, e.pageY);\\n\\n      prev.x = e.pageX;\\n      prev.y = e.pageY;\\n    }\\n  });\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Remove inactive clients after 10 seconds of inactivity\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"setInterval\"), \"(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"function\"), \" (\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  })), \") \"), \"{\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"for\"), \" (\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" ident \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"in\"), \" clients) {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (clients.hasOwnProperty(ident)) {\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" ($.now() - clients[ident].updated > \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"10000\"), \") {\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Last update was more than 10 seconds ago.\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// This user has probably closed the page\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"delete\"), \" clients[ident];\\n        }\\n      }\\n    }\\n\\n  }, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"10000\"), \");\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"drawLine\"), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"fromx, fromy, tox, toy\"), \") \"), \"{\\n    ctx.moveTo(fromx, fromy);\\n    ctx.lineTo(tox, toy);\\n    ctx.stroke();\\n  }\\n\\n});\\n\")), mdx(\"p\", null, \"The most im\\xADpor\\xADtant part in this code is all the code re\\xADlated to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"eb\"), \". The vari\\xADable \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"eb\"), \" is our bridge to the event\\nbus, Start by cre\\xADat\\xADing a bridge using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx.EventBus\"), \" ob\\xADject and de\\xADfine where to con\\xADnect, using the de\\xADtails\\nof the cur\\xADrent win\\xADdow lo\\xADca\\xADtion.\"), mdx(\"p\", null, \"Then add a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onopen\"), \" lis\\xADtener that will sub\\xADscribe to the ad\\xADdress \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"draw\"), \" on the event bus so it can lis\\xADten to all\\nmes\\xADsages re\\xADgard\\xADing draw\\xADing and per\\xADform the draw\\xADing ac\\xADtions. Since lis\\xADten\\xADing is not enough I also add a mouse lis\\xADtener\\nto the doc\\xADu\\xADment so when it moves it pub\\xADlishes events to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"draw\"), \" ad\\xADdress.\"), mdx(\"p\", null, \"Note that I am using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"publish\"), \" and not \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"send\"), \", the rea\\xADson should be ob\\xADvi\\xADous, I want every\\xADone to know this users mouse\\nmove\\xADments, I am not in\\xADter\\xADested on send\\xADing the events to just a sin\\xADgle user. You can see now that if you want to have\\na draw\\xADing app in a one on one user basis then in\\xADstead of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"publish()\"), \" you should use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"send()\"), \".\"), mdx(\"h3\", {\n    \"id\": \"server-application\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#server-application\"\n  })), \"Server Application\"), mdx(\"p\", null, \"The server code is quite straight for\\xADward, all you need is:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" Router = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"require\"), \"(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"vertx-web-js/router\\\"\"), \");\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" SockJSHandler = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"require\"), \"(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"vertx-web-js/sock_js_handler\\\"\"), \");\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" StaticHandler = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"require\"), \"(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"vertx-web-js/static_handler\\\"\"), \");\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" router = Router.router(vertx);\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Allow outbound traffic to the draw address\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"var\"), \" options = {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"outboundPermitteds\\\"\"), \" : [{\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"address\\\"\"), \" : \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"draw\\\"\"), \"}],\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"inboundPermitteds\\\"\"), \" :  [{\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"address\\\"\"), \" : \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"draw\\\"\"), \"}]\\n};\\n\\nrouter.route(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/eventbus/*\\\"\"), \").handler(SockJSHandler.create(vertx).bridge(options).handle);\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Serve the static resources\"), \"\\nrouter.route().handler(StaticHandler.create().handle);\\n\\nvertx.createHttpServer().requestHandler(router.accept).listen(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8080\"), \");\\n\")), mdx(\"p\", null, \"We start with the usual im\\xADports, we im\\xADport a ref\\xADer\\xADence to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \" ob\\xADject and a cou\\xADple of helper han\\xADdlers\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SockJSHandler\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StaticHandler\"), \". As their names should tell you one han\\xADdler will be re\\xADspon\\xADsi\\xADble to han\\xADdle all\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SockJS\"), \" data and the other all HTTP file serv\\xADing re\\xADquests.\"), mdx(\"p\", null, \"We then add then to a router and start a HTTP server that will han\\xADdle all in\\xADcom\\xADing re\\xADquest using the han\\xADdler ac\\xADcept\\nfunc\\xADtion. Fi\\xADnally we lis\\xADten on port \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"8080\"), \" and we are ready.\"), mdx(\"p\", null, \"Note that there is a op\\xADtions ob\\xADject where a cou\\xADple of prop\\xADer\\xADties are de\\xADfined \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"outbound/inbound\"), \" per\\xADmit\\xADted ad\\xADdresses.\\nWith\\xADout this con\\xADfig\\xADu\\xADra\\xADtion the ex\\xADter\\xADnal ap\\xADpli\\xADca\\xADtion will not be al\\xADlowed to con\\xADnect to the vert.x bus, in fact the\\nde\\xADfault con\\xADfig\\xADu\\xADra\\xADtion of the Sock\\xADJSHan\\xADdler is deny all. So you must spec\\xADify ex\\xADplic\\xADitly which ad\\xADdress are al\\xADlowed to\\nre\\xADceive mes\\xADsages from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SockJS\"), \" and which ones are al\\xADlowed to send/pub\\xADlish to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SockJS\"), \".\"), mdx(\"p\", null, \"Now you can start your ap\\xADpli\\xADca\\xADtion, don\\u2019t for\\xADget to in\\xADstall the de\\xADpen\\xADden\\xADcies for the first time:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"npm install\\n\")), mdx(\"p\", null, \"And then run the ap\\xADpli\\xADca\\xADtion:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"npm start\\n\")), mdx(\"p\", null, \"If you now open 2 browser win\\xADdows you will be able to draw nice pic\\xADtures and see the draw\\xADing show\\xADing in \\u201Creal time\\u201D\\non the other win\\xADdow, if you then draw on the sec\\xADond you should get the mir\\xADror ef\\xADfect on the first win\\xADdow.\"), mdx(\"p\", null, \"Have fun!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>One of the in­ter­est­ing fea­tures of Vert.x is the <a href=\"http://sockjs.org\">SockJS</a> event bus bridge. This piece of soft­ware\nal­lows ex­ter­nal ap­pli­ca­tions to com­mu­ni­cate with Vert.x event bus using Web­sock­ets and if your browser does not\nsup­port it then it grace­fully de­grades to pool­ing AJAX calls.</p><p>Web­Sock­ets bring a new level of in­ter­ac­tion to the web, they re­ally bring real time to web ap­pli­ca­tions due to the\nfact that its com­mu­ni­ca­tion model is bi-​directional in con­trast to the tra­di­tional HTTP model where a client can\nini­ti­ate a data re­quest to a server but not the other way around.</p><p>In this small post I will demon­strate how you can cre­ate a sim­ple col­lab­o­ra­tive draw­ing app. The idea is sim­ple, all\nusers that open the app will be be pre­sented with a empty can­vas and what they draw or is drawn on other can­vas is\nshared in real time on their screen.</p><p>For the sake of sim­plic­ity and mak­ing this post light there is no se­cu­rity in­volved so, every­one is free to lis­ten to\nwhat is being drawn, how­ever the ex­ter­nal ap­pli­ca­tion has lim­ited read write ac­cess to a sin­gle ad­dress on Vert.x\nevent bus, en­sur­ing that other ser­vices run­ning on the clus­ter will not be ex­posed.</p><p>This is what you should ex­pect to see:</p><p><img src=\"/images/blog/vertx3-realtime-webapps/screencast.gif\" alt=\"Screencast\"/></p><h2 id=\"bootstrap-a-project\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#bootstrap-a-project\"></a>Bootstrap a project</h2><p>If you fol­lowed the pre­vi­ous <a href=\"/blog/my-first-vert-x-3-application/\">se­ries</a> on Vert.x de­vel­op­ment, you saw\nthat Java and Maven were the main topic, since Vert.x is poly­glot I will focus on JavaScript and\n<a href=\"https://www.npmjs.com/\">NPM</a> as my pro­gram­ming lan­guage and pack­age man­age­ment tool.</p><p>With NPM start by cre­at­ing a <code>package.json</code>, in order to do this we should run:</p><pre><code class=\"hljs language-bash\">npm init\n</code></pre><p>This will present a se­lec­tion of ques­tions and in the end you should have a basic <code>package.json</code> file. This\ncon­fig­u­ra­tion is very basic so you need to add a <a href=\"https://www.npmjs.com/package/vertx3-full\">de­pen­dency</a> to Vert.x so\nyou can run the ap­pli­ca­tion. You can add it to the <code>dependencies</code> prop­erty and it should look more or less like this:</p><pre><code class=\"hljs language-javascript\">{\n  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;draw&quot;</span>,\n  <span class=\"hljs-string\">&quot;private&quot;</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-string\">&quot;dependencies&quot;</span>: {\n    <span class=\"hljs-string\">&quot;vertx3-full&quot;</span>: <span class=\"hljs-string\">&quot;3.0.0-1&quot;</span>\n  },\n  <span class=\"hljs-string\">&quot;scripts&quot;</span>: {\n    <span class=\"hljs-string\">&quot;start&quot;</span>: <span class=\"hljs-string\">&quot;vertx run server.js&quot;</span>\n  },\n  <span class=\"hljs-string\">&quot;version&quot;</span>: <span class=\"hljs-string\">&quot;1.0.0&quot;</span>,\n  <span class=\"hljs-string\">&quot;main&quot;</span>: <span class=\"hljs-string\">&quot;server.js&quot;</span>,\n  <span class=\"hljs-string\">&quot;devDependencies&quot;</span>: {},\n  <span class=\"hljs-string\">&quot;author&quot;</span>: <span class=\"hljs-string\">&quot;&quot;</span>,\n  <span class=\"hljs-string\">&quot;license&quot;</span>: <span class=\"hljs-string\">&quot;ISC&quot;</span>,\n  <span class=\"hljs-string\">&quot;description&quot;</span>: <span class=\"hljs-string\">&quot;A Real Time Drawing App&quot;</span>\n}\n</code></pre><p>If you do not know why there is the de­pen­dency on <code>vertx3-full</code> or why the added <code>scripts</code> prop­erty please check the <a href=\"/blog/vert-x3-says-hello-to-npm-users/\">older</a> blog post about it.</p><h2 id=\"project-structure\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#project-structure\"></a>Project Structure</h2><p>This post has no pref­er­ence over project struc­ture, so if you do not agree with the struc­ture used here feel free to\nuse what you feel best. For this ex­am­ple I will keep it to:</p><pre><code class=\"hljs language-text\">├── package.json\n├── server.js\n└── webroot\n  ├── assets\n  │   └── js\n  │     ├── script.js\n  │     └── vertxbus.js\n  └── index.html\n\n3 directories, 5 files\n</code></pre><p>As you can imag­ine <code>server.js</code> will be our Vert.x ap­pli­ca­tion and every­thing under <code>webroot</code> will be the client\nap­pli­ca­tion.</p><p>The client ap­pli­ca­tion is not re­ally Vert.x spe­cific and could in the­ory be used by any other frame­work so I will go\nlightly over its code.</p><h3 id=\"client-application\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#client-application\"></a>Client Application</h3><p>Our ap­pli­ca­tion main entry point is as one can ex­pect <code>index.html</code>. In the index file de­fine the fol­low­ing HTML:</p><pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">&quot;utf-8&quot;</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Real time drawing App<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!--[if lt IE 9]&gt;\n  &lt;script src=&quot;http://html5shiv.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;\n  &lt;![endif]--&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">canvas</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;paper&quot;</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">&quot;1900&quot;</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">&quot;1000&quot;</span>&gt;</span>\n  Your browser needs to support canvas for this to work!\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">canvas</span>&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!-- JavaScript includes. --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;http://code.jquery.com/jquery-1.8.0.min.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;//cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&#x27;assets/js/vertxbus.js&#x27;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;assets/js/script.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre><p>As I pre­vi­ously wrote, the idea is to keep it as sim­ple as pos­si­ble so it is all about hav­ing a can­vas el­e­ment and a\nap­pli­ca­tion main script <code>script.js</code>. All the rest are files served by CDNs that pro­vide com­mon web ap­pli­ca­tion\nli­braries such as <code>jQuery</code>, <code>HTML5</code> shim for older browsers, <code>SockJS</code> client and <code>vertxbus</code> bridge.</p><p>The main code is on <code>script.js</code> file:</p><pre><code class=\"hljs language-javascript\">$(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n\n  <span class=\"hljs-comment\">// This demo depends on the canvas element</span>\n  <span class=\"hljs-keyword\">if</span> (!(<span class=\"hljs-string\">&#x27;getContext&#x27;</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">&#x27;canvas&#x27;</span>))) {\n    alert(<span class=\"hljs-string\">&#x27;Sorry, it looks like your browser does not support canvas!&#x27;</span>);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n  }\n\n  <span class=\"hljs-keyword\">var</span> doc = $(<span class=\"hljs-built_in\">document</span>),\n    canvas = $(<span class=\"hljs-string\">&#x27;#paper&#x27;</span>),\n    ctx = canvas[<span class=\"hljs-number\">0</span>].getContext(<span class=\"hljs-string\">&#x27;2d&#x27;</span>);\n\n  <span class=\"hljs-comment\">// Generate an unique ID</span>\n  <span class=\"hljs-keyword\">var</span> id = <span class=\"hljs-built_in\">Math</span>.round($.now() * <span class=\"hljs-built_in\">Math</span>.random());\n\n  <span class=\"hljs-comment\">// A flag for drawing activity</span>\n  <span class=\"hljs-keyword\">var</span> drawing = <span class=\"hljs-literal\">false</span>;\n\n  <span class=\"hljs-keyword\">var</span> clients = {};\n  <span class=\"hljs-comment\">// create a event bus bridge to the server that served this file</span>\n  <span class=\"hljs-keyword\">var</span> eb = <span class=\"hljs-keyword\">new</span> vertx.EventBus(\n      <span class=\"hljs-built_in\">window</span>.location.protocol + <span class=\"hljs-string\">&#x27;//&#x27;</span> + <span class=\"hljs-built_in\">window</span>.location.hostname + <span class=\"hljs-string\">&#x27;:&#x27;</span> + <span class=\"hljs-built_in\">window</span>.location.port + <span class=\"hljs-string\">&#x27;/eventbus&#x27;</span>);\n\n  eb.onopen = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-comment\">// listen to draw events</span>\n    eb.registerHandler(<span class=\"hljs-string\">&#x27;draw&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{\n      <span class=\"hljs-comment\">// Is the user drawing?</span>\n      <span class=\"hljs-keyword\">if</span> (data.drawing &amp;&amp; clients[data.id]) {\n\n        <span class=\"hljs-comment\">// Draw a line on the canvas. clients[data.id] holds</span>\n        <span class=\"hljs-comment\">// the previous position of this user&#x27;s mouse pointer</span>\n\n        drawLine(clients[data.id].x, clients[data.id].y, data.x, data.y);\n      }\n\n      <span class=\"hljs-comment\">// Saving the current client state</span>\n      clients[data.id] = data;\n      clients[data.id].updated = $.now();\n    });\n  };\n\n  <span class=\"hljs-keyword\">var</span> prev = {};\n\n  canvas.on(<span class=\"hljs-string\">&#x27;mousedown&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">e</span>) </span>{\n    e.preventDefault();\n    drawing = <span class=\"hljs-literal\">true</span>;\n    prev.x = e.pageX;\n    prev.y = e.pageY;\n  });\n\n  doc.bind(<span class=\"hljs-string\">&#x27;mouseup mouseleave&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    drawing = <span class=\"hljs-literal\">false</span>;\n  });\n\n  <span class=\"hljs-keyword\">var</span> lastEmit = $.now();\n\n  doc.on(<span class=\"hljs-string\">&#x27;mousemove&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">e</span>) </span>{\n    <span class=\"hljs-keyword\">if</span> ($.now() - lastEmit &gt; <span class=\"hljs-number\">30</span>) {\n      eb.publish(<span class=\"hljs-string\">&#x27;draw&#x27;</span>, {\n        <span class=\"hljs-string\">&#x27;x&#x27;</span>: e.pageX,\n        <span class=\"hljs-string\">&#x27;y&#x27;</span>: e.pageY,\n        <span class=\"hljs-string\">&#x27;drawing&#x27;</span>: drawing,\n        <span class=\"hljs-string\">&#x27;id&#x27;</span>: id\n      });\n      lastEmit = $.now();\n    }\n\n    <span class=\"hljs-comment\">// Draw a line for the current user&#x27;s movement, as it is</span>\n    <span class=\"hljs-comment\">// not received in the eventbus</span>\n\n    <span class=\"hljs-keyword\">if</span> (drawing) {\n\n      drawLine(prev.x, prev.y, e.pageX, e.pageY);\n\n      prev.x = e.pageX;\n      prev.y = e.pageY;\n    }\n  });\n\n  <span class=\"hljs-comment\">// Remove inactive clients after 10 seconds of inactivity</span>\n  <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> ident <span class=\"hljs-keyword\">in</span> clients) {\n      <span class=\"hljs-keyword\">if</span> (clients.hasOwnProperty(ident)) {\n        <span class=\"hljs-keyword\">if</span> ($.now() - clients[ident].updated &gt; <span class=\"hljs-number\">10000</span>) {\n          <span class=\"hljs-comment\">// Last update was more than 10 seconds ago.</span>\n          <span class=\"hljs-comment\">// This user has probably closed the page</span>\n          <span class=\"hljs-keyword\">delete</span> clients[ident];\n        }\n      }\n    }\n\n  }, <span class=\"hljs-number\">10000</span>);\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">drawLine</span>(<span class=\"hljs-params\">fromx, fromy, tox, toy</span>) </span>{\n    ctx.moveTo(fromx, fromy);\n    ctx.lineTo(tox, toy);\n    ctx.stroke();\n  }\n\n});\n</code></pre><p>The most im­por­tant part in this code is all the code re­lated to <code>eb</code>. The vari­able <code>eb</code> is our bridge to the event\nbus, Start by cre­at­ing a bridge using the <code>vertx.EventBus</code> ob­ject and de­fine where to con­nect, using the de­tails\nof the cur­rent win­dow lo­ca­tion.</p><p>Then add a <code>onopen</code> lis­tener that will sub­scribe to the ad­dress <code>draw</code> on the event bus so it can lis­ten to all\nmes­sages re­gard­ing draw­ing and per­form the draw­ing ac­tions. Since lis­ten­ing is not enough I also add a mouse lis­tener\nto the doc­u­ment so when it moves it pub­lishes events to the <code>draw</code> ad­dress.</p><p>Note that I am using <code>publish</code> and not <code>send</code>, the rea­son should be ob­vi­ous, I want every­one to know this users mouse\nmove­ments, I am not in­ter­ested on send­ing the events to just a sin­gle user. You can see now that if you want to have\na draw­ing app in a one on one user basis then in­stead of <code>publish()</code> you should use <code>send()</code>.</p><h3 id=\"server-application\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#server-application\"></a>Server Application</h3><p>The server code is quite straight for­ward, all you need is:</p><pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> Router = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;vertx-web-js/router&quot;</span>);\n<span class=\"hljs-keyword\">var</span> SockJSHandler = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;vertx-web-js/sock_js_handler&quot;</span>);\n<span class=\"hljs-keyword\">var</span> StaticHandler = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;vertx-web-js/static_handler&quot;</span>);\n\n<span class=\"hljs-keyword\">var</span> router = Router.router(vertx);\n\n<span class=\"hljs-comment\">// Allow outbound traffic to the draw address</span>\n\n<span class=\"hljs-keyword\">var</span> options = {\n  <span class=\"hljs-string\">&quot;outboundPermitteds&quot;</span> : [{<span class=\"hljs-string\">&quot;address&quot;</span> : <span class=\"hljs-string\">&quot;draw&quot;</span>}],\n  <span class=\"hljs-string\">&quot;inboundPermitteds&quot;</span> :  [{<span class=\"hljs-string\">&quot;address&quot;</span> : <span class=\"hljs-string\">&quot;draw&quot;</span>}]\n};\n\nrouter.route(<span class=\"hljs-string\">&quot;/eventbus/*&quot;</span>).handler(SockJSHandler.create(vertx).bridge(options).handle);\n\n<span class=\"hljs-comment\">// Serve the static resources</span>\nrouter.route().handler(StaticHandler.create().handle);\n\nvertx.createHttpServer().requestHandler(router.accept).listen(<span class=\"hljs-number\">8080</span>);\n</code></pre><p>We start with the usual im­ports, we im­port a ref­er­ence to the <code>Router</code> ob­ject and a cou­ple of helper han­dlers\n<code>SockJSHandler</code> and <code>StaticHandler</code>. As their names should tell you one han­dler will be re­spon­si­ble to han­dle all\n<code>SockJS</code> data and the other all HTTP file serv­ing re­quests.</p><p>We then add then to a router and start a HTTP server that will han­dle all in­com­ing re­quest using the han­dler ac­cept\nfunc­tion. Fi­nally we lis­ten on port <code>8080</code> and we are ready.</p><p>Note that there is a op­tions ob­ject where a cou­ple of prop­er­ties are de­fined <code>outbound/inbound</code> per­mit­ted ad­dresses.\nWith­out this con­fig­u­ra­tion the ex­ter­nal ap­pli­ca­tion will not be al­lowed to con­nect to the vert.x bus, in fact the\nde­fault con­fig­u­ra­tion of the Sock­JSHan­dler is deny all. So you must spec­ify ex­plic­itly which ad­dress are al­lowed to\nre­ceive mes­sages from <code>SockJS</code> and which ones are al­lowed to send/pub­lish to <code>SockJS</code>.</p><p>Now you can start your ap­pli­ca­tion, don’t for­get to in­stall the de­pen­den­cies for the first time:</p><pre><code class=\"hljs language-bash\">npm install\n</code></pre><p>And then run the ap­pli­ca­tion:</p><pre><code class=\"hljs language-bash\">npm start\n</code></pre><p>If you now open 2 browser win­dows you will be able to draw nice pic­tures and see the draw­ing show­ing in “real time”\non the other win­dow, if you then draw on the sec­ond you should get the mir­ror ef­fect on the first win­dow.</p><p>Have fun!</p>","scope":{}}},"prevPost":{"meta":{"title":"Writing secure Vert.x Web apps","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"This is a starting guide for securing Vert.x web applications. Standard rules and practices apply to Vert.x apps as if they would to any other web framework."},"date":"2015-09-14","slug":"writing-secure-vert-x-web-apps"},"nextPost":{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Combine vert.x and mongo to build a giant","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This blog post is part of the introduction to Vert.x series. We are now going to replace this JDBC client by the vertx-mongo-client, and thus connect to a Mongo database."},"date":"2015-11-30","slug":"combine-vert-x-and-mongo-to-build-a-giant"},{"meta":{"title":"Using the asynchronous SQL client","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Finally, back... This post is the fifth post of the introduction to vert.x blog series, after a not-that-small break. In this post we are going to see how we can use JDBC in a vert.x application."},"date":"2015-10-19","slug":"using-the-asynchronous-sql-client"}]},"__N_SSG":true}