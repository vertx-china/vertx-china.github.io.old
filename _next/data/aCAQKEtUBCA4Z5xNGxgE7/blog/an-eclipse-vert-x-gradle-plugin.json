{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"An Eclipse Vert.x Gradle Plugin","category":"news","authors":[{"name":"Julien Ponge","github_id":"jponge"}],"summary":"The new Vert.x Gradle plugin offers an opinionated plugin for building Vert.x applications with Gradle."},"date":"2017-09-28","slug":"an-eclipse-vert-x-gradle-plugin","readingTime":{"text":"4 min read","minutes":3.305,"time":198300,"words":661},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Eclipse Vert.x is a ver\\xADsa\\xADtile toolkit, and as such it does not have any strong opin\\xADion on the tools that you should be using.\"), mdx(\"p\", null, \"Gra\\xADdle is a pop\\xADu\\xADlar build tool in the JVM ecosys\\xADtem, and it is quite easy to use for build\\xADing Vert.x project as \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/blob/master/gradle-verticles/gradle-verticle/build.gradle\"\n  }), \"show in one of the \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-examples\"), \" sam\\xADples\"), \" where a so-\\u200Bcalled \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"fat Jar\"), \" is being pro\\xADduced.\"), mdx(\"p\", null, \"The new \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\"\n  }), \"Vert.x Gra\\xADdle plugin\"), \" of\\xADfers an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"opin\\xADion\\xADated\"), \" plug\\xADin for build\\xADing Vert.x ap\\xADpli\\xADca\\xADtions with Gra\\xADdle.\"), mdx(\"p\", null, \"It au\\xADto\\xADmat\\xADi\\xADcally ap\\xADplies the fol\\xADlow\\xADing plu\\xADg\\xADins:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"java\"), \" (and sets the source com\\xADpat\\xADi\\xADbil\\xADity to Java 8),\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shadow\"), \" to gen\\xADer\\xADate fat Jars with all de\\xADpen\\xADden\\xADcies bun\\xADdled,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nebula-dependency-recommender-plugin\"), \" so that you can omit ver\\xADsions from mod\\xADules from the the Vert.x stack.\")), mdx(\"p\", null, \"The plug\\xADin au\\xADto\\xADmat\\xADi\\xADcally adds \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"io.vertx:vertx-core\"), \" as a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"compile\"), \" de\\xADpen\\xADdency, so you don\\u2019t need to do it.\"), mdx(\"p\", null, \"The plug\\xADin pro\\xADvides a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertxRun\"), \" task that can take ad\\xADvan\\xADtage of the Vert.x auto-\\u200Breloading ca\\xADpa\\xADbil\\xADi\\xADties, so you can just run it then have your code being au\\xADto\\xADmat\\xADi\\xADcally com\\xADpiled and re\\xADloaded as you make changes.\"), mdx(\"h2\", {\n    \"id\": \"getting-started\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#getting-started\"\n  })), \"Getting started\"), mdx(\"p\", null, \"A min\\xADi\\xADmal \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\"), \" looks like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-groovy\"\n  }), \"plugins {\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx.vertx-plugin'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'0.0.4'\"), \"\\n}\\n\\nrepositories {\\n  jcenter()\\n}\\n\\nvertx {\\n  mainVerticle = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'sample.App'\"), \"\\n}\\n\")), mdx(\"p\", null, \"Pro\\xADvided \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sample.App\"), \" is a Vert.x ver\\xADti\\xADcle, then:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradle shadowJar\"), \" builds an ex\\xADe\\xADcutable Jar with all de\\xADpen\\xADden\\xADcies: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"java -jar build/libs/simple-project-fat.jar\"), \", and\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradle vertxRun\"), \" starts the ap\\xADpli\\xADca\\xADtion and au\\xADto\\xADmat\\xADi\\xADcally re\\xADcom\\xADpiles (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradle classes\"), \") and re\\xADloads the code when any file under \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src/\"), \" is being added, mod\\xADi\\xADfied or deleted.\")), mdx(\"h2\", {\n    \"id\": \"using-with-kotlin-or-groovy-or\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#using-with-kotlin-or-groovy-or\"\n  })), \"Using with Kotlin (or Groovy, or\\u2026)\"), mdx(\"p\", null, \"The plug\\xADin in\\xADte\\xADgrates well with plu\\xADg\\xADins that add con\\xADfig\\xADu\\xADra\\xADtions and tasks trig\\xADgered by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"classes\"), \" task.\"), mdx(\"p\", null, \"Here is how to use the plug\\xADin with Kotlin (re\\xADplace the ver\\xADsion num\\xADbers with the lat\\xADest ones\\u2026):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-groovy\"\n  }), \"plugins {\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx.vertx-plugin'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'x.y.z'\"), \"\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'org.jetbrains.kotlin.jvm'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'a.b.c'\"), \"\\n}\\n\\nrepositories {\\n  jcenter()\\n}\\n\\ndependencies {\\n  compile \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx:vertx-lang-kotlin'\"), \"\\n  compile \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'org.jetbrains.kotlin:kotlin-stdlib-jre8'\"), \"\\n}\\n\\nvertx {\\n  mainVerticle = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"sample.MainVerticle\\\"\"), \"\\n}\\n\\ntasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {\\n  kotlinOptions {\\n    jvmTarget = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"1.8\\\"\"), \"\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"using-with-webpack-or-any-other-custom-task\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#using-with-webpack-or-any-other-custom-task\"\n  })), \"Using with WebPack (or any other custom task)\"), mdx(\"p\", null, \"Web\\xADPack is pop\\xADu\\xADlar to bun\\xADdle web as\\xADsets, and there is even \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://guides.gradle.org/running-webpack-with-gradle/\"\n  }), \"a guide for its in\\xADte\\xADgra\\xADtion with Gra\\xADdle\"), \".\"), mdx(\"p\", null, \"Mix\\xADing the Vert.x Gra\\xADdle plug\\xADin with Web\\xADPack is very sim\\xADple, es\\xADpe\\xADcially in com\\xADbi\\xADna\\xADtion with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"com.moowork.node\"), \" plug\\xADin that in\\xADte\\xADgrates Node into Gra\\xADdle.\"), mdx(\"p\", null, \"Sup\\xADpose we want to mix Vert.x code and JavaScript with Gra\\xADdle and Web\\xADPack.\\nWe as\\xADsume a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" as:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-javascript\"\n  }), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"name\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"webpack-sample\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"version\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"0.0.1\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"description\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"A sample with Vert.x, Gradle and Webpack\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"main\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"src/main/webapp/index.js\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"scripts\\\"\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"test\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"echo \\\\\\\"Error: no test specified\\\\\\\" && exit 1\\\"\"), \"\\n  },\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"author\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"license\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"ISC\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"devDependencies\\\"\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"webpack\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"^2.7.0\\\"\"), \"\\n  },\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"dependencies\\\"\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"axios\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"^0.16.2\\\"\"), \"\\n  }\\n}\\n\")), mdx(\"p\", null, \"and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack.config.js\"), \" as:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"module\"), \".exports = {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"entry\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'./src/main/webapp/index.js'\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"output\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"filename\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'./build/resources/main/webroot/bundle.js'\"), \"\\n  }\\n}\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\"), \" file is the fol\\xADlow\\xADing:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-groovy\"\n  }), \"plugins {\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx.vertx-plugin'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'0.0.4'\"), \"\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'com.moowork.node'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'1.2.0'\"), \"\\n}\\n\\nrepositories {\\n  jcenter()\\n}\\n\\ndependencies {\\n  compile \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"io.vertx:vertx-web\\\"\"), \"\\n}\\n\\nvertx {\\n  mainVerticle = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"sample.MainVerticle\\\"\"), \"\\n  watch = [\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"src/**/*\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"build.gradle\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"yarn.lock\\\"\"), \"]\\n  onRedeploy = [\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"classes\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"webpack\\\"\"), \"]\\n}\\n\\ntask webpack(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"type:\"), \" Exec) {\\n  inputs.file(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$projectDir/yarn.lock\\\"\"), \")\\n  inputs.file(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$projectDir/webpack.config.js\\\"\"), \")\\n  inputs.dir(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$projectDir/src/main/webapp\\\"\"), \")\\n  outputs.dir(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$buildDir/resources/main/webroot\\\"\"), \")\\n  commandLine \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$projectDir/node_modules/.bin/webpack\\\"\"), \"\\n}\\n\")), mdx(\"p\", null, \"This cus\\xADtom build ex\\xADposes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack\"), \" task that in\\xADvokes Web\\xADPack, with proper file track\\xADing so that Gra\\xADdle knows when the task is up-\\u200Bto-date or not.\"), mdx(\"p\", null, \"The Node plug\\xADin adds many tasks, and in\\xADte\\xADgrates fine with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn\"), \", so fetch\\xADing all NPM de\\xADpen\\xADden\\xADcies is done by call\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./gradlew yarn\"), \".\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertxRun\"), \" task now re\\xADde\\xADploys on mod\\xADi\\xADfi\\xADca\\xADtions to files in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/\"), \" (and sub-\\u200Bfolders), \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn.lock\"), \", call\\xADing both the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"classes\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack\"), \" tasks:\"), mdx(\"div\", {\n    className: \"youtube-embed\"\n  }, mdx(\"iframe\", {\n    src: \"https://www.youtube.com/embed/OGy-1w8Z6Dc?rel=0\",\n    frameBorder: \"0\",\n    allowFullScreen: true\n  })), mdx(\"h2\", {\n    \"id\": \"summary\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#summary\"\n  })), \"Summary\"), mdx(\"p\", null, \"The Vert.x Gra\\xADdle plug\\xADin pro\\xADvides lots of de\\xADfaults to con\\xADfig\\xADure a Gra\\xADdle project for Vert.x ap\\xADpli\\xADca\\xADtions, pro\\xADduc\\xADing \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"fat Jars\"), \" and of\\xADfer\\xADing a run\\xADning task with au\\xADto\\xADmatic re\\xADde\\xADploy\\xADment.\\nThe plug\\xADin also in\\xADte\\xADgrates well with other plu\\xADg\\xADins and ex\\xADter\\xADnal tools for which a Gra\\xADdle task is avail\\xADable.\"), mdx(\"p\", null, \"The project is still in its early stages and we are look\\xADing for\\xADward to hear\\xADing from you!\"), mdx(\"h3\", {\n    \"id\": \"links\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#links\"\n  })), \"Links\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/jponge/vertx-gradle-plugin\"\n  }), \"The project on GitHub\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\"\n  }), \"The plug\\xADin on the Gra\\xADdle plu\\xADg\\xADins por\\xADtal\"))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>Eclipse Vert.x is a ver­sa­tile toolkit, and as such it does not have any strong opin­ion on the tools that you should be using.</p><p>Gra­dle is a pop­u­lar build tool in the JVM ecosys­tem, and it is quite easy to use for build­ing Vert.x project as <a href=\"https://github.com/vert-x3/vertx-examples/blob/master/gradle-verticles/gradle-verticle/build.gradle\">show in one of the <code>vertx-examples</code> sam­ples</a> where a so-​called <em>fat Jar</em> is being pro­duced.</p><p>The new <a href=\"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\">Vert.x Gra­dle plugin</a> of­fers an <em>opin­ion­ated</em> plug­in for build­ing Vert.x ap­pli­ca­tions with Gra­dle.</p><p>It au­to­mat­i­cally ap­plies the fol­low­ing plu­g­ins:</p><ul><li><code>java</code> (and sets the source com­pat­i­bil­ity to Java 8),</li><li><code>application</code> + <code>shadow</code> to gen­er­ate fat Jars with all de­pen­den­cies bun­dled,</li><li><code>nebula-dependency-recommender-plugin</code> so that you can omit ver­sions from mod­ules from the the Vert.x stack.</li></ul><p>The plug­in au­to­mat­i­cally adds <code>io.vertx:vertx-core</code> as a <code>compile</code> de­pen­dency, so you don’t need to do it.</p><p>The plug­in pro­vides a <code>vertxRun</code> task that can take ad­van­tage of the Vert.x auto-​reloading ca­pa­bil­i­ties, so you can just run it then have your code being au­to­mat­i­cally com­piled and re­loaded as you make changes.</p><h2 id=\"getting-started\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#getting-started\"></a>Getting started</h2><p>A min­i­mal <code>build.gradle</code> looks like:</p><pre><code class=\"hljs language-groovy\">plugins {\n  id <span class=\"hljs-string\">&#x27;io.vertx.vertx-plugin&#x27;</span> version <span class=\"hljs-string\">&#x27;0.0.4&#x27;</span>\n}\n\nrepositories {\n  jcenter()\n}\n\nvertx {\n  mainVerticle = <span class=\"hljs-string\">&#x27;sample.App&#x27;</span>\n}\n</code></pre><p>Pro­vided <code>sample.App</code> is a Vert.x ver­ti­cle, then:</p><ol><li><code>gradle shadowJar</code> builds an ex­e­cutable Jar with all de­pen­den­cies: <code>java -jar build/libs/simple-project-fat.jar</code>, and</li><li><code>gradle vertxRun</code> starts the ap­pli­ca­tion and au­to­mat­i­cally re­com­piles (<code>gradle classes</code>) and re­loads the code when any file under <code>src/</code> is being added, mod­i­fied or deleted.</li></ol><h2 id=\"using-with-kotlin-or-groovy-or\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#using-with-kotlin-or-groovy-or\"></a>Using with Kotlin (or Groovy, or…)</h2><p>The plug­in in­te­grates well with plu­g­ins that add con­fig­u­ra­tions and tasks trig­gered by the <code>classes</code> task.</p><p>Here is how to use the plug­in with Kotlin (re­place the ver­sion num­bers with the lat­est ones…):</p><pre><code class=\"hljs language-groovy\">plugins {\n  id <span class=\"hljs-string\">&#x27;io.vertx.vertx-plugin&#x27;</span> version <span class=\"hljs-string\">&#x27;x.y.z&#x27;</span>\n  id <span class=\"hljs-string\">&#x27;org.jetbrains.kotlin.jvm&#x27;</span> version <span class=\"hljs-string\">&#x27;a.b.c&#x27;</span>\n}\n\nrepositories {\n  jcenter()\n}\n\ndependencies {\n  compile <span class=\"hljs-string\">&#x27;io.vertx:vertx-lang-kotlin&#x27;</span>\n  compile <span class=\"hljs-string\">&#x27;org.jetbrains.kotlin:kotlin-stdlib-jre8&#x27;</span>\n}\n\nvertx {\n  mainVerticle = <span class=\"hljs-string\">&quot;sample.MainVerticle&quot;</span>\n}\n\ntasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {\n  kotlinOptions {\n    jvmTarget = <span class=\"hljs-string\">&quot;1.8&quot;</span>\n  }\n}\n</code></pre><h2 id=\"using-with-webpack-or-any-other-custom-task\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#using-with-webpack-or-any-other-custom-task\"></a>Using with WebPack (or any other custom task)</h2><p>Web­Pack is pop­u­lar to bun­dle web as­sets, and there is even <a href=\"https://guides.gradle.org/running-webpack-with-gradle/\">a guide for its in­te­gra­tion with Gra­dle</a>.</p><p>Mix­ing the Vert.x Gra­dle plug­in with Web­Pack is very sim­ple, es­pe­cially in com­bi­na­tion with the <code>com.moowork.node</code> plug­in that in­te­grates Node into Gra­dle.</p><p>Sup­pose we want to mix Vert.x code and JavaScript with Gra­dle and Web­Pack.\nWe as­sume a <code>package.json</code> as:</p><pre><code class=\"hljs language-javascript\">{\n  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;webpack-sample&quot;</span>,\n  <span class=\"hljs-string\">&quot;version&quot;</span>: <span class=\"hljs-string\">&quot;0.0.1&quot;</span>,\n  <span class=\"hljs-string\">&quot;description&quot;</span>: <span class=\"hljs-string\">&quot;A sample with Vert.x, Gradle and Webpack&quot;</span>,\n  <span class=\"hljs-string\">&quot;main&quot;</span>: <span class=\"hljs-string\">&quot;src/main/webapp/index.js&quot;</span>,\n  <span class=\"hljs-string\">&quot;scripts&quot;</span>: {\n    <span class=\"hljs-string\">&quot;test&quot;</span>: <span class=\"hljs-string\">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span>\n  },\n  <span class=\"hljs-string\">&quot;author&quot;</span>: <span class=\"hljs-string\">&quot;&quot;</span>,\n  <span class=\"hljs-string\">&quot;license&quot;</span>: <span class=\"hljs-string\">&quot;ISC&quot;</span>,\n  <span class=\"hljs-string\">&quot;devDependencies&quot;</span>: {\n    <span class=\"hljs-string\">&quot;webpack&quot;</span>: <span class=\"hljs-string\">&quot;^2.7.0&quot;</span>\n  },\n  <span class=\"hljs-string\">&quot;dependencies&quot;</span>: {\n    <span class=\"hljs-string\">&quot;axios&quot;</span>: <span class=\"hljs-string\">&quot;^0.16.2&quot;</span>\n  }\n}\n</code></pre><p>and <code>webpack.config.js</code> as:</p><pre><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">entry</span>: <span class=\"hljs-string\">&#x27;./src/main/webapp/index.js&#x27;</span>,\n  <span class=\"hljs-attr\">output</span>: {\n    <span class=\"hljs-attr\">filename</span>: <span class=\"hljs-string\">&#x27;./build/resources/main/webroot/bundle.js&#x27;</span>\n  }\n}\n</code></pre><p>The <code>build.gradle</code> file is the fol­low­ing:</p><pre><code class=\"hljs language-groovy\">plugins {\n  id <span class=\"hljs-string\">&#x27;io.vertx.vertx-plugin&#x27;</span> version <span class=\"hljs-string\">&#x27;0.0.4&#x27;</span>\n  id <span class=\"hljs-string\">&#x27;com.moowork.node&#x27;</span> version <span class=\"hljs-string\">&#x27;1.2.0&#x27;</span>\n}\n\nrepositories {\n  jcenter()\n}\n\ndependencies {\n  compile <span class=\"hljs-string\">&quot;io.vertx:vertx-web&quot;</span>\n}\n\nvertx {\n  mainVerticle = <span class=\"hljs-string\">&quot;sample.MainVerticle&quot;</span>\n  watch = [<span class=\"hljs-string\">&quot;src/**/*&quot;</span>, <span class=\"hljs-string\">&quot;build.gradle&quot;</span>, <span class=\"hljs-string\">&quot;yarn.lock&quot;</span>]\n  onRedeploy = [<span class=\"hljs-string\">&quot;classes&quot;</span>, <span class=\"hljs-string\">&quot;webpack&quot;</span>]\n}\n\ntask webpack(<span class=\"hljs-attr\">type:</span> Exec) {\n  inputs.file(<span class=\"hljs-string\">&quot;$projectDir/yarn.lock&quot;</span>)\n  inputs.file(<span class=\"hljs-string\">&quot;$projectDir/webpack.config.js&quot;</span>)\n  inputs.dir(<span class=\"hljs-string\">&quot;$projectDir/src/main/webapp&quot;</span>)\n  outputs.dir(<span class=\"hljs-string\">&quot;$buildDir/resources/main/webroot&quot;</span>)\n  commandLine <span class=\"hljs-string\">&quot;$projectDir/node_modules/.bin/webpack&quot;</span>\n}\n</code></pre><p>This cus­tom build ex­poses a <code>webpack</code> task that in­vokes Web­Pack, with proper file track­ing so that Gra­dle knows when the task is up-​to-date or not.</p><p>The Node plug­in adds many tasks, and in­te­grates fine with <code>npm</code> or <code>yarn</code>, so fetch­ing all NPM de­pen­den­cies is done by call­ing <code>./gradlew yarn</code>.</p><p>The <code>vertxRun</code> task now re­de­ploys on mod­i­fi­ca­tions to files in <code>src/</code> (and sub-​folders), <code>build.gradle</code> and <code>yarn.lock</code>, call­ing both the <code>classes</code> and <code>webpack</code> tasks:</p><div class=\"youtube-embed\"><iframe src=\"https://www.youtube.com/embed/OGy-1w8Z6Dc?rel=0\" frameBorder=\"0\" allowfullscreen=\"\"></iframe></div><h2 id=\"summary\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#summary\"></a>Summary</h2><p>The Vert.x Gra­dle plug­in pro­vides lots of de­faults to con­fig­ure a Gra­dle project for Vert.x ap­pli­ca­tions, pro­duc­ing <em>fat Jars</em> and of­fer­ing a run­ning task with au­to­matic re­de­ploy­ment.\nThe plug­in also in­te­grates well with other plu­g­ins and ex­ter­nal tools for which a Gra­dle task is avail­able.</p><p>The project is still in its early stages and we are look­ing for­ward to hear­ing from you!</p><h3 id=\"links\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#links\"></a>Links</h3><ul><li><a href=\"https://github.com/jponge/vertx-gradle-plugin\">The project on GitHub</a></li><li><a href=\"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\">The plug­in on the Gra­dle plu­g­ins por­tal</a></li></ul>","scope":{}}},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.5.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The Vert.x team is pleased to announce the release of Eclipse Vert.x 3.5.0."},"date":"2017-10-20","slug":"eclipse-vert-x-3-5-0-released"},"nextPost":{"meta":{"title":"Introducing Vert.x MQTT client","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this article, we will see how to set up the new Vert.x MQTT client. An example project is available on GitHub."},"date":"2017-08-21","slug":"introducing-vert-x-mqtt-client"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"TCP Client using Eclipse Vert.x, Kotlin and Gradle build","category":"guides","authors":[{"name":"Usman Saleem","github_id":"usmansaleem"}],"summary":"In this blog post, I demonstrate how to write a very simple TCP client that keeps a connection open to a custom-written server in cloud."},"date":"2017-12-20","slug":"tcp-client-using-eclipse-vert-x-kotlin-and-gradle-build"},{"meta":{"title":"Checklist for Migrating from Vert.x 2.1.x to Vert.x 3 - Part One","category":"guides","authors":[{"name":"Mark Spritzler","github_id":"bytor99999"}],"summary":"So while upgrading our application, I thought I should note down all the changes that we had to do in the process. Since Vert.x 3 is a major upgrade from the previous version, with so many changes."},"date":"2015-07-06","slug":"checklist-for-migrating-from-vert-x-2-1-x-to-vert-x-3-part-one"}]},"__N_SSG":true}