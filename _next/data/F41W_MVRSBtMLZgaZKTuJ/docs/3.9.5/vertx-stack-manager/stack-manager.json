{"pageProps":{"slug":"3.9.5/vertx-stack-manager/stack-manager","title":"Stack Manager","fallbackGitHubStars":null,"toc":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_stack_manager\">Stack Manager</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_adding_artifacts\">Adding artifacts</a></li>\n<li><a href=\"#_removing_artifacts\">Removing artifacts</a></li>\n<li><a href=\"#_launching_the_resolution\">Launching the resolution</a></li>\n<li><a href=\"#_exclusions_and_transitives\">Exclusions and Transitives</a></li>\n<li><a href=\"#_using_variables\">Using variables</a></li>\n<li><a href=\"#_a_note_about_the_json_format\">A note about the JSON format</a></li>\n</ul>\n</li>\n</ul>\n</div>","contents":"\n<div class=\"sect1\">\n<h2 id=\"_stack_manager\"><a class=\"anchor\" href=\"#_stack_manager\"></a>Stack Manager</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The stack manager is a tool to manage your vert.x distribution.</p>\n</div>\n<div class=\"paragraph\">\n<p>It maintains the set of jar files contained in the\n<code>lib</code> directory. The stack manager takes as input a YAML file describing the <em>dependencies</em> that should be\nincluded in the stack. Then, during the resolution it resolves new dependencies and delete the files that are not\nused anymore.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you have downloaded a vert.x distribution, it comes with a <code>vertx-stack.json</code> in the root directory. This file\ncontains all the official dependencies you can add. By default it <em>includes</em> only the minimal stack.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_adding_artifacts\"><a class=\"anchor\" href=\"#_adding_artifacts\"></a>Adding artifacts</h3>\n<div class=\"paragraph\">\n<p>To add an artifact to your stack, just add the dependency if not there already, and set the <code>included</code> value to\n<code>true</code>:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>{\n \"groupId\": \"io.vertx\",\n \"artifactId\": \"vertx-sync\",\n \"version\": \"${vertx.version}\",\n \"included\": true\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The dependency is described using the Maven coordinates. The <code>groupId</code>, <code>artifactId</code> and <code>versions</code> attributes are\nmandatory. You can also set the <code>type</code> (<code>jar</code> by default) and <code>classifier</code> (none by default).</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_removing_artifacts\"><a class=\"anchor\" href=\"#_removing_artifacts\"></a>Removing artifacts</h3>\n<div class=\"paragraph\">\n<p>To remove an artifact, remove the dependency or set the <code>included</code> attribute to <code>false</code>:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>{\n \"groupId\": \"io.vertx\",\n \"artifactId\": \"vertx-sync\",\n \"version\": \"${vertx.version}\",\n \"included\": false\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>During the resolution, all files that are not associated to a dependency (or a transitive dependency) are removed.\nThat means don&#8217;t add files manually, they are going to be deleted.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_launching_the_resolution\"><a class=\"anchor\" href=\"#_launching_the_resolution\"></a>Launching the resolution</h3>\n<div class=\"paragraph\">\n<p>To launch the resolution, launch:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>./bin/vertx resolve --dir=lib</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The <code>resolve</code> command supports a set of options:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>--dir &lt;value&gt;</code> - The directory containing the artifacts composing the stack. Defaults to the <code>./lib</code>\ndirectory</p>\n</li>\n<li>\n<p><code>--fail-on-conflict</code>  - Set whether or not the resolver should fail or conflict or just log a warning. Disabled by default.</p>\n</li>\n<li>\n<p><code>--http-proxy &lt;value&gt;</code> - Set the HTTP proxy address if any.</p>\n</li>\n<li>\n<p><code>--https-proxy &lt;value&gt;</code> - Set the HTTPS proxy address if any.</p>\n</li>\n<li>\n<p><code>--local-repo &lt;value&gt;</code> - Set the path to the local Maven repository. Defaults to <code>~/.m2/repository</code></p>\n</li>\n<li>\n<p><code>--remote-repo &lt;value&gt;</code> -  Set the path to a remote Maven repository. Can be set multiple times</p>\n</li>\n<li>\n<p><code>&lt;vertx-stack.json&gt;</code> - The path to the stack descriptor. Defaults to <code>vertx-stack.json</code>.</p>\n</li>\n<li>\n<p><code>--no-cache</code> -  Disable the resolver cache</p>\n</li>\n<li>\n<p><code>--no-cache-for-snapshots</code> - Disable the caching of snapshot resolution</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>If you have set <code>VERTX_HOME</code> as environment variable (or system variable), it uses: <code>$VERTX_HOME/lib</code> and\n<code>$VERTX_HOME/vertx-stack.json</code>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_exclusions_and_transitives\"><a class=\"anchor\" href=\"#_exclusions_and_transitives\"></a>Exclusions and Transitives</h3>\n<div class=\"paragraph\">\n<p>Each dependency can declare a set of exclusions that won&#8217;t be resolved during the resolution process:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>{\n \"groupId\": \"org.acme\",\n \"artifactId\": \"acme-lib\",\n \"version\": \"1.0.0\",\n \"included\": true,\n \"exclusions\": [{\n   \"groupId\": \"org.acme\",\n   \"artifactId\": \"acme-not-required\"\n }]\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You can also set the <code>transitive</code> attribute to <code>false</code> on a dependency to not resolve the transitive dependencies.\nThis is useful when using fat jars or shaded artifacts:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>{\n \"groupId\": \"io.vertx\",\n \"artifactId\": \"vertx-web-templ-thymeleaf\",\n \"version\": \"${vertx.version}\",\n \"included\": true,\n \"classifier\": \"shaded\",\n \"transitive\": false\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_using_variables\"><a class=\"anchor\" href=\"#_using_variables\"></a>Using variables</h3>\n<div class=\"paragraph\">\n<p>The stack definition allows you to declare variables:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>{\n\"variables\": {\n  \"vertx.version\": \"3.9.5\"\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Then your dependency can uses this variable using the <code>${}</code> notation.</p>\n</div>\n<div class=\"paragraph\">\n<p>Variables can be set or overridden using system variables. System variables can be set with <code>-D</code></p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_a_note_about_the_json_format\"><a class=\"anchor\" href=\"#_a_note_about_the_json_format\"></a>A note about the JSON format</h3>\n<div class=\"paragraph\">\n<p>The descriptor format supports:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>comments using <code>//</code></p>\n</li>\n<li>\n<p>non quoted keys (such as <code>groupId : \"org.acme\"</code>)</p>\n</li>\n<li>\n<p>single quotes for values (such as <code>groupId : 'org.acme'</code>)</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>","version":"3.9.5"},"__N_SSG":true}