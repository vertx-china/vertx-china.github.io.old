{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"The RSS reader tutorial (Step 3)","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"This is the third installment of our Vert.x Cassandra Client tutorial. We will implement the last RSS endpoint serving a list of articles related to a specific channel."},"date":"2018-12-06","slug":"the-rss-reader-tutorial-step-3","readingTime":{"text":"2 min read","minutes":1.585,"time":95100,"words":317},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Now that \", mdx(Link, {\n    href: \"/blog/eclipse-vert-x-3-6-0-released/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x 3.6.0 has been re\\xADleased\")), \", it\\u2019s the per\\xADfect time to con\\xADclude our \", mdx(Link, {\n    href: \"/docs/vertx-cassandra-client/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x Cas\\xADsan\\xADdra Client\")), \" tu\\xADto\\xADr\\xADial!\"), mdx(\"p\", null, \"In \", mdx(Link, {\n    href: \"/blog/the-rss-reader-tutorial-step-2/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"the pre\\xADvi\\xADous step\")), \", we have suc\\xADcess\\xADfully im\\xADple\\xADmented the sec\\xADond end\\xADpoint\\nof the RSS reader app.\"), mdx(\"p\", null, \"The RSS reader ex\\xADam\\xADple as\\xADsumes im\\xADple\\xADment\\xADing three end\\xADpoints. This ar\\xADti\\xADcle is ded\\xADi\\xADcated to im\\xADple\\xADment\\xADing the last \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET /articles/by_rss_link?link={rss_link}\"), \" end\\xADpoint.\"), mdx(\"p\", null, \"Be\\xADfore com\\xADplet\\xADing this step, make sure your are in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"step_3\"), \" git branch:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-better-shell\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"$\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"bash\"\n  }), \" git checkout step_3\"), \"\\n\")), mdx(\"h2\", {\n    \"id\": \"implementing-the-3rd-endpoint\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#implementing-the-3rd-endpoint\"\n  })), \"Implementing the 3rd endpoint\"), mdx(\"p\", null, \"The 3rd end\\xADpoint serves a list of ar\\xADti\\xADcles re\\xADlated to a spe\\xADcific RSS chan\\xADnel. In a re\\xADquest, we spec\\xADify RSS chan\\xADnel by pro\\xADvid\\xADing a link. On the ap\\xADpli\\xADca\\xADtion side, after re\\xADceiv\\xADing a re\\xADquest we ex\\xADe\\xADcute the fol\\xADlow\\xADing query:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-sql\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"SELECT\"), \" title, article_link, description, pubDate \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"FROM\"), \" articles_by_rss_link \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"WHERE\"), \" rss_link = RSS_LINK_FROM_REQUEST ;\\n\")), mdx(\"h2\", {\n    \"id\": \"implementation\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#implementation\"\n  })), \"Implementation\"), mdx(\"p\", null, \"For ob\\xADtain\\xADing ar\\xADti\\xADcles by RSS link we need to pre\\xADpare a re\\xADlated state\\xADment first. Change \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AppVerticle#prepareSelectArticlesByRssLink\"), \" in this way:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" Future<Void> \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"prepareSelectArticlesByRssLink\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" Util.prepareQueryAndSetReference(client,\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT title, article_link, description, pubDate FROM articles_by_rss_link WHERE rss_link = ? ;\\\"\"), \",\\n            selectArticlesByRssLink\\n    );\\n}\\n\")), mdx(\"p\", null, \"And now, we can im\\xADple\\xADment the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AppVerticle#getArticles\"), \" method. Ba\\xADsi\\xADcally, it will use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"selectArticlesByRssLink\"), \" state\\xADment for find\\xADing ar\\xADti\\xADcles by the given link. Here\\u2019s the im\\xADple\\xADmen\\xADta\\xADtion:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"getArticles\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(RoutingContext ctx)\"), \" \"), \"{\\n    String link = ctx.request().getParam(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"link\\\"\"), \");\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (link == \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"null\"), \") {\\n        responseWithInvalidRequest(ctx);\\n    } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n        client.executeWithFullFetch(selectArticlesByRssLink.bind(link), handler -> {\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (handler.succeeded()) {\\n                List<Row> rows = handler.result();\\n\\n                JsonObject responseJson = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject();\\n                JsonArray articles = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonArray();\\n\\n                rows.forEach(eachRow -> articles.add(\\n                        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject()\\n                                .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"title\\\"\"), \", eachRow.getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"0\"), \"))\\n                                .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"link\\\"\"), \", eachRow.getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"1\"), \"))\\n                                .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"description\\\"\"), \", eachRow.getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"2\"), \"))\\n                                .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"pub_date\\\"\"), \", eachRow.getTimestamp(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"3\"), \").getTime())\\n                ));\\n\\n                responseJson.put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"articles\\\"\"), \", articles);\\n                ctx.response().end(responseJson.toString());\\n            } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n                log.error(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"failed to get articles for \\\"\"), \" + link, handler.cause());\\n                ctx.response().setStatusCode(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"500\"), \").end(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Unable to retrieve the info from C*\\\"\"), \");\\n            }\\n        });\\n    }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"conclusion\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#conclusion\"\n  })), \"Conclusion\"), mdx(\"p\", null, \"Dur\\xADing the se\\xADries, we have shown how the RSS reader app can be im\\xADple\\xADmented with the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-cassandra-client\"\n  }), \"Vert.x Cas\\xADsan\\xADdra client\"), \".\"), mdx(\"p\", null, \"Thanks for read\\xADing this. I hope you en\\xADjoyed this se\\xADries. See you soon on our \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gitter.im/eclipse-vertx/vertx-users\"\n  }), \"Git\\xADter chan\\xADnel\"), \"!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>Now that <a href=\"/blog/eclipse-vert-x-3-6-0-released/\">Vert.x 3.6.0 has been re­leased</a>, it’s the per­fect time to con­clude our <a href=\"/docs/vertx-cassandra-client/java/\">Vert.x Cas­san­dra Client</a> tu­to­r­ial!</p><p>In <a href=\"/blog/the-rss-reader-tutorial-step-2/\">the pre­vi­ous step</a>, we have suc­cess­fully im­ple­mented the sec­ond end­point\nof the RSS reader app.</p><p>The RSS reader ex­am­ple as­sumes im­ple­ment­ing three end­points. This ar­ti­cle is ded­i­cated to im­ple­ment­ing the last <code>GET /articles/by_rss_link?link={rss_link}</code> end­point.</p><p>Be­fore com­plet­ing this step, make sure your are in the <code>step_3</code> git branch:</p><pre><code class=\"hljs language-better-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git checkout step_3</span>\n</code></pre><h2 id=\"implementing-the-3rd-endpoint\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#implementing-the-3rd-endpoint\"></a>Implementing the 3rd endpoint</h2><p>The 3rd end­point serves a list of ar­ti­cles re­lated to a spe­cific RSS chan­nel. In a re­quest, we spec­ify RSS chan­nel by pro­vid­ing a link. On the ap­pli­ca­tion side, after re­ceiv­ing a re­quest we ex­e­cute the fol­low­ing query:</p><pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> title, article_link, description, pubDate <span class=\"hljs-keyword\">FROM</span> articles_by_rss_link <span class=\"hljs-keyword\">WHERE</span> rss_link = RSS_LINK_FROM_REQUEST ;\n</code></pre><h2 id=\"implementation\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#implementation\"></a>Implementation</h2><p>For ob­tain­ing ar­ti­cles by RSS link we need to pre­pare a re­lated state­ment first. Change <code>AppVerticle#prepareSelectArticlesByRssLink</code> in this way:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> Future&lt;Void&gt; <span class=\"hljs-title\">prepareSelectArticlesByRssLink</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-keyword\">return</span> Util.prepareQueryAndSetReference(client,\n            <span class=\"hljs-string\">&quot;SELECT title, article_link, description, pubDate FROM articles_by_rss_link WHERE rss_link = ? ;&quot;</span>,\n            selectArticlesByRssLink\n    );\n}\n</code></pre><p>And now, we can im­ple­ment the <code>AppVerticle#getArticles</code> method. Ba­si­cally, it will use the <code>selectArticlesByRssLink</code> state­ment for find­ing ar­ti­cles by the given link. Here’s the im­ple­men­ta­tion:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getArticles</span><span class=\"hljs-params\">(RoutingContext ctx)</span> </span>{\n    String link = ctx.request().getParam(<span class=\"hljs-string\">&quot;link&quot;</span>);\n    <span class=\"hljs-keyword\">if</span> (link == <span class=\"hljs-keyword\">null</span>) {\n        responseWithInvalidRequest(ctx);\n    } <span class=\"hljs-keyword\">else</span> {\n        client.executeWithFullFetch(selectArticlesByRssLink.bind(link), handler -&gt; {\n            <span class=\"hljs-keyword\">if</span> (handler.succeeded()) {\n                List&lt;Row&gt; rows = handler.result();\n\n                JsonObject responseJson = <span class=\"hljs-keyword\">new</span> JsonObject();\n                JsonArray articles = <span class=\"hljs-keyword\">new</span> JsonArray();\n\n                rows.forEach(eachRow -&gt; articles.add(\n                        <span class=\"hljs-keyword\">new</span> JsonObject()\n                                .put(<span class=\"hljs-string\">&quot;title&quot;</span>, eachRow.getString(<span class=\"hljs-number\">0</span>))\n                                .put(<span class=\"hljs-string\">&quot;link&quot;</span>, eachRow.getString(<span class=\"hljs-number\">1</span>))\n                                .put(<span class=\"hljs-string\">&quot;description&quot;</span>, eachRow.getString(<span class=\"hljs-number\">2</span>))\n                                .put(<span class=\"hljs-string\">&quot;pub_date&quot;</span>, eachRow.getTimestamp(<span class=\"hljs-number\">3</span>).getTime())\n                ));\n\n                responseJson.put(<span class=\"hljs-string\">&quot;articles&quot;</span>, articles);\n                ctx.response().end(responseJson.toString());\n            } <span class=\"hljs-keyword\">else</span> {\n                log.error(<span class=\"hljs-string\">&quot;failed to get articles for &quot;</span> + link, handler.cause());\n                ctx.response().setStatusCode(<span class=\"hljs-number\">500</span>).end(<span class=\"hljs-string\">&quot;Unable to retrieve the info from C*&quot;</span>);\n            }\n        });\n    }\n}\n</code></pre><h2 id=\"conclusion\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#conclusion\"></a>Conclusion</h2><p>Dur­ing the se­ries, we have shown how the RSS reader app can be im­ple­mented with the <a href=\"https://github.com/vert-x3/vertx-cassandra-client\">Vert.x Cas­san­dra client</a>.</p><p>Thanks for read­ing this. I hope you en­joyed this se­ries. See you soon on our <a href=\"https://gitter.im/eclipse-vertx/vertx-users\">Git­ter chan­nel</a>!</p>","scope":{}}},"prevPost":{"meta":{"title":"HTTP response validation with the Vert.x Web Client","category":"guides","authors":[{"name":"Thomas Segismont","github_id":"tsegismont"}],"summary":"Learn how to use response predicates from the Vert.x Web module to validate HTTP responses and to automatically generate error messages."},"date":"2018-12-10","slug":"http-response-validation-with-the-vert-x-web-client"},"nextPost":{"meta":{"title":"Eclipse Vert.x 3.6.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are pleased to announce the Eclipse Vert.x 3.6.0 release."},"date":"2018-12-03","slug":"eclipse-vert-x-3-6-0-released"},"relatedPosts":[{"meta":{"title":"The RSS reader tutorial","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this tutorial, you will learn how to use the Eclipse Vert.x Cassandra client in practice. We will develop an RSS reader with three HTTP endpoints."},"date":"2018-08-20","slug":"the-rss-reader-tutorial"},{"meta":{"title":"The RSS reader tutorial (Step 2)","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this second installment of our Vert.x Cassandra Client tutorial, we will add an endpoint that produces an array of RSS channels for a given user ID."},"date":"2018-09-05","slug":"the-rss-reader-tutorial-step-2"},{"meta":{"title":"Building a real-time web app with Angular/Ngrx and Vert.x","category":"guides","authors":[{"name":"Benoit Hediard","github_id":"benorama"}],"summary":"There are multiple tech stacks to build a real-time web app. What are the best choices to build Angular client apps, connected to a JVM-based backend?"},"date":"2017-04-26","slug":"building-a-real-time-web-app-with-angular-ngrx-and-vert-x"}]},"__N_SSG":true}