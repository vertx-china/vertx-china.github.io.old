{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Eclipse Vert.x goes Native","category":"guides","authors":[{"name":"Johannes SchÃ¼th","github_id":"jotschi"}],"summary":"This blog post introduces native image generation of Vert.x applications with GraalVM. Generated executables can be run without a JVM."},"date":"2018-06-04","slug":"eclipse-vert-x-goes-native","readingTime":{"text":"5 min read","minutes":4.235,"time":254100,"words":847},"content":{"compiledSource":"var m=Object.defineProperty,h=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var l=(a,t,s)=>t in a?m(a,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[t]=s,e=(a,t)=>{for(var s in t||(t={}))o.call(t,s)&&l(a,s,t[s]);if(r)for(var s of r(t))p.call(t,s)&&l(a,s,t[s]);return a},i=(a,t)=>h(a,d(t));var c=(a,t)=>{var s={};for(var n in a)o.call(a,n)&&t.indexOf(n)<0&&(s[n]=a[n]);if(a!=null&&r)for(var n of r(a))t.indexOf(n)<0&&p.call(a,n)&&(s[n]=a[n]);return s};const makeShortcode=a=>function(s){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},s))},Link=makeShortcode(\"Link\"),Alert=makeShortcode(\"Alert\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var n=s,{components:a}=n,t=c(n,[\"components\"]);return mdx(MDXLayout,i(e(e({},layoutProps),t),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"I this blog post, I would like to give you a pre\\xADview on na\\xADtive image gen\\xADer\\xADa\\xADtion of Vert.x ap\\xADpli\\xADca\\xADtions using GraalVM.\"),mdx(\"p\",null,\"With \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.graalvm.org/\"}),\"GraalVM\"),` it is pos\\xADsi\\xADble to gen\\xADer\\xADate na\\xADtive ex\\xADe\\xADcuta\\xADbles.\nThese ex\\xADe\\xADcuta\\xADbles can be di\\xADrectly run with\\xADout the need of an in\\xADstalled JVM.`),mdx(\"h2\",e({},{id:\"benefits\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#benefits\"})),\"Benefits\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},\"The start up time is way faster. It is no longer re\\xADquired to wait for the start up of the JVM. The ap\\xADpli\\xADca\\xADtion is usu\\xADally up and run\\xADning in a mat\\xADter of mil\\xADlisec\\xADonds.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},\"Re\\xADduced mem\\xADory foot\\xADprint. I mea\\xADsured 40 MB mem\\xADory usage (RSS) for the Vert.x Web ap\\xADpli\\xADca\\xADtion which I\\u2019m going to show\\xADcase.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},\"Smaller Con\\xADtain\\xADers. No JVM means no over\\xADhead. All the needed parts are al\\xADready con\\xADtained within the ex\\xADe\\xADcutable. This can be very ben\\xADe\\xADfi\\xADcial when build\\xADing de\\xADploy\\xADable con\\xADtainer im\\xADages.\"))),mdx(\"h2\",e({},{id:\"demo-project\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#demo-project\"})),\"Demo Project\"),mdx(\"p\",null,\"For the demo ap\\xADpli\\xADca\\xADtion I choose a very basic hello world \",mdx(Link,{href:\"/docs/vertx-web/java/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"Vert.x Web\")),\" server.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"package\"),` de.jotschi.examples;\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),` java.io.File;\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),` io.vertx.core.Vertx;\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),` io.vertx.core.logging.Logger;\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),` io.vertx.core.logging.LoggerFactory;\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),` io.vertx.core.logging.SLF4JLogDelegateFactory;\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),` io.vertx.ext.web.Router;\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-class\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"class\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"Runner\"),\" \"),`{\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"static\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"main\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(String[] args)\"),\" \"),`{\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Use logback for logging\"),`\n    File logbackFile = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" File(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"config\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"logback.xml\"'),`);\n    System.setProperty(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"logback.configurationFile\"'),`, logbackFile.getAbsolutePath());\n    System.setProperty(LoggerFactory.LOGGER_DELEGATE_FACTORY_CLASS_NAME, SLF4JLogDelegateFactory.class.getName());\n    Logger log = LoggerFactory.getLogger(Runner.class);\n\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Setup the http server\"),`\n    log.info(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Starting server for: http://localhost:8080/hello\"'),`);\n    Vertx vertx = Vertx.vertx();\n    Router router = Router.router(vertx);\n\n    router.route(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/hello\"'),`).handler(rc -> {\n      log.info(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Got hello request\"'),`);\n      rc.response().end(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"World\"'),`);\n    });\n\n    vertx.createHttpServer()\n      .requestHandler(router::accept)\n      .listen(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"8080\"),`);\n\n  }\n\n}\n`)),mdx(\"h2\",e({},{id:\"graalvm\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#graalvm\"})),\"GraalVM\"),mdx(\"p\",null,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.graalvm.org/\"}),\"GraalVM\"),` runs a sta\\xADtic analy\\xADsis on the gen\\xADer\\xADated ap\\xADpli\\xADca\\xADtion in order to find the reach\\xADable code.\nThis process which is run within the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/oracle/graal/tree/master/substratevm\"}),\"Sub\\xADstrate VM\"),\" will lead to the gen\\xADer\\xADa\\xADtion of the na\\xADtive image.\"),mdx(\"h3\",e({},{id:\"limitations\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#limitations\"})),\"Limitations\"),mdx(\"p\",null,\"Due to the na\\xADture of the sta\\xADtic analy\\xADsis Sub\\xADstrate VM also has some \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/oracle/graal/blob/master/substratevm/LIMITATIONS.md\"}),\"lim\\xADi\\xADta\\xADtions\"),\".\"),mdx(\"p\",null,\"Dy\\xADnamic class load\\xADing and un\\xADload\\xADing for ex\\xADam\\xADple is not sup\\xADported be\\xADcause this would in essence alter the avail\\xADable code dur\\xADing run\\xADtime. \"),mdx(\"p\",null,\"Re\\xADflec\\xADtion is only par\\xADtially sup\\xADported and re\\xADquires some man\\xADual steps which we will cover later on.\"),mdx(\"h3\",e({},{id:\"patches--workarounds\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#patches--workarounds\"})),\"Patches / Workarounds\"),mdx(Alert,{info:!0,title:\"Work in progress\",mdxType:\"Alert\"},mdx(\"p\",null,\"Next we need to apply some patches / workarounds. Keep in mind that na\\xADtive image gen\\xADer\\xADa\\xADtion is a fairly new topic and the these workarounds will hope\\xADfully no longer be re\\xADquired once the Sub\\xADstrate VM and Netty have bet\\xADter sup\\xADport for each other.\")),mdx(\"p\",null,`I did not man\\xADage to get na\\xADtive epoll, kqueue and SSL in\\xADte\\xADgra\\xADtion to work with na\\xADtive im\\xADages.\nThese parts are heav\\xADily op\\xADti\\xADmized within Netty and use JNI to di\\xADrectly ac\\xADcess the OS fea\\xADtures.\nSub\\xADstrate VM sup\\xADports JNI and could in the\\xADory in\\xADte\\xADgrate these na\\xADtive li\\xADbraries. `),mdx(\"p\",null,\"I cre\\xADated a \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/Jotschi/vertx-graalvm-native-image-test/tree/netty-native-epoll\"}),\"re\\xADpro\\xADducer\"),`\nand an `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/oracle/graal/issues/442\"}),\"issue\"),\" so hope\\xADfully these prob\\xADlems can be ad\\xADdressed soon.\"),mdx(\"h3\",e({},{id:\"vertx-transport\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#vertx-transport\"})),\"Vert.x Transport\"),mdx(\"p\",null,\"First I needed to patch the \",mdx(\"inlineCode\",{parentName:\"p\"},\"io.vertx.core.net.impl.transport.Transport\"),\" class in order to pre\\xADvent the load\\xADing of EPoll and KQueue na\\xADtive sup\\xADport. Oth\\xADer\\xADwise Sub\\xADstrate VM will try to load these classes and fail.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-class\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"class\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"Transport\"),\" \"),`{\n\\u2026\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),`/**\n   * The native transport, it may be {`,mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-doctag\"}),\"@code\"),` null} or failed.\n   */`),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"public\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"static\"),\" Transport \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"nativeTransport\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"()\"),\" \"),`{\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Patched: I remove the native transport discovery. \"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// The imports would be picked up by substrate \"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// and cause further issues. \"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"null\"),`;\n  }\n\\u2026\n}\n`)),mdx(\"h3\",e({},{id:\"netty-ssl\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#netty-ssl\"})),\"Netty SSL\"),mdx(\"p\",null,\"Na\\xADtive SSL sup\\xADport is an\\xADother prob\\xADlem\\xADatic area. I cre\\xADated a patched dummy \",mdx(\"inlineCode\",{parentName:\"p\"},\"io.netty.handler.ssl.ReferenceCountedOpenSslEngine\"),\" class in order to pre\\xADvent Sub\\xADstrate VM from dig\\xADging deeper into the SSL code of Netty.\"),mdx(\"p\",null,\"Next we need to set up the re\\xADflec\\xADtion con\\xADfig\\xADu\\xADra\\xADtion within \",mdx(\"inlineCode\",{parentName:\"p\"},\"reflectconfigs/netty.json\"),\".\"),mdx(\"p\",null,\"Netty uses re\\xADflec\\xADtion to in\\xADstan\\xADti\\xADate the socket chan\\xADnels. This is done in the Re\\xADflec\\xADtiveChan\\xADnelFac\\xADtory. We need to tell Sub\\xADstrate VM how classes of type NioServer\\xADSock\\xADetChan\\xADnel  and NioSock\\xADetChan\\xADnel can be in\\xADstan\\xADti\\xADated. \"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-json\"}),`[\n  {\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"name\"'),\" : \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"io.netty.channel.socket.nio.NioSocketChannel\"'),`,\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"methods\"'),` : [\n      { `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"name\"'),\" : \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<init>\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"parameterTypes\"'),` : [] }\n    ]\n  },\n  {\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"name\"'),\" : \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"io.netty.channel.socket.nio.NioServerSocketChannel\"'),`,\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"methods\"'),` : [\n      { `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"name\"'),\" : \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<init>\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-attr\"}),'\"parameterTypes\"'),` : [] }\n    ]\n  }\n]\n`)),mdx(\"p\",null,\"If you want to learn more about the state of Netty and GraalVM I can rec\\xADom\\xADmend this \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://medium.com/graalvm/instant-netty-startup-using-graalvm-native-image-generation-ed6f14ff7692\"}),\"GraalVM Blog\\xADpost\"),\" by Co\\xADdrut Stancu.\"),mdx(\"h2\",e({},{id:\"building\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#building\"})),\"Building\"),mdx(\"p\",null,\"Fi\\xADnally we can build our maven project to gen\\xADer\\xADate a shaded jar.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),`mvn clean package\n`)),mdx(\"p\",null,\"Next we need the GraalVM pack\\xADage. You can down\\xADload it from the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.graalvm.org/\"}),\"GraalVM web\\xADsite\"),\".\"),mdx(\"p\",null,\"We use the shaded jar as the input source for the \",mdx(\"inlineCode\",{parentName:\"p\"},\"native-image\"),\" com\\xADmand which will gen\\xADer\\xADate the ex\\xADe\\xADcutable.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-variable\"}),\"$GRAALVMDIR\"),`/bin/native-image \\\\\n --verbose \\\\\n --no-server \\\\\n -Dio.netty.noUnsafe=`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-literal\"}),\"true\"),`  \\\\\n -H:ReflectionConfigurationFiles=./reflectconfigs/netty.json \\\\\n -H:+ReportUnsupportedElementsAtRuntime \\\\\n -Dfile.encoding=UTF-8 \\\\\n -jar target/vertx-graalvm-native-image-test-0.0.1-SNAPSHOT.jar\n`)),mdx(\"h2\",e({},{id:\"result\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#result\"})),\"Result\"),mdx(\"p\",null,\"Fi\\xADnally we end up with an 27 MB \",mdx(\"inlineCode\",{parentName:\"p\"},\"vertx-graalvm-native-image-test-0.0.1-SNAPSHOT\"),\" ex\\xADe\\xADcutable which we can run.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),`$ ldd vertx-graalvm-native-image-test-0.0.1-SNAPSHOT \n  linux-vdso.so.1 (0x00007ffc65be8000)\n  libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8e892f0000)\n  libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f8e890d3000)\n  libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f8e88eb9000)\n  librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f8e88cb1000)\n  libcrypt.so.1 => /lib/x86_64-linux-gnu/libcrypt.so.1 (0x00007f8e88a79000)\n  libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8e886da000)\n  /lib64/ld-linux-x86-64.so.2 (0x00007f8e8afb7000)\n`)),mdx(\"h3\",e({},{id:\"memory\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#memory\"})),\"Memory\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),\"/usr/bin/time -f \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"\\\\nmaxRSS\\\\t%MkB\"'),` java -jar target/vertx-graalvm-native-image-test-0.0.1-SNAPSHOT.jar \n/usr/bin/time -f `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"\\\\nmaxRSS\\\\t%MkB\"'),` ./vertx-graalvm-native-image-test-0.0.1-SNAPSHOT \n`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Na\\xADtive Image: 40 MB\"),mdx(\"li\",{parentName:\"ul\"},\"Java 10: 125 MB\")),mdx(\"p\",null,\"The full project can be found on \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/Jotschi/vertx-graalvm-native-image-test\"}),\"GitHub\"),\".\"),mdx(\"p\",null,\"If you want to read more on the topic I can also rec\\xADom\\xADmend \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://sites.google.com/a/athaydes.com/renato-athaydes/posts/a7mbnative-imagejavaappthatrunsin30msandusesonly4mbofram\"}),\"this ar\\xADti\\xADcle\"),\" by Re\\xADnato Athay\\xADdes in which he demon\\xADstrates how to cre\\xADate a very small light weight low mem\\xADory ap\\xADpli\\xADca\\xADtion using GraalVM.\"),mdx(\"p\",null,\"Thanks for read\\xADing. If you have any fur\\xADther ques\\xADtions or feed\\xADback don\\u2019t hes\\xADi\\xADtate to send me a tweet to \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://twitter.com/Jotschi/\"}),\"@Jotschi\"),\".\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.5.2","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.5.2, a bug fix release of Vert.x 3.5.x."},"date":"2018-06-08","slug":"eclipse-vert-x-3-5-2"},"nextPost":{"meta":{"title":"Eclipse Vert.x RabbitMQ client gets a new consumer API!","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this blog post, we present the new consumer API of the RabbitMQ client that will be released with Eclipse Vert.x 3.6.0."},"date":"2018-04-23","slug":"eclipse-vert-x-rabbitmq-client-gets-a-new-consumer-api"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Letâs refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didnât test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Vert.x featuring Continuous Delivery with Jenkins and Ansible","category":"guides","authors":[{"name":"Ricardo Hernandez","github_id":"ricardohmon"}],"summary":"This blog entry describes an approach to adopt Continuous Delivery for Vert.x applications using Jenkins and Ansible by taking advantage of the Jenkins Job DSL and Ansible plugins."},"date":"2016-09-28","slug":"vert-x-featuring-continuous-delivery-with-jenkins-and-ansible"}]},"__N_SSG":true}