{"pageProps":{"slug":"vertx-zipkin/java","title":"Vertx Zipkin 链路追踪","fallbackGitHubStars":null,"toc":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_tracing_policy\">追踪策略</a></li>\n<li><a href=\"#_http_tracing\">HTTP追踪</a></li>\n<li><a href=\"#_eventbus_tracing\">EventBus 追踪</a></li>\n</ul>\n</div>","contents":"<h1>Vertx Zipkin 链路追踪</h1>\n\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x 借助 Zipkin Brave client 的支持集成了 Zipkin。</p>\n</div>\n<div class=\"paragraph\">\n<p>Vert.x 在 Vert.x HTTP Client 中使用 ZipKin HTTP sender 将 span 信息以 JSON 格式\n报告给 <code><a href=\"http://localhost:9411/api/v2/spans\" class=\"bare\">http://localhost:9411/api/v2/spans</a></code> 。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions()\n  .setTracingOptions(\n    <span class=\"hljs-keyword\">new</span> ZipkinTracingOptions().setServiceName(<span class=\"hljs-string\">\"A cute service\"</span>)\n  )\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>service name 必须是合法的 Zipkin 服务名称。如果没有填写，则会被以 <code>a-service</code> 名称替代。</p>\n</div>\n<div class=\"paragraph\">\n<p>您可以将 sender 配置成使用别的 URL</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions()\n  .setTracingOptions(\n    <span class=\"hljs-keyword\">new</span> ZipkinTracingOptions()\n      .setSenderOptions(<span class=\"hljs-keyword\">new</span> HttpSenderOptions().setSenderEndpoint(senderEndpoint))\n  )\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>缺省的 sender 使用单一的 HTTP 连接发送纯文本（body的内容是经过压缩的）。</p>\n</div>\n<div class=\"paragraph\">\n<p>您可使用自定义的 <code>HttpClientOptions</code> 来覆盖 HTTP sender 默认选项。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions()\n  .setTracingOptions(\n    <span class=\"hljs-keyword\">new</span> ZipkinTracingOptions()\n      .setSenderOptions(<span class=\"hljs-keyword\">new</span> HttpSenderOptions()\n        .setSenderEndpoint(senderEndpoint)\n        .setSsl(<span class=\"hljs-keyword\">true</span>)\n        .setKeyCertOptions(sslOptions))\n  )\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>最后，您可以设置一个自定义的 ZipKin <code>Tracing</code> 对象\n来实施更进一步的控制。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">Vertx vertx = Vertx.vertx(<span class=\"hljs-keyword\">new</span> VertxOptions()\n  .setTracingOptions(\n    <span class=\"hljs-keyword\">new</span> ZipkinTracingOptions(tracing)\n  )\n);</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_tracing_policy\"><a class=\"anchor\" href=\"#_tracing_policy\"></a>追踪策略</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>当开启追踪时，追踪策略用于在指定组件的追踪行为：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code><a href=\"../../apidocs/io/vertx/core/tracing/TracingPolicy.html#PROPAGATE\">PROPAGATE</a></code> ：组件在当前追踪活动中报告 span</p>\n</li>\n<li>\n<p><code><a href=\"../../apidocs/io/vertx/core/tracing/TracingPolicy.html#ALWAYS\">ALWAYS</a></code> ：组件在当前追踪活动中报告 span 或者创建一个新的追踪活动</p>\n</li>\n<li>\n<p><code><a href=\"../../apidocs/io/vertx/core/tracing/TracingPolicy.html#IGNORE\">IGNORE</a></code> ：该组件不参与任何追踪活动。</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>追踪策略一般是通过组件选项来配置。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_http_tracing\"><a class=\"anchor\" href=\"#_http_tracing\"></a>HTTP追踪</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x HTTP 服务端和客户端基于 HTTP 请求来报告 span ：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>operationName</code> ：HTTP 方法</p>\n</li>\n<li>\n<p>tags</p>\n</li>\n<li>\n<p><code>http.method</code> ：HTTP 方法</p>\n</li>\n<li>\n<p><code>http.url</code> ：请求的 URL</p>\n</li>\n<li>\n<p><code>http.status_code</code> ：HTTP 状态码</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>HTTP 服务端的缺省追踪策略是 <code>ALWAYS</code>, 您可以通过 <code><a href=\"../../apidocs/io/vertx/core/http/HttpServerOptions.html#setTracingPolicy-io.vertx.core.tracing.TracingPolicy-\">setTracingPolicy</a></code> 来配置追踪策略</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">HttpServer server = vertx.createHttpServer(<span class=\"hljs-keyword\">new</span> HttpServerOptions()\n  .setTracingPolicy(TracingPolicy.IGNORE)\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>HTTP 客户端的缺省追踪策略是 <code>PROPAGATE</code> ， 您可以通过 <code><a href=\"../../apidocs/io/vertx/core/http/HttpClientOptions.html#setTracingPolicy-io.vertx.core.tracing.TracingPolicy-\">setTracingPolicy</a></code> 来配置追踪策略</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">HttpClient client = vertx.createHttpClient(<span class=\"hljs-keyword\">new</span> HttpClientOptions()\n  .setTracingPolicy(TracingPolicy.IGNORE)\n);</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_eventbus_tracing\"><a class=\"anchor\" href=\"#_eventbus_tracing\"></a>EventBus 追踪</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Vert.x EventBus 在消息交换过程中报告 span 。</p>\n</div>\n<div class=\"paragraph\">\n<p>发送消息时的缺省追踪策略是 <code>PROPAGATE</code> ，您可以通过 <code><a href=\"../../apidocs/io/vertx/core/eventbus/DeliveryOptions.html#setTracingPolicy-io.vertx.core.tracing.TracingPolicy-\">setTracingPolicy</a></code> 来配置追踪策略。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">DeliveryOptions options = <span class=\"hljs-keyword\">new</span> DeliveryOptions().setTracingPolicy(TracingPolicy.ALWAYS);\nvertx.eventBus().send(<span class=\"hljs-string\">\"the-address\"</span>, <span class=\"hljs-string\">\"foo\"</span>, options);</code></pre>\n</div>\n</div>\n</div>\n</div>"},"__N_SSG":true}