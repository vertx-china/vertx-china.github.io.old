{"pageProps":{"categories":["releases","guides","news"],"post":{"meta":{"title":"Vert.x Web API Service Introduction","category":"guides","authors":[{"name":"Francesco Guardiani","github_id":"slinkydeveloper"}],"summary":"This blog post teaches you how to use the new module vertx-web-api-service to combine the Web Router and the OpenAPI Router Factory with service proxies."},"date":"2018-12-13","slug":"vert-x-web-api-service-introduction","readingTime":{"text":"6 min read","minutes":5.555,"time":333299.99999999994,"words":1111},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Vert.x 3.6 in\\xADtro\\xADduces a new mod\\xADule called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-web-api-service\"), \". With the new Web API Ser\\xADvices you can eas\\xADily com\\xADbine the \", mdx(Link, {\n    href: \"/docs/vertx-web/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x Web Router\")), \" and the \", mdx(Link, {\n    href: \"/docs/vertx-web-api-contract/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x Ope\\xADnAPI Router Fac\\xADtory\")), \" fea\\xADtures with \", mdx(Link, {\n    href: \"/docs/vertx-service-proxy/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x Ser\\xADvices on Event Bus\")), \".\"), mdx(\"h2\", {\n    \"id\": \"small-recap-on-openapi-and-vertx-web-api-contract\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#small-recap-on-openapi-and-vertx-web-api-contract\"\n  })), \"Small recap on OpenAPI and Vert.x Web API Contract\"), mdx(\"p\", null, \"Let\\u2019s start from this Ope\\xADnAPI de\\xADf\\xADi\\xADn\\xADi\\xADtion:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-yaml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"openapi:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"3.0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \".0\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"paths:\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"/api/transactions:\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"get:\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"operationId:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"getTransactionsList\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"description:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"Get\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"transactions\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"list\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"filtered\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"by\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"sender\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"x-vertx-event-bus:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"transactions_manager.myapp\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"parameters:\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-bullet\"\n  }), \"-\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"name:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"from\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"in:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"query\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"description:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"Matches\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"exactly\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"the\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"email\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"from\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"style:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"form\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"explode:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-literal\"\n  }), \"false\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"schema:\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"type:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"array\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"items:\"), \"\\n              \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"type:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"string\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"responses:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"...\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"post:\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"operationId:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"addTransaction\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"x-vertx-event-bus:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"transactions_manager.myapp\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"requestBody:\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"required:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-literal\"\n  }), \"true\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"content:\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"application/json:\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"schema:\"), \"\\n              \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"$ref:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"#/components/schemas/Transaction\\\"\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"responses:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"...\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"/api/transactions/{transactionId}:\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"parameters:\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-bullet\"\n  }), \"-\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"name:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"transactionId\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"in:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"path\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"required:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-literal\"\n  }), \"true\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"schema:\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"type:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"string\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"put:\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"operationId:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"updateTransaction\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"x-vertx-event-bus:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"transactions_manager.myapp\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"requestBody:\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"required:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-literal\"\n  }), \"true\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"content:\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"application/json:\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"schema:\"), \"\\n              \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"$ref:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"#/components/schemas/Transaction\\\"\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"responses:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"...\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"delete:\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"operationId:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"removeTransaction\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"x-vertx-event-bus:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"transactions_manager.myapp\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"responses:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"...\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"components:\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"schemas:\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"Transaction:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"...\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"Error:\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"...\"), \"\\n\")), mdx(\"p\", null, \"We de\\xADfined \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getTransactionsList\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addTransaction\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"updateTransaction\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"removeTransaction\"), \" op\\xADer\\xADa\\xADtions. Now with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OpenAPI3RouterFactory\"), \" we cre\\xADate a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \" that ac\\xADcepts this var\\xADi\\xADous op\\xADer\\xADa\\xADtion re\\xADquests:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"OpenAPI3RouterFactory.create(vertx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"src/main/resources/petstore.yaml\\\"\"), \", ar -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Spec loaded with success\"), \"\\n    OpenAPI3RouterFactory routerFactory = ar.result();\\n    routerFactory.addHandlerByOperationId(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"getTransactionsList\\\"\"), \", routingContext -> {\\n      RequestParameters params = routingContext.get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"parsedParameters\\\"\"), \");\\n      RequestParameter from = params.queryParameter(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"from\\\"\"), \");\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// getTransactionsList business logic\"), \"\\n    });\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// add handlers for addTransaction, updateTransaction and removeTransaction\"), \"\\n    Router router = routerFactory.getRouter();\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Something went wrong during router factory initialization\"), \"\\n    Throwable exception = ar.cause();\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Log exception, fail verticle deployment ... etc\"), \"\\n  }\\n});\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OpenAPI3RouterFactory\"), \" pro\\xADvides an easy way to cre\\xADate a spec\\xADi\\xADfi\\xADca\\xADtion com\\xADpli\\xADant \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \", but it doesn\\u2019t pro\\xADvide a mech\\xADa\\xADnism to de\\xADcou\\xADple the busi\\xADness logic from your op\\xADer\\xADa\\xADtion han\\xADdlers.\"), mdx(\"p\", null, \"In a typ\\xADi\\xADcal Vert.x ap\\xADpli\\xADca\\xADtion, when you re\\xADceive a re\\xADquest to your router, you would for\\xADward it to an event bus end\\xADpoint that per\\xADforms some ac\\xADtions and sends the re\\xADsult back to the op\\xADer\\xADa\\xADtion han\\xADdler.\"), mdx(\"p\", null, \"Vert.x Web API Ser\\xADvice sim\\xADpli\\xADfies that in\\xADte\\xADgra\\xADtion be\\xADtween \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RouterFactory\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EventBus\"), \" with a new code gen\\xADer\\xADa\\xADtor. The final re\\xADsult is a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"loose cou\\xADpling\"), \" be\\xADtween the Web Router logic and your busi\\xADness logic.\"), mdx(\"h2\", {\n    \"id\": \"lets-get-started-with-vertx-web-api-services\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#lets-get-started-with-vertx-web-api-services\"\n  })), \"Let\\u2019s get started with Vert.x Web Api Services!\"), mdx(\"p\", null, \"To use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-web-api-service\"), \" you need to add a cou\\xADple of de\\xADpen\\xADden\\xADcies to your project. In a Maven POM file that would be:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-xml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"io.vertx\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"vertx-codegen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"3.6.0\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"classifier\"), \">\"), \"processor\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"classifier\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"io.vertx\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"vertx-web-api-service\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"3.6.0\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n\")), mdx(\"p\", null, \"We will pro\\xADceed in this order:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Model the ser\\xADvice in\\xADter\\xADface\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Rewrite it to work with Web Api Ser\\xADvices\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Im\\xADple\\xADment the ser\\xADvice\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Mount the ser\\xADvice on the event bus\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use the router fac\\xADtory to build a router with han\\xADdlers that con\\xADnects to our event bus ser\\xADvices\")), mdx(\"h2\", {\n    \"id\": \"model-your-service\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#model-your-service\"\n  })), \"Model your service\"), mdx(\"p\", null, \"Let\\u2019s say that we want to model a ser\\xADvice that man\\xADages all op\\xADer\\xADa\\xADtions re\\xADgard\\xADing CRUD trans\\xADac\\xADtions. An ex\\xADam\\xADple in\\xADter\\xADface for this asyn\\xADchro\\xADnous ser\\xADvice could be:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"TransactionsManagerService\"), \" \"), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"getTransactionsList\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(List<String> from, Handler<AsyncResult<List<Transaction>>> resultHandler)\")), \";\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"addTransaction\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(Transaction transaction, Handler<AsyncResult<Transaction>> resultHandler)\")), \";\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"updateTransaction\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(String transactionId, Transaction transaction, Handler<AsyncResult<Transaction>> resultHandler)\")), \";\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"removeTransaction\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(String transactionId, Handler<AsyncResult<Integer>> resultHandler)\")), \";\\n}\\n\")), mdx(\"p\", null, \"For each op\\xADer\\xADa\\xADtion, we have some pa\\xADra\\xADme\\xADters, de\\xADpend\\xADing on the op\\xADer\\xADa\\xADtion, and a call\\xADback (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"resultHandler\"), \") that should be called when the op\\xADer\\xADa\\xADtion suc\\xADceeds or fails.\"), mdx(\"p\", null, \"With \", mdx(Link, {\n    href: \"/docs/vertx-service-proxy/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"Vert.x Ser\\xADvice Proxy\")), \", you can de\\xADfine an event bus ser\\xADvice with a Java in\\xADter\\xADface sim\\xADi\\xADlar to the one we just saw and then an\\xADno\\xADtate it with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@ProxyGen\"), \". This an\\xADno\\xADta\\xADtion will gen\\xADer\\xADate a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ser\\xADvice han\\xADdler\"), \" for the de\\xADfined ser\\xADvice that can be plugged to the event bus with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ServiceBinder\"), \". \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-web-api-service\"), \" works in a very sim\\xADi\\xADlar way: you need to an\\xADno\\xADtate the Java in\\xADter\\xADface with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@WebApiServiceGen\"), \" and it will gen\\xADer\\xADate the ser\\xADvice han\\xADdler for the event bus.\"), mdx(\"p\", null, \"Let\\u2019s rewrite the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TransactionsManagerService\"), \" to work with Web API Ser\\xADvice:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.ext.web.api.*;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.ext.web.api.generator.WebApiServiceGen;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@WebApiServiceGen\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"TransactionsManagerService\"), \" \"), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"getTransactionsList\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(List<String> from, OperationRequest context, Handler<AsyncResult<OperationResponse>> resultHandler)\")), \";\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"addTransaction\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(Transaction body, OperationRequest context, Handler<AsyncResult<OperationResponse>> resultHandler)\")), \";\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"updateTransaction\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(String transactionId, Transaction body, OperationRequest context, Handler<AsyncResult<OperationResponse>> resultHandler)\")), \";\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"removeTransaction\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(String transactionId, OperationRequest context, Handler<AsyncResult<OperationResponse>> resultHandler)\")), \";\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Factory method to instantiate the implementation\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" TransactionsManagerService \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"create\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(Vertx vertx)\"), \" \"), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" TransactionsManagerServiceImpl(vertx);\\n  }\\n}\\n\\n\")), mdx(\"p\", null, \"First of all, look at the an\\xADno\\xADta\\xADtion \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@WebApiServiceGen\"), \". This an\\xADno\\xADta\\xADtion will trig\\xADger the code gen\\xADer\\xADa\\xADtor that gen\\xADer\\xADates the event bus han\\xADdler for this ser\\xADvice. Each method has the same two last pa\\xADra\\xADme\\xADters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"OperationRequest context\"), \": this data ob\\xADject con\\xADtains the head\\xADers and the pa\\xADra\\xADme\\xADters of the HTTP re\\xADquest\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Handler<AsyncResult<OperationResponse>> resultHandler\"), \": this call\\xADback ac\\xADcepts an \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"OperationResponse\"), \" data ob\\xADject that will en\\xADcap\\xADsu\\xADlate the body of the re\\xADsult, the sta\\xADtus code, the sta\\xADtus mes\\xADsage and the head\\xADers\")), mdx(\"p\", null, \"The gen\\xADer\\xADated han\\xADdler re\\xADceives only the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OperationRequest\"), \" data ob\\xADject and ex\\xADtracts from it all op\\xADer\\xADa\\xADtion pa\\xADra\\xADme\\xADters. For ex\\xADam\\xADple, when the router re\\xADceives a re\\xADquest at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getTransactionsList\"), \", it sends to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TransactionsManagerService\"), \" the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OperationRequest\"), \" con\\xADtain\\xADing the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RequestParameters\"), \" map. From this map, the ser\\xADvice gen\\xADer\\xADated han\\xADdler ex\\xADtracts the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"from\"), \" pa\\xADra\\xADme\\xADter. \"), mdx(\"p\", null, \"There\\xADfore \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"op\\xADer\\xADa\\xADtion pa\\xADra\\xADme\\xADters names should match method pa\\xADra\\xADme\\xADter names\"), \".\"), mdx(\"p\", null, \"When you want to ex\\xADtract the body you must use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"body\"), \" key\\xADword. For more de\\xADtails, please refer to the \", mdx(Link, {\n    href: \"/docs/vertx-web-api-service/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\"\n  }), \"doc\\xADu\\xADmen\\xADta\\xADtion\")), \".\"), mdx(\"h2\", {\n    \"id\": \"implement-the-service\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#implement-the-service\"\n  })), \"Implement the service\"), mdx(\"p\", null, \"Now that you have your in\\xADter\\xADface, you can im\\xADple\\xADment the ser\\xADvice:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"TransactionsManagerServiceImpl\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"implements\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"TransactionsManagerService\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" Vertx vertx;\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"TransactionsManagerServiceImpl\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(Vertx vertx)\"), \" \"), \"{  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"this\"), \".vertx = vertx;  }\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Override\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"getTransactionsList\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(List<String> from, OperationRequest context, Handler<AsyncResult<OperationResponse>> resultHandler)\")), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Write your business logic here\"), \"\\n    resultHandler.handle(Future.succeededFuture(OperationResult.completedWithJson(resultJson)));\\n  }\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Implement other operations\"), \"\\n\\n}\\n\")), mdx(\"p\", null, \"Check the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OperationResult\"), \" doc\\xADu\\xADmen\\xADta\\xADtion to look at var\\xADi\\xADous handy meth\\xADods to cre\\xADate a com\\xADplete re\\xADsponse.\"), mdx(\"h2\", {\n    \"id\": \"mount-the-service\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#mount-the-service\"\n  })), \"Mount the Service\"), mdx(\"p\", null, \"Now that you have your ser\\xADvice in\\xADter\\xADface and im\\xADple\\xADmen\\xADta\\xADtion, you can mount your ser\\xADvice with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ServiceBinder\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"ServiceBinder serviceBinder = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" ServiceBinder(vertx);\\n\\nTransactionsManagerService transactionsManagerService = TransactionsManagerService.create(vertx);\\nregisteredConsumers.add(\\n  serviceBinder\\n    .setAddress(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"transactions_manager.myapp\\\"\"), \")\\n    .register(TransactionsManagerService.class, transactionsManagerService)\\n);\\n\")), mdx(\"h2\", {\n    \"id\": \"and-the-router-factory\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#and-the-router-factory\"\n  })), \"And the Router Factory?\"), mdx(\"p\", null, \"The ser\\xADvice is up and run\\xADning, but we need to con\\xADnect it to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \" built by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OpenAPI3RouterFactory\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"OpenAPI3RouterFactory.create(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"this\"), \".vertx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my_spec.yaml\\\"\"), \", openAPI3RouterFactoryAsyncResult -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (openAPI3RouterFactoryAsyncResult.succeeded()) {\\n    OpenAPI3RouterFactory routerFactory = openAPI3RouterFactoryAsyncResult.result();\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Mount services on event bus based on extensions\"), \"\\n    routerFactory.mountServicesFromExtensions(); \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// <- Pure magic happens!\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Generate the router\"), \"\\n    Router router = routerFactory.getRouter();\\n    server = vertx.createHttpServer(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" HttpServerOptions().setPort(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8080\"), \"));\\n    server.requestHandler(router).listen();\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Initialization completed\"), \"\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Something went wrong during router factory initialization\"), \"\\n  }\\n});\\n\")), mdx(\"p\", null, \"In our spec ex\\xADam\\xADple we added an ex\\xADten\\xADsion \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"x-vertx-event-bus\"), \" to each op\\xADer\\xADa\\xADtion that spec\\xADi\\xADfies the ad\\xADdress of the ser\\xADvice. Using this ex\\xADten\\xADsion, you only need to call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OpenAPI3RouterFactory.mountServicesFromExtensions()\"), \" to trig\\xADger a scan of all op\\xADer\\xADa\\xADtions and mount all found ser\\xADvice ad\\xADdresses. For each op\\xADer\\xADa\\xADtion that con\\xADtains \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"x-vertx-event-bus\"), \", the Router Fac\\xADtory in\\xADstan\\xADti\\xADates an han\\xADdler that routes the in\\xADcom\\xADing re\\xADquests to the ad\\xADdress you spec\\xADi\\xADfied.\"), mdx(\"p\", null, \"This is one of the meth\\xADods you can use to match ser\\xADvices with router op\\xADer\\xADa\\xADtion han\\xADdlers. Check the doc\\xADu\\xADmen\\xADta\\xADtion for all de\\xADtails.\"), mdx(\"h2\", {\n    \"id\": \"more-examples\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#more-examples\"\n  })), \"More examples\"), mdx(\"p\", null, \"Check out the com\\xADplete ex\\xADam\\xADple in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/master/web-api-service-example\"\n  }), \"vertx-\\u200Bexamples repo\"), \".\"), mdx(\"p\", null, \"Thanks you for your time, stay tuned for more up\\xADdates! And please pro\\xADvide feed\\xADback about this new pack\\xADage!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>Vert.x 3.6 in­tro­duces a new mod­ule called <code>vertx-web-api-service</code>. With the new Web API Ser­vices you can eas­ily com­bine the <a href=\"/docs/vertx-web/java/\">Vert.x Web Router</a> and the <a href=\"/docs/vertx-web-api-contract/java/\">Vert.x Ope­nAPI Router Fac­tory</a> fea­tures with <a href=\"/docs/vertx-service-proxy/java/\">Vert.x Ser­vices on Event Bus</a>.</p><h2 id=\"small-recap-on-openapi-and-vertx-web-api-contract\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#small-recap-on-openapi-and-vertx-web-api-contract\"></a>Small recap on OpenAPI and Vert.x Web API Contract</h2><p>Let’s start from this Ope­nAPI de­f­i­n­i­tion:</p><pre><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">openapi:</span> <span class=\"hljs-number\">3.0</span><span class=\"hljs-number\">.0</span>\n<span class=\"hljs-attr\">paths:</span>\n  <span class=\"hljs-string\">/api/transactions:</span>\n    <span class=\"hljs-attr\">get:</span>\n      <span class=\"hljs-attr\">operationId:</span> <span class=\"hljs-string\">getTransactionsList</span>\n      <span class=\"hljs-attr\">description:</span> <span class=\"hljs-string\">Get</span> <span class=\"hljs-string\">transactions</span> <span class=\"hljs-string\">list</span> <span class=\"hljs-string\">filtered</span> <span class=\"hljs-string\">by</span> <span class=\"hljs-string\">sender</span>\n      <span class=\"hljs-attr\">x-vertx-event-bus:</span> <span class=\"hljs-string\">transactions_manager.myapp</span>\n      <span class=\"hljs-attr\">parameters:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">from</span>\n          <span class=\"hljs-attr\">in:</span> <span class=\"hljs-string\">query</span>\n          <span class=\"hljs-attr\">description:</span> <span class=\"hljs-string\">Matches</span> <span class=\"hljs-string\">exactly</span> <span class=\"hljs-string\">the</span> <span class=\"hljs-string\">email</span> <span class=\"hljs-string\">from</span>\n          <span class=\"hljs-attr\">style:</span> <span class=\"hljs-string\">form</span>\n          <span class=\"hljs-attr\">explode:</span> <span class=\"hljs-literal\">false</span>\n          <span class=\"hljs-attr\">schema:</span>\n            <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">array</span>\n            <span class=\"hljs-attr\">items:</span>\n              <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">string</span>\n      <span class=\"hljs-attr\">responses:</span> <span class=\"hljs-string\">...</span>\n    <span class=\"hljs-attr\">post:</span>\n      <span class=\"hljs-attr\">operationId:</span> <span class=\"hljs-string\">addTransaction</span>\n      <span class=\"hljs-attr\">x-vertx-event-bus:</span> <span class=\"hljs-string\">transactions_manager.myapp</span>\n      <span class=\"hljs-attr\">requestBody:</span>\n        <span class=\"hljs-attr\">required:</span> <span class=\"hljs-literal\">true</span>\n        <span class=\"hljs-attr\">content:</span>\n          <span class=\"hljs-attr\">application/json:</span>\n            <span class=\"hljs-attr\">schema:</span>\n              <span class=\"hljs-string\">$ref:</span> <span class=\"hljs-string\">&quot;#/components/schemas/Transaction&quot;</span>\n      <span class=\"hljs-attr\">responses:</span> <span class=\"hljs-string\">...</span>\n  <span class=\"hljs-string\">/api/transactions/{transactionId}:</span>\n    <span class=\"hljs-attr\">parameters:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">transactionId</span>\n        <span class=\"hljs-attr\">in:</span> <span class=\"hljs-string\">path</span>\n        <span class=\"hljs-attr\">required:</span> <span class=\"hljs-literal\">true</span>\n        <span class=\"hljs-attr\">schema:</span>\n          <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">string</span>\n    <span class=\"hljs-attr\">put:</span>\n      <span class=\"hljs-attr\">operationId:</span> <span class=\"hljs-string\">updateTransaction</span>\n      <span class=\"hljs-attr\">x-vertx-event-bus:</span> <span class=\"hljs-string\">transactions_manager.myapp</span>\n      <span class=\"hljs-attr\">requestBody:</span>\n        <span class=\"hljs-attr\">required:</span> <span class=\"hljs-literal\">true</span>\n        <span class=\"hljs-attr\">content:</span>\n          <span class=\"hljs-attr\">application/json:</span>\n            <span class=\"hljs-attr\">schema:</span>\n              <span class=\"hljs-string\">$ref:</span> <span class=\"hljs-string\">&quot;#/components/schemas/Transaction&quot;</span>\n      <span class=\"hljs-attr\">responses:</span> <span class=\"hljs-string\">...</span>\n    <span class=\"hljs-attr\">delete:</span>\n      <span class=\"hljs-attr\">operationId:</span> <span class=\"hljs-string\">removeTransaction</span>\n      <span class=\"hljs-attr\">x-vertx-event-bus:</span> <span class=\"hljs-string\">transactions_manager.myapp</span>\n      <span class=\"hljs-attr\">responses:</span> <span class=\"hljs-string\">...</span>\n<span class=\"hljs-attr\">components:</span>\n  <span class=\"hljs-attr\">schemas:</span>\n    <span class=\"hljs-attr\">Transaction:</span> <span class=\"hljs-string\">...</span>\n    <span class=\"hljs-attr\">Error:</span> <span class=\"hljs-string\">...</span>\n</code></pre><p>We de­fined <code>getTransactionsList</code>, <code>addTransaction</code>, <code>updateTransaction</code> and <code>removeTransaction</code> op­er­a­tions. Now with <code>OpenAPI3RouterFactory</code> we cre­ate a <code>Router</code> that ac­cepts this var­i­ous op­er­a­tion re­quests:</p><pre><code class=\"hljs language-java\">OpenAPI3RouterFactory.create(vertx, <span class=\"hljs-string\">&quot;src/main/resources/petstore.yaml&quot;</span>, ar -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    <span class=\"hljs-comment\">// Spec loaded with success</span>\n    OpenAPI3RouterFactory routerFactory = ar.result();\n    routerFactory.addHandlerByOperationId(<span class=\"hljs-string\">&quot;getTransactionsList&quot;</span>, routingContext -&gt; {\n      RequestParameters params = routingContext.get(<span class=\"hljs-string\">&quot;parsedParameters&quot;</span>);\n      RequestParameter from = params.queryParameter(<span class=\"hljs-string\">&quot;from&quot;</span>);\n      <span class=\"hljs-comment\">// getTransactionsList business logic</span>\n    });\n    <span class=\"hljs-comment\">// add handlers for addTransaction, updateTransaction and removeTransaction</span>\n    Router router = routerFactory.getRouter();\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// Something went wrong during router factory initialization</span>\n    Throwable exception = ar.cause();\n    <span class=\"hljs-comment\">// Log exception, fail verticle deployment ... etc</span>\n  }\n});\n</code></pre><p>The <code>OpenAPI3RouterFactory</code> pro­vides an easy way to cre­ate a spec­i­fi­ca­tion com­pli­ant <code>Router</code>, but it doesn’t pro­vide a mech­a­nism to de­cou­ple the busi­ness logic from your op­er­a­tion han­dlers.</p><p>In a typ­i­cal Vert.x ap­pli­ca­tion, when you re­ceive a re­quest to your router, you would for­ward it to an event bus end­point that per­forms some ac­tions and sends the re­sult back to the op­er­a­tion han­dler.</p><p>Vert.x Web API Ser­vice sim­pli­fies that in­te­gra­tion be­tween <code>RouterFactory</code> and <code>EventBus</code> with a new code gen­er­a­tor. The final re­sult is a <em>loose cou­pling</em> be­tween the Web Router logic and your busi­ness logic.</p><h2 id=\"lets-get-started-with-vertx-web-api-services\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#lets-get-started-with-vertx-web-api-services\"></a>Let’s get started with Vert.x Web Api Services!</h2><p>To use <code>vertx-web-api-service</code> you need to add a cou­ple of de­pen­den­cies to your project. In a Maven POM file that would be:</p><pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-codegen<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.6.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">classifier</span>&gt;</span>processor<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">classifier</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-web-api-service<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.6.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre><p>We will pro­ceed in this order:</p><ol><li>Model the ser­vice in­ter­face</li><li>Rewrite it to work with Web Api Ser­vices</li><li>Im­ple­ment the ser­vice</li><li>Mount the ser­vice on the event bus</li><li>Use the router fac­tory to build a router with han­dlers that con­nects to our event bus ser­vices</li></ol><h2 id=\"model-your-service\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#model-your-service\"></a>Model your service</h2><p>Let’s say that we want to model a ser­vice that man­ages all op­er­a­tions re­gard­ing CRUD trans­ac­tions. An ex­am­ple in­ter­face for this asyn­chro­nous ser­vice could be:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">TransactionsManagerService</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getTransactionsList</span><span class=\"hljs-params\">(List&lt;String&gt; from, Handler&lt;AsyncResult&lt;List&lt;Transaction&gt;&gt;&gt; resultHandler)</span></span>;\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">addTransaction</span><span class=\"hljs-params\">(Transaction transaction, Handler&lt;AsyncResult&lt;Transaction&gt;&gt; resultHandler)</span></span>;\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">updateTransaction</span><span class=\"hljs-params\">(String transactionId, Transaction transaction, Handler&lt;AsyncResult&lt;Transaction&gt;&gt; resultHandler)</span></span>;\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">removeTransaction</span><span class=\"hljs-params\">(String transactionId, Handler&lt;AsyncResult&lt;Integer&gt;&gt; resultHandler)</span></span>;\n}\n</code></pre><p>For each op­er­a­tion, we have some pa­ra­me­ters, de­pend­ing on the op­er­a­tion, and a call­back (<code>resultHandler</code>) that should be called when the op­er­a­tion suc­ceeds or fails.</p><p>With <a href=\"/docs/vertx-service-proxy/java/\">Vert.x Ser­vice Proxy</a>, you can de­fine an event bus ser­vice with a Java in­ter­face sim­i­lar to the one we just saw and then an­no­tate it with <code>@ProxyGen</code>. This an­no­ta­tion will gen­er­ate a <em>ser­vice han­dler</em> for the de­fined ser­vice that can be plugged to the event bus with <code>ServiceBinder</code>. <code>vertx-web-api-service</code> works in a very sim­i­lar way: you need to an­no­tate the Java in­ter­face with <code>@WebApiServiceGen</code> and it will gen­er­ate the ser­vice han­dler for the event bus.</p><p>Let’s rewrite the <code>TransactionsManagerService</code> to work with Web API Ser­vice:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">import</span> io.vertx.ext.web.api.*;\n<span class=\"hljs-keyword\">import</span> io.vertx.ext.web.api.generator.WebApiServiceGen;\n\n<span class=\"hljs-meta\">@WebApiServiceGen</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">TransactionsManagerService</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getTransactionsList</span><span class=\"hljs-params\">(List&lt;String&gt; from, OperationRequest context, Handler&lt;AsyncResult&lt;OperationResponse&gt;&gt; resultHandler)</span></span>;\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">addTransaction</span><span class=\"hljs-params\">(Transaction body, OperationRequest context, Handler&lt;AsyncResult&lt;OperationResponse&gt;&gt; resultHandler)</span></span>;\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">updateTransaction</span><span class=\"hljs-params\">(String transactionId, Transaction body, OperationRequest context, Handler&lt;AsyncResult&lt;OperationResponse&gt;&gt; resultHandler)</span></span>;\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">removeTransaction</span><span class=\"hljs-params\">(String transactionId, OperationRequest context, Handler&lt;AsyncResult&lt;OperationResponse&gt;&gt; resultHandler)</span></span>;\n\n  <span class=\"hljs-comment\">// Factory method to instantiate the implementation</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> TransactionsManagerService <span class=\"hljs-title\">create</span><span class=\"hljs-params\">(Vertx vertx)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> TransactionsManagerServiceImpl(vertx);\n  }\n}\n\n</code></pre><p>First of all, look at the an­no­ta­tion <code>@WebApiServiceGen</code>. This an­no­ta­tion will trig­ger the code gen­er­a­tor that gen­er­ates the event bus han­dler for this ser­vice. Each method has the same two last pa­ra­me­ters:</p><ul><li><code>OperationRequest context</code>: this data ob­ject con­tains the head­ers and the pa­ra­me­ters of the HTTP re­quest</li><li><code>Handler&lt;AsyncResult&lt;OperationResponse&gt;&gt; resultHandler</code>: this call­back ac­cepts an <code>OperationResponse</code> data ob­ject that will en­cap­su­late the body of the re­sult, the sta­tus code, the sta­tus mes­sage and the head­ers</li></ul><p>The gen­er­ated han­dler re­ceives only the <code>OperationRequest</code> data ob­ject and ex­tracts from it all op­er­a­tion pa­ra­me­ters. For ex­am­ple, when the router re­ceives a re­quest at <code>getTransactionsList</code>, it sends to <code>TransactionsManagerService</code> the <code>OperationRequest</code> con­tain­ing the <code>RequestParameters</code> map. From this map, the ser­vice gen­er­ated han­dler ex­tracts the <code>from</code> pa­ra­me­ter. </p><p>There­fore <strong>op­er­a­tion pa­ra­me­ters names should match method pa­ra­me­ter names</strong>.</p><p>When you want to ex­tract the body you must use <code>body</code> key­word. For more de­tails, please refer to the <a href=\"/docs/vertx-web-api-service/java/\">doc­u­men­ta­tion</a>.</p><h2 id=\"implement-the-service\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#implement-the-service\"></a>Implement the service</h2><p>Now that you have your in­ter­face, you can im­ple­ment the ser­vice:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TransactionsManagerServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">TransactionsManagerService</span> </span>{\n\n  <span class=\"hljs-keyword\">private</span> Vertx vertx;\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">TransactionsManagerServiceImpl</span><span class=\"hljs-params\">(Vertx vertx)</span> </span>{  <span class=\"hljs-keyword\">this</span>.vertx = vertx;  }\n\n  <span class=\"hljs-meta\">@Override</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getTransactionsList</span><span class=\"hljs-params\">(List&lt;String&gt; from, OperationRequest context, Handler&lt;AsyncResult&lt;OperationResponse&gt;&gt; resultHandler)</span></span>{\n    <span class=\"hljs-comment\">// Write your business logic here</span>\n    resultHandler.handle(Future.succeededFuture(OperationResult.completedWithJson(resultJson)));\n  }\n\n  <span class=\"hljs-comment\">// Implement other operations</span>\n\n}\n</code></pre><p>Check the <code>OperationResult</code> doc­u­men­ta­tion to look at var­i­ous handy meth­ods to cre­ate a com­plete re­sponse.</p><h2 id=\"mount-the-service\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#mount-the-service\"></a>Mount the Service</h2><p>Now that you have your ser­vice in­ter­face and im­ple­men­ta­tion, you can mount your ser­vice with <code>ServiceBinder</code>:</p><pre><code class=\"hljs language-java\">ServiceBinder serviceBinder = <span class=\"hljs-keyword\">new</span> ServiceBinder(vertx);\n\nTransactionsManagerService transactionsManagerService = TransactionsManagerService.create(vertx);\nregisteredConsumers.add(\n  serviceBinder\n    .setAddress(<span class=\"hljs-string\">&quot;transactions_manager.myapp&quot;</span>)\n    .register(TransactionsManagerService.class, transactionsManagerService)\n);\n</code></pre><h2 id=\"and-the-router-factory\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#and-the-router-factory\"></a>And the Router Factory?</h2><p>The ser­vice is up and run­ning, but we need to con­nect it to the <code>Router</code> built by <code>OpenAPI3RouterFactory</code>:</p><pre><code class=\"hljs language-java\">OpenAPI3RouterFactory.create(<span class=\"hljs-keyword\">this</span>.vertx, <span class=\"hljs-string\">&quot;my_spec.yaml&quot;</span>, openAPI3RouterFactoryAsyncResult -&gt; {\n  <span class=\"hljs-keyword\">if</span> (openAPI3RouterFactoryAsyncResult.succeeded()) {\n    OpenAPI3RouterFactory routerFactory = openAPI3RouterFactoryAsyncResult.result();\n    <span class=\"hljs-comment\">// Mount services on event bus based on extensions</span>\n    routerFactory.mountServicesFromExtensions(); <span class=\"hljs-comment\">// &lt;- Pure magic happens!</span>\n    <span class=\"hljs-comment\">// Generate the router</span>\n    Router router = routerFactory.getRouter();\n    server = vertx.createHttpServer(<span class=\"hljs-keyword\">new</span> HttpServerOptions().setPort(<span class=\"hljs-number\">8080</span>));\n    server.requestHandler(router).listen();\n    <span class=\"hljs-comment\">// Initialization completed</span>\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// Something went wrong during router factory initialization</span>\n  }\n});\n</code></pre><p>In our spec ex­am­ple we added an ex­ten­sion <code>x-vertx-event-bus</code> to each op­er­a­tion that spec­i­fies the ad­dress of the ser­vice. Using this ex­ten­sion, you only need to call <code>OpenAPI3RouterFactory.mountServicesFromExtensions()</code> to trig­ger a scan of all op­er­a­tions and mount all found ser­vice ad­dresses. For each op­er­a­tion that con­tains <code>x-vertx-event-bus</code>, the Router Fac­tory in­stan­ti­ates an han­dler that routes the in­com­ing re­quests to the ad­dress you spec­i­fied.</p><p>This is one of the meth­ods you can use to match ser­vices with router op­er­a­tion han­dlers. Check the doc­u­men­ta­tion for all de­tails.</p><h2 id=\"more-examples\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#more-examples\"></a>More examples</h2><p>Check out the com­plete ex­am­ple in <a href=\"https://github.com/vert-x3/vertx-examples/tree/master/web-api-service-example\">vertx-​examples repo</a>.</p><p>Thanks you for your time, stay tuned for more up­dates! And please pro­vide feed­back about this new pack­age!</p>","scope":{}}},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.6.2","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.6.2, a bug fix release of Vert.x 3.6.x."},"date":"2018-12-17","slug":"eclipse-vert-x-3-6-2"},"nextPost":{"meta":{"title":"HTTP response validation with the Vert.x Web Client","category":"guides","authors":[{"name":"Thomas Segismont","github_id":"tsegismont"}],"summary":"Learn how to use response predicates from the Vert.x Web module to validate HTTP responses and to automatically generate error messages."},"date":"2018-12-10","slug":"http-response-validation-with-the-vert-x-web-client"},"relatedPosts":[{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"},{"meta":{"title":"Real-time bidding with Websockets and Vert.x","category":"guides","authors":[{"name":"Marcin Warczyglowa","github_id":"mwarc"}],"summary":"The expectations of users for interactivity with web applications have changed over the past few years.\n    Users during bidding in auction no longer want to press the refresh button."},"date":"2016-01-15","slug":"real-time-bidding-with-websockets-and-vert-x"},{"meta":{"title":"Building services and APIs with AMQP 1.0","category":"guides","authors":[{"name":"Jakub Scholz","github_id":"scholzj"}],"summary":"Microservices and APIs are everywhere. Everyone talks about them, presentation slides are full of them ... some people are actually even building them."},"date":"2017-01-25","slug":"building-services-and-apis-with-amqp-1-0"}]},"__N_SSG":true}