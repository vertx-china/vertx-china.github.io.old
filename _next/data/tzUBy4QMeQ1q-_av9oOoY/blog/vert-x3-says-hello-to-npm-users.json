{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Vert.x 3 says “hello” to NPM users","category":"guides","authors":[{"name":"Paulo Lopes","github_id":"pmlopes"}],"summary":"In programming literature it has become the standard to create a hello world program as the first example. In this article, I'll demonstrate how NPM users can quickly get started with Vert.x."},"date":"2015-07-13","slug":"vert-x3-says-hello-to-npm-users","readingTime":{"text":"4 min read","minutes":3.375,"time":202500,"words":675},"content":{"compiledSource":"var c=Object.defineProperty,m=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var o=(a,n,s)=>n in a?c(a,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[n]=s,e=(a,n)=>{for(var s in n||(n={}))l.call(n,s)&&o(a,s,n[s]);if(r)for(var s of r(n))p.call(n,s)&&o(a,s,n[s]);return a},i=(a,n)=>m(a,h(n));var d=(a,n)=>{var s={};for(var t in a)l.call(a,t)&&n.indexOf(t)<0&&(s[t]=a[t]);if(a!=null&&r)for(var t of r(a))n.indexOf(t)<0&&p.call(a,t)&&(s[t]=a[t]);return s};const makeShortcode=a=>function(s){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},s))},Link=makeShortcode(\"Link\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:a}=t,n=d(t,[\"components\"]);return mdx(MDXLayout,i(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,`In pro\\xADgram\\xADming lit\\xADer\\xADa\\xADture it has be\\xADcome the stan\\xADdard to cre\\xADate a hello world pro\\xADgram as the first ex\\xADam\\xADple. In this\nar\\xADti\\xADcle, I\\u2019ll be demon\\xADstrat\\xADing how `,mdx(\"inlineCode\",{parentName:\"p\"},\"NPM\"),\" users can quickly get started with \",mdx(\"inlineCode\",{parentName:\"p\"},\"vert.x\"),`. You will see that it is not\nthat dif\\xADfer\\xADent and in fact it can be done using the tools you\\u2019re used to. Note that al\\xADthough we are using `,mdx(\"inlineCode\",{parentName:\"p\"},\"NPM\"),` we are\nnot re\\xADly\\xADing on `,mdx(\"inlineCode\",{parentName:\"p\"},\"node.js\"),\", all \",mdx(\"inlineCode\",{parentName:\"p\"},\"javascript\"),\" code runs on the \",mdx(\"inlineCode\",{parentName:\"p\"},\"JVM\"),\".\"),mdx(\"h2\",e({},{id:\"hello-world-examples\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#hello-world-examples\"})),\"Hello World Examples\"),mdx(\"p\",null,`Here are four sim\\xADple hello world ex\\xADam\\xADples. The com\\xADments in the code ex\\xADplain how the code works and the text around it\nex\\xADplain what it does and how to test it.`),mdx(\"h2\",e({},{id:\"hello-console\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#hello-console\"})),\"Hello Console\"),mdx(\"p\",null,\"This ex\\xADam\\xADple is about as plain as it can get. It prints the words \\u201D\",mdx(\"inlineCode\",{parentName:\"p\"},\"Hello World\"),`\\u201D to the ter\\xADmi\\xADnal. If you\\u2019re a\njavascript de\\xADvel\\xADoper you should be al\\xADready used to `,mdx(\"inlineCode\",{parentName:\"p\"},\"npm\"),` and know that you al\\xADways start a project with the file\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"package.json\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-javascript\"}),`{\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"name\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"vertx3-hello-console\"'),`,\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"private\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-literal\"}),\"true\"),`,\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"dependencies\"'),`: {\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"vertx3-min\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"3.0.0-1\"'),`\n  },\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"scripts\"'),`: {\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"start\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"./node_modules/.bin/vertx run server.js\"'),`\n  }\n}\n`)),mdx(\"p\",null,\"Note that we have a de\\xADpen\\xADdency wich is ob\\xADvi\\xADous \",mdx(\"inlineCode\",{parentName:\"p\"},\"vert.x\"),\" now note that there are 3 flavours of this de\\xADpen\\xADdency:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.npmjs.com/package/vertx3-min\"}),\"min\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.npmjs.com/package/vertx3-base\"}),\"base\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.npmjs.com/package/vertx3-full\"}),\"full\"))),mdx(\"p\",null,`Ac\\xADcord\\xADing to your needs you can pick a dif\\xADfer\\xADent flavour, since for a sim\\xADple hello world we only need the min\\xADi\\xADmal that\nis the one we add to the de\\xADpen\\xADdency prop\\xADerty.`),mdx(\"p\",null,\"Now we need to do a sim\\xADple hello app, we will call this file \\u201D\",mdx(\"inlineCode\",{parentName:\"p\"},\"server.js\"),\"\\u201C:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Call the console.log function.\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-built_in\"}),\"console\"),\".log(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Hello World\"'),`);\n`)),mdx(\"p\",null,\"You can run this by ex\\xADe\\xADcut\\xADing:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),`npm install\nnpm start\n`)),mdx(\"p\",null,\"The first com\\xADmand re\\xADtrieve the vert.x stack while the sec\\xADonds starts your pro\\xADgram.\"),mdx(\"h2\",e({},{id:\"hello-http\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#hello-http\"})),\"Hello HTTP\"),mdx(\"p\",null,\"I\\u2019d guess that while it\\u2019s not the only use case for \",mdx(\"inlineCode\",{parentName:\"p\"},\"vert.x\"),`, most peo\\xADple are using it as a web ap\\xADpli\\xADca\\xADtion plat\\xADform. So\nthe next ex\\xADam\\xADple will be a sim\\xADple HTTP server that re\\xADsponds to every re\\xADquest with the plain text mes\\xADsage \\u201D`,mdx(\"inlineCode\",{parentName:\"p\"},\"Hello World\"),`\\u201D\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"server.js\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-javascript\"}),`vertx.createHttpServer()\n  .requestHandler(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"function\"),\" (\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"req\"),\") \"),`{\n    req.response()\n      .putHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"content-type\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"text/plain\"'),`)\n      .end(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Hello World!\"'),`);\n}).listen(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"8080\"),`);\n`)),mdx(\"p\",null,\"Now you can reuse the same \",mdx(\"inlineCode\",{parentName:\"p\"},\"package.json\"),` we\\u2019ve just de\\xADfined in the pre\\xADvi\\xADous sec\\xADtion and start the server with\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"npm start\"),\". Once the server starts you can open a browser to \",mdx(\"inlineCode\",{parentName:\"p\"},\"http://localhost:8080\"),\" and enjoy the mes\\xADsage.\"),mdx(\"h2\",e({},{id:\"hello-tcp\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#hello-tcp\"})),\"Hello TCP\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"Vert.x\"),` also makes an ex\\xADcel\\xADlent TCP server, and here is an ex\\xADam\\xADple that re\\xADsponds to all TCP con\\xADnec\\xADtions with the\nmes\\xADsage \\u201CHello World\\u201D and then closes the con\\xADnec\\xADtion `,mdx(\"inlineCode\",{parentName:\"p\"},\"server.js\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),` server = vertx.createNetServer();\nserver.connectHandler(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"function\"),\" (\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"socket\"),\") \"),`{\n  socket.write(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Hello World!\\\\n\"'),`);\n  socket.close();\n});\n\nserver.listen(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"7000\"),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"localhost\"'),`);\n`)),mdx(\"p\",null,\"Again reuse the pre\\xADvi\\xADous \",mdx(\"inlineCode\",{parentName:\"p\"},\"package.json\"),\" and test it by doing \",mdx(\"inlineCode\",{parentName:\"p\"},\"telnet localhost 7000\"),\".\"),mdx(\"h2\",e({},{id:\"hello-web\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#hello-web\"})),\"Hello Web\"),mdx(\"p\",null,\"Often you won\\u2019t be using \",mdx(\"inlineCode\",{parentName:\"p\"},\"vert.x\"),\" built-\\u200Bin li\\xADbraries be\\xADcause they are de\\xADsigned to be very low level. This makes \",mdx(\"inlineCode\",{parentName:\"p\"},\"vert.x\"),`\nquick, nim\\xADble, and easy to main\\xADtain, but if you are plan\\xADning to build a com\\xADplex ap\\xADpli\\xADca\\xADtion you want some pro\\xADduc\\xADtiv\\xADity\nand rely on a sim\\xADple web frame\\xADwork. For this spe\\xADcific case there is `,mdx(\"inlineCode\",{parentName:\"p\"},\"vert.x web\"),`,\n`,mdx(Link,{href:\"/docs/#web\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"a sim\\xADple, yet pro\\xADduc\\xADtive frame\\xADwork\")),`, to build fast web ap\\xADpli\\xADca\\xADtion with rout\\xADing, tem\\xADplate\nren\\xADder\\xADing, lots of mid\\xADdle\\xADware etc\\u2026usu\\xADally not enough to get started on a real world ap\\xADpli\\xADca\\xADtion. This ex\\xADam\\xADple shows an\nHTTP server that re\\xADsponds with \\u201CHello World\\u201D to all re\\xADquests to \\u201D/\\u201D and re\\xADsponds with a 404 error to every\\xADthing else\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"server.js\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),\" Router = \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-built_in\"}),\"require\"),\"(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"vertx-web-js/router\"'),`);\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),` server = vertx.createHttpServer();\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),` router = Router.router(vertx);\n\nrouter.get(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/\"'),\").handler(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"function\"),\" (\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"ctx\"),\") \"),`{\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),'// This handler will be called for \"/\" requests'),`\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"var\"),` response = ctx.response();\n  response.putHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"content-type\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"text/plain\"'),`);\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Write to the response and end it\"),`\n  response.end(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Hello World!\"'),`);\n});\n\nserver.requestHandler(router.accept).listen(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"8080\"),`);\n`)),mdx(\"p\",null,\"In order to test this, you will need to in\\xADstall the \",mdx(\"inlineCode\",{parentName:\"p\"},\"vertx3-full\"),` stack. There are two ways to do this. You can ei\\xADther\nin\\xADstall it glob\\xADally `,mdx(\"inlineCode\",{parentName:\"p\"},\"npm install -g vertx3-full\"),\" or add it as a de\\xADpen\\xADdency to our \",mdx(\"inlineCode\",{parentName:\"p\"},\"package.json\"),` as we have done be\\xADfore,\nfor ex\\xADam\\xADple `,mdx(\"inlineCode\",{parentName:\"p\"},\"package.json\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-javascript\"}),`{\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"name\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"vertx3-hello-web\"'),`,\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"private\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-literal\"}),\"true\"),`,\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"dependencies\"'),`: {\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"vertx3-full\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"3.0.0-1\"'),`\n  },\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"scripts\"'),`: {\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"start\"'),\": \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"./node_modules/.bin/vertx run server.js\"'),`\n  }\n}\n`)),mdx(\"p\",null,\"That\\u2019s it for now. Hope\\xADfully this will help you get started work\\xADing with \",mdx(\"inlineCode\",{parentName:\"p\"},\"vert.x\"),\"!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"prevPost":{"meta":{"title":"My first Vert.x 3 Application","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let's say, you heard someone saying that Vert.x is awesome. Ok great, but you may want to try it by yourself. Well, the next natural question is “where do I start ?”"},"date":"2015-07-14","slug":"my-first-vert-x-3-application"},"nextPost":{"meta":{"title":"Checklist for Migrating from Vert.x 2.1.x to Vert.x 3 - Part One","category":"guides","authors":[{"name":"Mark Spritzler","github_id":"bytor99999"}],"summary":"So while upgrading our application, I thought I should note down all the changes that we had to do in the process. Since Vert.x 3 is a major upgrade from the previous version, with so many changes."},"date":"2015-07-06","slug":"checklist-for-migrating-from-vert-x-2-1-x-to-vert-x-3-part-one"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Checklist for Migrating from Vert.x 2.1.x to Vert.x 3 - Part One","category":"guides","authors":[{"name":"Mark Spritzler","github_id":"bytor99999"}],"summary":"So while upgrading our application, I thought I should note down all the changes that we had to do in the process. Since Vert.x 3 is a major upgrade from the previous version, with so many changes."},"date":"2015-07-06","slug":"checklist-for-migrating-from-vert-x-2-1-x-to-vert-x-3-part-one"}]},"__N_SSG":true}