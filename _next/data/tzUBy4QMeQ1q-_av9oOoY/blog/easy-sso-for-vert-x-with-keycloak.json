{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Easy SSO for Vert.x with Keycloak","category":"guides","authors":[{"name":"Thomas Darimont","github_id":"thomasdarimont"}],"summary":"In this blog post, you'll learn how to implement Single Sign-on with OpenID Connect and how to use Keycloak together with Eclipse Vert.x."},"date":"2020-03-16","slug":"easy-sso-for-vert-x-with-keycloak","readingTime":{"text":"11 min read","minutes":10.11,"time":606600,"words":2022},"content":{"compiledSource":"var d=Object.defineProperty,m=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var i=(a,n,t)=>n in a?d(a,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[n]=t,e=(a,n)=>{for(var t in n||(n={}))o.call(n,t)&&i(a,t,n[t]);if(r)for(var t of r(n))p.call(n,t)&&i(a,t,n[t]);return a},l=(a,n)=>m(a,h(n));var c=(a,n)=>{var t={};for(var s in a)o.call(a,s)&&n.indexOf(s)<0&&(t[s]=a[s]);if(a!=null&&r)for(var s of r(a))n.indexOf(s)<0&&p.call(a,s)&&(t[s]=a[s]);return t};const makeShortcode=a=>function(t){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},t))},Link=makeShortcode(\"Link\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var s=t,{components:a}=s,n=c(s,[\"components\"]);return mdx(MDXLayout,l(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"TL;DR:\")),mdx(\"p\",null,\"In this blog post you\\u2019ll learn:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"How to im\\xADple\\xADment Sin\\xADgle Sign-\\u200Bon with OpenID Con\\xADnect\"),mdx(\"li\",{parentName:\"ul\"},\"How to use Key\\xADcloak\\u2019s OpenID Dis\\xADcov\\xADery to infer OpenID provider con\\xADfig\\xADu\\xADra\\xADtion\"),mdx(\"li\",{parentName:\"ul\"},\"How to ob\\xADtain user in\\xADfor\\xADma\\xADtion\"),mdx(\"li\",{parentName:\"ul\"},\"How to check for au\\xADtho\\xADriza\\xADtion\"),mdx(\"li\",{parentName:\"ul\"},\"How to call a Bearer pro\\xADtected ser\\xADvice with an Ac\\xADcess Token\"),mdx(\"li\",{parentName:\"ul\"},\"How to im\\xADple\\xADment a form based lo\\xADgout\")),mdx(\"h2\",e({},{id:\"hello-blog\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#hello-blog\"})),\"Hello Blog\"),mdx(\"p\",null,`This is my first post in the Vert.x Blog and I must admit that up until now I have never used Vert.x in a real project.\n\\u201CWhy are you here?\\u201D, you might ask\\u2026 Well I cur\\xADrently have two main hob\\xADbies, learn\\xADing new things and se\\xADcur\\xADing apps with `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.keycloak.org/\"}),\"Key\\xADcloak\"),`.\nSo a few days ago, I stum\\xADbled upon the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.youtube.com/watch?v=LsaXy7SRXMY&list=PLkeCJDaCC2ZsnySdg04Aq9D9FpAZY6K5D\"}),\"In\\xADtro\\xADduc\\xADtion to Vert.x video se\\xADries on youtube\"),\" by \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://twitter.com/infosec812\"}),\"Deven Phillips\"),\" and I was im\\xADme\\xADdi\\xADately hooked. Vert.x was a new thing for me, so the next log\\xADi\\xADcal step was to fig\\xADure out how to se\\xADcure a Vert.x app with Key\\xADcloak.\"),mdx(\"p\",null,`For this ex\\xADam\\xADple I build a small web app with Vert.x that shows how to im\\xADple\\xADment Sin\\xADgle Sign-\\u200Bon (SSO) with Key\\xADcloak\nand OpenID Con\\xADnect, ob\\xADtain in\\xADfor\\xADma\\xADtion about the cur\\xADrent user, check for roles, call bearer pro\\xADtected ser\\xADvices and prop\\xADerly han\\xADdling lo\\xADgout.`),mdx(\"h2\",e({},{id:\"keycloak\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#keycloak\"})),\"Keycloak\"),mdx(\"p\",null,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.keycloak.org/\"}),\"Key\\xADcloak\"),` is a Open Source Iden\\xADtity and Ac\\xADcess Man\\xADage\\xADment so\\xADlu\\xADtion which pro\\xADvides sup\\xADport for OpenID Con\\xADnect\nbased Singe-\\u200BSign on, among many other things. I briefly looked for ways to se\\xADcur\\xADing a Vert.x app with Key\\xADcloak\nand quickly found an `,mdx(Link,{href:\"/blog/vertx-3-and-keycloak-tutorial/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"older Vert.x Key\\xADcloak in\\xADte\\xADgra\\xADtion ex\\xADam\\xADple\")),` in this very blog.\nWhilst this is a good start for be\\xADgin\\xADners, the ex\\xADam\\xADple con\\xADtains a few is\\xADsues, e.g.:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"It uses hard\\xADcoded OpenID provider con\\xADfig\\xADu\\xADra\\xADtion\"),mdx(\"li\",{parentName:\"ul\"},\"Fea\\xADtures a very sim\\xADplis\\xADtic in\\xADte\\xADgra\\xADtion (for the sake of sim\\xADplic\\xADity)\"),mdx(\"li\",{parentName:\"ul\"},\"No user in\\xADfor\\xADma\\xADtion used\"),mdx(\"li\",{parentName:\"ul\"},\"No lo\\xADgout func\\xADtion\\xADal\\xADity is shown\")),mdx(\"p\",null,\"That some\\xADhow nerd\\xADsniped me a bit and so it came that, after a long day of con\\xADsult\\xADing work, I sat down to cre\\xADate an ex\\xADam\\xADple for a com\\xADplete Key\\xADcloak in\\xADte\\xADgra\\xADtion based on \",mdx(Link,{href:\"/docs/vertx-auth-oauth2/java/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"Vert.x OpenID Con\\xADnect / OAuth2 Sup\\xADport\")),\".\"),mdx(\"p\",null,\"So let\\u2019s get started!\"),mdx(\"h3\",e({},{id:\"keycloak-setup\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#keycloak-setup\"})),\"Keycloak Setup\"),mdx(\"p\",null,\"To se\\xADcure a Vert.x app with Key\\xADcloak we of course need a Key\\xADcloak in\\xADstance. Al\\xADthough \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.keycloak.org/docs/latest/getting_started/\"}),\"Key\\xADcloak has a great get\\xADting started guide\"),\" I wanted to make it a bit eas\\xADier to put every\\xADthing to\\xADgether, there\\xADfore I pre\\xADpared a local Key\\xADcloak docker con\\xADtainer \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/thomasdarimont/vertx-playground/tree/master/keycloak-vertx#start-keycloak-with-the-vertx-realm\"}),\"as de\\xADscribed here\"),\" that you can start eas\\xADily, which comes with all the re\\xADquired con\\xADfig\\xADu\\xADra\\xADtion in place.\"),mdx(\"p\",null,\"The pre\\xADcon\\xADfig\\xADured Key\\xADcloak realm named \",mdx(\"inlineCode\",{parentName:\"p\"},\"vertx\"),\" con\\xADtains a \",mdx(\"inlineCode\",{parentName:\"p\"},\"demo-client\"),` for our Vert.x web app and a set\nof users for test\\xADing.`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-haml\"}),`docker run \\\\\n  -`,mdx(\"span\",e({parentName:\"code\"},{className:\"ruby\"}),`it \\\\\n`),\"  -\",mdx(\"span\",e({parentName:\"code\"},{className:\"ruby\"}),`-name vertx-keycloak \\\\\n`),\"  -\",mdx(\"span\",e({parentName:\"code\"},{className:\"ruby\"}),`-rm \\\\\n`),\"  -\",mdx(\"span\",e({parentName:\"code\"},{className:\"ruby\"}),`e KEYCLOAK_USER=admin \\\\\n`),\"  -\",mdx(\"span\",e({parentName:\"code\"},{className:\"ruby\"}),`e KEYCLOAK_PASSWORD=admin \\\\\n`),\"  -\",mdx(\"span\",e({parentName:\"code\"},{className:\"ruby\"}),\"e KEYCLOAK_IMPORT=\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-regexp\"}),\"/tmp/vertx\"),`-realm.json \\\\\n`),\"  -\",mdx(\"span\",e({parentName:\"code\"},{className:\"ruby\"}),\"v \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-variable\"}),\"$PWD\"),\"/vertx-realm.\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-symbol\"}),\"json:\"),`/tmp/vertx-realm.json \\\\\n`),\"  -\",mdx(\"span\",e({parentName:\"code\"},{className:\"ruby\"}),\"p \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-number\"}),\"8080\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-symbol\"}),\":\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-number\"}),\"8080\"),` \\\\\n`),`  quay.io/keycloak/keycloak:9.0.0\n`)),mdx(\"h2\",e({},{id:\"vertx-web-app\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#vertx-web-app\"})),\"Vert.x Web App\"),mdx(\"p\",null,\"The sim\\xADple web app con\\xADsists of a sin\\xADgle \",mdx(\"inlineCode\",{parentName:\"p\"},\"Verticle\"),\", runs on \",mdx(\"inlineCode\",{parentName:\"p\"},\"http://localhost:8090\"),\" and pro\\xADvides a few routes with pro\\xADtected re\\xADsources. \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/thomasdarimont/vertx-playground/blob/master/keycloak-vertx/src/main/java/demo/MainVerticle.java\"}),\"You can find the com\\xADplete ex\\xADam\\xADple here\"),\".\"),mdx(\"p\",null,\"The web app con\\xADtains the fol\\xADlow\\xADing routes with han\\xADdlers:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"/\"),\" - The un\\xADpro\\xADtected index page\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"/protected\"),\" - The pro\\xADtected page, which shows a greet\\xADing mes\\xADsage, users need to login to ac\\xADcess pages be\\xADneath this path.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"/protected/user\"),\" - The pro\\xADtected user page, which shows some in\\xADfor\\xADma\\xADtion about the user.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"/protected/admin\"),\" - The pro\\xADtected admin page, which shows some in\\xADfor\\xADma\\xADtion about the admin, only users with role \",mdx(\"inlineCode\",{parentName:\"li\"},\"admin\"),\" can ac\\xADcess this page.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"/protected/userinfo\"),\" - The pro\\xADtected user\\xADinfo page, ob\\xADtains user in\\xADfor\\xADma\\xADtion from the bearer token pro\\xADtected user\\xADinfo end\\xADpoint in Key\\xADcloak.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"/logout\"),\" - The pro\\xADtected lo\\xADgout re\\xADsource, which trig\\xADgers the user lo\\xADgout.\")),mdx(\"h3\",e({},{id:\"running-the-app\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#running-the-app\"})),\"Running the app\"),mdx(\"p\",null,\"To run the app, we need to build our app via:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-built_in\"}),\"cd\"),` keycloak-vertx\nmvn clean package\n`)),mdx(\"p\",null,\"This cre\\xADates a runnable jar, which we can run via:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),`java -jar target/*.jar\n`)),mdx(\"p\",null,\"Note, that you need to start Key\\xADcloak, since our app will try to fetch con\\xADfig\\xADu\\xADra\\xADtion from Key\\xADcloak.\"),mdx(\"p\",null,\"If the ap\\xADpli\\xADca\\xADtion is run\\xADning, just browse to: \",mdx(\"inlineCode\",{parentName:\"p\"},\"http://localhost:8090/\"),\".\"),mdx(\"p\",null,\"An ex\\xADam\\xADple in\\xADter\\xADac\\xADtion with the app can be seen in the fol\\xADlow\\xADing gif:\"),mdx(\"p\",null,mdx(\"img\",e({parentName:\"p\"},{src:\"/images/blog/vertx-keycloak-integration/2020-03-07-vertx-keycloak-integration.gif\",alt:\"Vert.x Keycloak Integration Demo\"}))),mdx(\"h3\",e({},{id:\"router-sessionstore-and-csrf-protection\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#router-sessionstore-and-csrf-protection\"})),\"Router, SessionStore and CSRF Protection\"),mdx(\"p\",null,\"We start the con\\xADfig\\xADu\\xADra\\xADtion of our web app by cre\\xADat\\xADing a \",mdx(\"inlineCode\",{parentName:\"p\"},\"Router\"),` where we can add cus\\xADtom han\\xADdler func\\xADtions for our routes.\nTo prop\\xADerly han\\xADdle the au\\xADthen\\xADti\\xADca\\xADtion state we need to cre\\xADate a `,mdx(\"inlineCode\",{parentName:\"p\"},\"SessionStore\"),\" and at\\xADtach it to the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Router\"),`.\nThe `,mdx(\"inlineCode\",{parentName:\"p\"},\"SessionStore\"),` is used by our OAuth2/OpenID Con\\xADnect in\\xADfra\\xADstruc\\xADture to as\\xADso\\xADciate au\\xADthen\\xADti\\xADca\\xADtion in\\xADfor\\xADma\\xADtion with a ses\\xADsion.\nBy the way, the `,mdx(\"inlineCode\",{parentName:\"p\"},\"SessionStore\"),\" can also be clus\\xADtered if you need to dis\\xADtrib\\xADute the server-\\u200Bside state.\"),mdx(\"p\",null,`Note that if you want to keep your server state\\xADless but still want to sup\\xADport clus\\xADter\\xADing,\nthen you could pro\\xADvide your own im\\xADple\\xADmen\\xADta\\xADtion of a `,mdx(\"inlineCode\",{parentName:\"p\"},\"SessionStore\"),` which stores the ses\\xADsion in\\xADfor\\xADma\\xADtion\nas an en\\xADcrypted cookie on the Client.`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),`Router router = Router.router(vertx);\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Store session information on the server side\"),`\nSessionStore sessionStore = LocalSessionStore.create(vertx);\nSessionHandler sessionHandler = SessionHandler.create(sessionStore);\nrouter.route().handler(sessionHandler);\n`)),mdx(\"p\",null,`In order to pro\\xADtected against CSRF at\\xADtacks it is good prac\\xADtice to pro\\xADtect HTML forms with a CSRF token.\nWe need this for our lo\\xADgout form that we\\u2019ll see later.`),mdx(\"p\",null,\"To do this we con\\xADfig\\xADure a \",mdx(\"inlineCode\",{parentName:\"p\"},\"CSRFHandler\"),\" and add it to our \",mdx(\"inlineCode\",{parentName:\"p\"},\"Router\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// CSRF handler setup required for logout form\"),`\nString csrfSecret = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"zwiebelfische\"'),`;\nCSRFHandler csrfHandler = CSRFHandler.create(csrfSecret);\nrouter.route().handler(ctx -> {\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Ensures that the csrf token request parameter is available for the CsrfHandler\"),`\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// after the logout form was submitted.\"),`\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),'// See \"Handling HTML forms\" https://vertx.io/docs/vertx-core/java/#_handling_requests'),`\n            ctx.request().setExpectMultipart(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"true\"),`);\n            ctx.request().endHandler(v -> csrfHandler.handle(ctx));\n        }\n);\n`)),mdx(\"h3\",e({},{id:\"keycloak-setup-via-openid-connect-discovery\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#keycloak-setup-via-openid-connect-discovery\"})),\"Keycloak Setup via OpenID Connect Discovery\"),mdx(\"p\",null,`Our app is reg\\xADis\\xADtered as a con\\xADfi\\xADden\\xADtial OpenID Con\\xADnect client with Au\\xADtho\\xADriza\\xADtion Code Flow in Key\\xADcloak,\nthus we need to con\\xADfig\\xADure `,mdx(\"inlineCode\",{parentName:\"p\"},\"client_id\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"client_secret\"),`. Con\\xADfi\\xADden\\xADtial clients are typ\\xADi\\xADcally used\nfor server-\\u200Bside web ap\\xADpli\\xADca\\xADtions, where one can se\\xADcurely store the `,mdx(\"inlineCode\",{parentName:\"p\"},\"client_secret\"),`. You can find out more\nabout`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.keycloak.org/docs/latest/server_admin/index.html#_access-type\"}),\"The dif\\xADfer\\xADent Client Ac\\xADcess Types\"),\" in the Key\\xADcloak doc\\xADu\\xADmen\\xADta\\xADtion.\"),mdx(\"p\",null,\"Since we don\\u2019t want to con\\xADfig\\xADure things like OAuth2 / OpenID Con\\xADnect End\\xADpoints our\\xADselves, we use Key\\xADcloak\\u2019s OpenID Con\\xADnect dis\\xADcov\\xADery end\\xADpoint to infer the nec\\xADes\\xADsary Oauth2 / OpenID Con\\xADnect end\\xADpoint URLs.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),\"String hostname = System.getProperty(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"http.host\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"localhost\"'),`);\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"int\"),\" port = Integer.getInteger(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"http.port\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"8090\"),`);\nString baseUrl = String.format(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"http://%s:%d\"'),`, hostname, port);\nString oauthCallbackPath = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/callback\"'),`;\n\nOAuth2ClientOptions clientOptions = `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),` OAuth2ClientOptions()\n    .setFlow(OAuth2FlowType.AUTH_CODE)\n    .setSite(System.getProperty(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"oauth2.issuer\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"http://localhost:8080/auth/realms/vertx\"'),`))\n    .setClientID(System.getProperty(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"oauth2.client_id\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"demo-client\"'),`))\n    .setClientSecret(System.getProperty(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"oauth2.client_secret\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"1f88bd14-7e7f-45e7-be27-d680da6e48d8\"'),`));\n\nKeycloakAuth.discover(vertx, clientOptions, asyncResult -> {\n\n    OAuth2Auth oauth2Auth = asyncResult.result();\n\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),\" (oauth2Auth == \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"null\"),`) {\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"throw\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" RuntimeException(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"Could not configure Keycloak integration via OpenID Connect Discovery Endpoint. Is Keycloak running?\"'),`);\n    }\n\n    AuthHandler oauth2 = OAuth2AuthHandler.create(oauth2Auth, baseUrl + oauthCallbackPath)\n        .setupCallback(router.get(oauthCallbackPath))\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// Additional scopes: openid for OpenID Connect\"),`\n        .addAuthority(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"openid\"'),`);\n\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// session handler needs access to the authenticated user, otherwise we get an infinite redirect loop\"),`\n    sessionHandler.setAuthProvider(oauth2Auth);\n\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// protect resources beneath /protected/* with oauth2 handler\"),`\n    router.route(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/protected/*\"'),`).handler(oauth2);\n\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// configure route handlers\"),`\n    configureRoutes(router, webClient, oauth2Auth);\n});\n\ngetVertx().createHttpServer().requestHandler(router).listen(port);\n`)),mdx(\"h3\",e({},{id:\"route-handlers\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#route-handlers\"})),\"Route handlers\"),mdx(\"p\",null,\"We con\\xADfig\\xADure our route han\\xADdlers via \",mdx(\"inlineCode\",{parentName:\"p\"},\"configureRoutes\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"configureRoutes\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(Router router, WebClient webClient, OAuth2Auth oauth2Auth)\"),\" \"),`{\n\n    router.get(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/\"'),\").handler(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"this\"),`::handleIndex);\n\n    router.get(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/protected\"'),\").handler(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"this\"),`::handleGreet);\n    router.get(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/protected/user\"'),\").handler(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"this\"),`::handleUserPage);\n    router.get(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/protected/admin\"'),\").handler(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"this\"),`::handleAdminPage);\n\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// extract discovered userinfo endpoint url\"),`\n    String userInfoUrl =  ((OAuth2AuthProviderImpl)oauth2Auth).getConfig().getUserInfoPath();\n    router.get(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/protected/userinfo\"'),`).handler(createUserInfoHandler(webClient, userInfoUrl));\n\n    router.post(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/logout\"'),\").handler(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"this\"),`::handleLogout);\n}\n`)),mdx(\"p\",null,\"The index han\\xADdler ex\\xADposes an un\\xADpro\\xADtected re\\xADsource:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"handleIndex\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(RoutingContext ctx)\"),\" \"),`{\n    respondWithOk(ctx, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"text/html\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<h1>Welcome to Vert.x Keycloak Example</h1><br><a href=\\\\\"/protected\\\\\">Protected</a>\"'),`);\n}\n`)),mdx(\"h3\",e({},{id:\"extract-user-information-from-the-openid-connect-id-token\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#extract-user-information-from-the-openid-connect-id-token\"})),\"Extract User Information from the OpenID Connect ID Token\"),mdx(\"p\",null,\"Our app ex\\xADposes a sim\\xADple greet\\xADing page which shows some in\\xADfor\\xADma\\xADtion about the user and pro\\xADvides links to other pages.\"),mdx(\"p\",null,`The user greet\\xADing han\\xADdler is pro\\xADtected by the Key\\xADcloak OAuth2 / OpenID Con\\xADnect in\\xADte\\xADgra\\xADtion. To show in\\xADfor\\xADma\\xADtion about\nthe cur\\xADrent user, we first need to call the `,mdx(\"inlineCode\",{parentName:\"p\"},\"ctx.user()\"),` method to get an user ob\\xADject we can work with.\nTo ac\\xADcess the OAuth2 token in\\xADfor\\xADma\\xADtion, we need to cast it to `,mdx(\"inlineCode\",{parentName:\"p\"},\"OAuth2TokenImpl\"),\".\"),mdx(\"p\",null,\"We can ex\\xADtract the user in\\xADfor\\xADma\\xADtion like the user\\xADname from the \",mdx(\"inlineCode\",{parentName:\"p\"},\"IDToken\"),\" ex\\xADposed by the user ob\\xADject via \",mdx(\"inlineCode\",{parentName:\"p\"},'user.idToken().getString(\"preferred_username\")'),`.\nNote, there are many more claims like (name, email, give\\xADnanme, fam\\xADi\\xADly\\xADname etc.) avail\\xADable. The `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://openid.net/specs/openid-connect-core-1_0.html#Claims\"}),\"OpenID Con\\xADnect Core Spec\\xADi\\xADfi\\xADca\\xADtion\"),\" con\\xADtains a list of avail\\xADable claims.\"),mdx(\"p\",null,\"We also gen\\xADer\\xADate a list with links to the other pages which are sup\\xADported:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"handleGreet\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(RoutingContext ctx)\"),\" \"),`{\n\n    OAuth2TokenImpl oAuth2Token = (OAuth2TokenImpl) ctx.user();\n\n    String username = oAuth2Token.idToken().getString(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"preferred_username\"'),`);\n\n    String greeting = String.format(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<h1>Hi %s @%s</h1><ul>\"'),` +\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<li><a href=\\\\\"/protected/user\\\\\">User Area</a></li>\"'),` +\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<li><a href=\\\\\"/protected/admin\\\\\">Admin Area</a></li>\"'),` +\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<li><a href=\\\\\"/protected/userinfo\\\\\">User Info (Remote Call)</a></li>\"'),` +\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"</ul>\"'),`, username, Instant.now());\n\n    String logoutForm = createLogoutForm(ctx);\n\n    respondWithOk(ctx, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"text/html\"'),`, greeting + logoutForm);\n}\n`)),mdx(\"p\",null,\"The user page han\\xADdler shows in\\xADfor\\xADma\\xADtion about the cur\\xADrent user:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"handleUserPage\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(RoutingContext ctx)\"),\" \"),`{\n\n    OAuth2TokenImpl user = (OAuth2TokenImpl) ctx.user();\n\n    String username = user.idToken().getString(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"preferred_username\"'),`);\n    String displayName = oAuth2Token.idToken().getString(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"name\"'),`);\n\n    String content = String.format(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<h1>User Page: %s (%s) @%s</h1><a href=\\\\\"/protected\\\\\">Protected Area</a>\"'),`,\n                                   username, displayName, Instant.now());\n    respondWithOk(ctx, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"text/html\"'),`, content);\n}\n`)),mdx(\"h3\",e({},{id:\"authorization-checking-for-required-roles\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#authorization-checking-for-required-roles\"})),\"Authorization: Checking for Required Roles\"),mdx(\"p\",null,\"Our app ex\\xADposes a sim\\xADple admin page which shows some in\\xADfor\\xADma\\xADtion for ad\\xADmins, which should only be vis\\xADi\\xADble for ad\\xADmins. Thus we re\\xADquire that users must have the \",mdx(\"inlineCode\",{parentName:\"p\"},\"admin\"),\" realm role in Key\\xADcloak to be able to ac\\xADcess the admin page.\"),mdx(\"p\",null,\"This is done via a call to \",mdx(\"inlineCode\",{parentName:\"p\"},'user.isAuthorized(\"realm:admin\", cb)'),\". The han\\xADdler func\\xADtion \",mdx(\"inlineCode\",{parentName:\"p\"},\"cb\"),` ex\\xADposes\nthe re\\xADsult of the au\\xADtho\\xADriza\\xADtion check via the `,mdx(\"inlineCode\",{parentName:\"p\"},\"AsyncResult<Boolean> res\"),`. If the cur\\xADrent user has the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"admin\"),\" role then the re\\xADsult is \",mdx(\"inlineCode\",{parentName:\"p\"},\"true\"),\" oth\\xADer\\xADwise \",mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"handleAdminPage\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(RoutingContext ctx)\"),\" \"),`{\n\n    OAuth2TokenImpl user = (OAuth2TokenImpl) ctx.user();\n\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),'// check for realm-role \"admin\"'),`\n    user.isAuthorized(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"realm:admin\"'),`, res -> {\n\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),` (!res.succeeded() || !res.result()) {\n            respondWith(ctx, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"403\"),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"text/html\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<h1>Forbidden</h1>\"'),`);\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),`;\n        }\n\n        String username = user.idToken().getString(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"preferred_username\"'),`);\n\n        String content = String.format(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<h1>Admin Page: %s @%s</h1><a href=\\\\\"/protected\\\\\">Protected Area</a>\"'),`,\n                                        username, Instant.now());\n        respondWithOk(ctx, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"text/html\"'),`, content);\n    });\n}\n`)),mdx(\"h4\",e({},{id:\"call-services-protected-with-bearer-token\"}),mdx(\"a\",e({parentName:\"h4\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#call-services-protected-with-bearer-token\"})),\"Call Services protected with Bearer Token\"),mdx(\"p\",null,`Often we need to call other ser\\xADvices from our web app that are pro\\xADtected via Bearer Au\\xADthen\\xADti\\xADca\\xADtion. This means\nthat we need a valid `,mdx(\"inlineCode\",{parentName:\"p\"},\"access token\"),\" to ac\\xADcess a re\\xADsource pro\\xADvided on an\\xADother server.\"),mdx(\"p\",null,\"To demon\\xADstrate this we use Key\\xADcloak\\u2019s \",mdx(\"inlineCode\",{parentName:\"p\"},\"/userinfo\"),\" end\\xADpoint as a straw man to demon\\xADstrate back\\xADend calls with a bearer token.\"),mdx(\"p\",null,\"We can ob\\xADtain the cur\\xADrent valid \",mdx(\"inlineCode\",{parentName:\"p\"},\"access token\"),\" via \",mdx(\"inlineCode\",{parentName:\"p\"},\"user.opaqueAccessToken()\"),`.\nSince we use a `,mdx(\"inlineCode\",{parentName:\"p\"},\"WebClient\"),\" to call the pro\\xADtected end\\xADpoint, we need to pass the \",mdx(\"inlineCode\",{parentName:\"p\"},\"access token\"),`\nvia the `,mdx(\"inlineCode\",{parentName:\"p\"},\"Authorization\"),\" header by call\\xADing \",mdx(\"inlineCode\",{parentName:\"p\"},\"bearerTokenAuthentication(user.opaqueAccessToken())\"),`\nin the cur\\xADrent `,mdx(\"inlineCode\",{parentName:\"p\"},\"HttpRequest\"),\" ob\\xADject:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" Handler<RoutingContext> \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"createUserInfoHandler\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(WebClient webClient, String userInfoUrl)\"),\" \"),`{\n\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),` (RoutingContext ctx) -> {\n\n        OAuth2TokenImpl user = (OAuth2TokenImpl) ctx.user();\n\n        URI userInfoEndpointUri = URI.create(userInfoUrl);\n        webClient\n            .get(userInfoEndpointUri.getPort(), userInfoEndpointUri.getHost(), userInfoEndpointUri.getPath())\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// use the access token for calls to other services protected via JWT Bearer authentication\"),`\n            .bearerTokenAuthentication(user.opaqueAccessToken())\n            .as(BodyCodec.jsonObject())\n            .send(ar -> {\n\n                `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),` (!ar.succeeded()) {\n                    respondWith(ctx, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"500\"),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"application/json\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"{}\"'),`);\n                    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),`;\n                }\n\n                JsonObject body = ar.result().body();\n                respondWithOk(ctx, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"application/json\"'),`, body.encode());\n            });\n    };\n}\n`)),mdx(\"h3\",e({},{id:\"handle-logout\"}),mdx(\"a\",e({parentName:\"h3\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#handle-logout\"})),\"Handle logout\"),mdx(\"p\",null,`Now that we got a work\\xADing SSO login with au\\xADtho\\xADriza\\xADtion, it would be great if we would allow users to lo\\xADgout again.\nTo do this we can lever\\xADage the built-\\u200Bin OpenID Con\\xADnect lo\\xADgout func\\xADtion\\xADal\\xADity which can be called via `,mdx(\"inlineCode\",{parentName:\"p\"},\"oAuth2Token.logout(cb)\"),\".\"),mdx(\"p\",null,\"The han\\xADdler func\\xADtion \",mdx(\"inlineCode\",{parentName:\"p\"},\"cb\"),\" ex\\xADposes the re\\xADsult of the lo\\xADgout ac\\xADtion via the \",mdx(\"inlineCode\",{parentName:\"p\"},\"AsyncResult<Void> res\"),`.\nIf the lo\\xADgout was suc\\xADcess\\xADfull we destory our ses\\xADsion via `,mdx(\"inlineCode\",{parentName:\"p\"},\"ctx.session().destroy()\"),\" and redi\\xADrect the user to the index page.\"),mdx(\"p\",null,\"The lo\\xADgout form is gen\\xADer\\xADated via the \",mdx(\"inlineCode\",{parentName:\"p\"},\"createLogoutForm\"),\" method.\"),mdx(\"p\",null,\"As men\\xADtioned ear\\xADlier, we need to pro\\xADtect our lo\\xADgout form with a CSRF token to pre\\xADvent \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://owasp.org/www-community/attacks/csrf\"}),\"CSRF at\\xADtacks\"),\".\"),mdx(\"p\",null,\"Note: If we had end\\xADpoints that would ac\\xADcept data sent to the server, then we\\u2019d need to guard those end\\xADpoints with an CSRF token as well.\"),mdx(\"p\",null,\"We need to ob\\xADtain the gen\\xADer\\xADated \",mdx(\"inlineCode\",{parentName:\"p\"},\"CSRFToken\"),\" and ren\\xADder it into a hid\\xADden form input field that\\u2019s trans\\xADfered via HTTP POST when the lo\\xADgout form is sub\\xADmit\\xADted:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"handleLogout\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(RoutingContext ctx)\"),\" \"),`{\n\n    OAuth2TokenImpl oAuth2Token = (OAuth2TokenImpl) ctx.user();\n    oAuth2Token.logout(res -> {\n\n        `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),` (!res.succeeded()) {\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// the user might not have been logged out, to know why:\"),`\n            respondWith(ctx, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"500\"),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"text/html\"'),\", String.format(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<h1>Logout failed %s</h1>\"'),`, res.cause()));\n            `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),`;\n        }\n\n        ctx.session().destroy();\n        ctx.response().putHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"location\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/?logout=true\"'),\").setStatusCode(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"302\"),`).end();\n    });\n}\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" String \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"createLogoutForm\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(RoutingContext ctx)\"),\" \"),`{\n\n    String csrfToken = ctx.get(CSRFHandler.DEFAULT_HEADER_NAME);\n\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<form action=\\\\\"/logout\\\\\" method=\\\\\"post\\\\\">\"'),`\n            + String.format(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<input type=\\\\\"hidden\\\\\" name=\\\\\"%s\\\\\" value=\\\\\"%s\\\\\">\"'),`, CSRFHandler.DEFAULT_HEADER_NAME, csrfToken)\n            + `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"<button>Logout</button></form>\"'),`;\n}\n`)),mdx(\"p\",null,\"Some ad\\xADdi\\xADtional plumb\\xADing:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-java\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"respondWithOk\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(RoutingContext ctx, String contentType, String content)\"),\" \"),`{\n    respondWith(ctx, `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"200\"),`, contentType, content);\n}\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"private\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"void\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"respondWith\"),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-params\"}),\"(RoutingContext ctx, \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"int\"),\" statusCode, String contentType, String content)\"),\" \"),`{\n    ctx.request().response() `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"//\"),`\n            .putHeader(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"content-type\"'),\", contentType) \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"//\"),`\n            .setStatusCode(statusCode)\n            .end(content);\n}\n`)),mdx(\"h2\",e({},{id:\"more-examples\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#more-examples\"})),\"More examples\"),mdx(\"p\",null,\"This con\\xADcludes the Key\\xADcloak in\\xADte\\xADgra\\xADtion ex\\xADam\\xADple.\"),mdx(\"p\",null,\"Check out the com\\xADplete ex\\xADam\\xADple in \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/thomasdarimont/vertx-playground/tree/master/keycloak-vertx\"}),\"keycloak-\\u200Bvertx Ex\\xADam\\xADples Repo\"),\".\"),mdx(\"p\",null,\"Thank you for your time, stay tuned for more up\\xADdates! If you want to learn more about Key\\xADcloak, feel free to reach out to me. You can find me via \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://twitter.com/thomasdarimont\"}),\"thomas\\xADda\\xADri\\xADmont on twit\\xADter\"),\".\"),mdx(\"p\",null,\"Happy Hack\\xADing!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"prevPost":{"meta":{"title":"Eclipse Vert.x 3.9.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"New features include fluent queries in SQL clients, a new Redis client, an updated Kafka client, an improved Future API, and many more things."},"date":"2020-04-02","slug":"eclipse-vert-x-3-9-0-released"},"nextPost":{"meta":{"title":"Eclipse Vert.x 3.8.5","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"This version is a minor bug fix release addressing issues found in Vert.x 3.8.4. We would like to thank you all for reporting these issues."},"date":"2020-01-24","slug":"eclipse-vert-x-3-8-5"},"relatedPosts":[{"meta":{"title":"JWT Authorization for Vert.x with Keycloak","category":"guides","authors":[{"name":"Thomas Darimont","github_id":"thomasdarimont"}],"summary":"In this blog post, you'll learn about JWT foundations, protect routes with JWT Authorization, JWT encoded tokens, and RBAC with Keycloak"},"date":"2020-10-01","slug":"jwt-authorization-for-vert-x-with-keycloak"},{"meta":{"title":"Things to keep in mind concerning CSRF attacks","category":"guides","authors":[{"name":"Xhelal Likaj","github_id":"xhlika"}],"summary":"Eclipse Vert.x like most frameworks provides an anti-CSRF defense. However, no framework can prevent all attack vectors that exist in the web. Therefore, developers need to be aware of some dangers and common attack vectors concerning CSRF defenses."},"date":"2021-01-23","slug":"eclipse-vert-x-CSRF-concerns"},{"meta":{"title":"Some Rest with Vert.x","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"This post is part of the Introduction to Vert.x series. Let’s go a bit further this time and develop a CRUD-ish application"},"date":"2015-07-27","slug":"some-rest-with-vert-x"}]},"__N_SSG":true}