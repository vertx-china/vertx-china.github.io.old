{"pageProps":{"categories":["releases","guides","security","news"],"post":{"meta":{"title":"Scala is here","category":"guides","authors":[{"name":"Jochen Mader","github_id":"codepitbull"}],"summary":"The rise of Scala as one of the most important languages on the JVM caught many (me included) by surprise. This hybrid of functional and imperative paradigms struck a chord with many developers."},"date":"2017-03-20","slug":"scala-is-here","readingTime":{"text":"8 min read","minutes":7.065,"time":423900,"words":1413},"content":{"compiledSource":"var m=Object.defineProperty,h=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var p=(a,t,s)=>t in a?m(a,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[t]=s,e=(a,t)=>{for(var s in t||(t={}))l.call(t,s)&&p(a,s,t[s]);if(n)for(var s of n(t))o.call(t,s)&&p(a,s,t[s]);return a},i=(a,t)=>h(a,d(t));var c=(a,t)=>{var s={};for(var r in a)l.call(a,r)&&t.indexOf(r)<0&&(s[r]=a[r]);if(a!=null&&n)for(var r of n(a))t.indexOf(r)<0&&o.call(a,r)&&(s[r]=a[r]);return s};const makeShortcode=a=>function(s){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},s))},Alert=makeShortcode(\"Alert\"),Link=makeShortcode(\"Link\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var r=s,{components:a}=r,t=c(r,[\"components\"]);return mdx(MDXLayout,i(e(e({},layoutProps),t),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"TL;DR:\")),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Scala sup\\xADport for Vert.x is here!\"),mdx(\"li\",{parentName:\"ul\"},\"It is based on Scala 2.12, no sup\\xADport for 2.11 planned\"),mdx(\"li\",{parentName:\"ul\"},\"all Vert.x-\\u200Bmodules are avail\\xADable in a Scala fla\\xADvor\"),mdx(\"li\",{parentName:\"ul\"},\"It\\u2019s awe\\xADsome\"),mdx(\"li\",{parentName:\"ul\"},\"Get started \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/vert-x3/vertx-sbt-starter\"}),\"here\"))),mdx(\"h2\",e({},{id:\"intro\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#intro\"})),\"Intro\"),mdx(\"p\",null,\"The rise of \",mdx(\"a\",e({parentName:\"p\"},{href:\"http://scala-lang.org/\"}),\"Scala\"),\" as one of the most im\\xADpor\\xADtant lan\\xADguages on the JVM caught many (me in\\xADcluded) by sur\\xADprise. This hy\\xADbrid of func\\xADtional and im\\xADper\\xADa\\xADtive par\\xADa\\xADdigms struck a chord with many de\\xADvel\\xADop\\xADers. Thanks to Scala a lot of peo\\xADple who\\u2019d never have touched a lan\\xADguage like Haskell got ex\\xADposed to func\\xADtional pro\\xADgram\\xADming. This ex\\xADpo\\xADsure was one of the dri\\xADving forces to get streams and lambda into the JVM.\"),mdx(\"p\",null,\"With the re\\xADlease of Vert.x 3.4.0 we fi\\xADnally in\\xADtro\\xADduced Scala to the fam\\xADily of sup\\xADported lan\\xADguages: \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/vert-x3/vertx-lang-scala\"}),\"vertx-\\u200Blang-scala\"),\".\"),mdx(\"p\",null,\"In this post I will in\\xADtro\\xADduce the new stack and how the power of Scala can be used in your fa\\xADvorite re\\xADac\\xADtive toolkit.\"),mdx(\"h2\",e({},{id:\"basics\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#basics\"})),\"Basics\"),mdx(\"p\",null,\"vertx-\\u200Blang-scala is based on Scala 2.12. There are no plans to sup\\xADport 2.11.\"),mdx(\"p\",null,\"All mod\\xADules avail\\xADable for Vert.x are sup\\xADported (you can check  \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/vert-x3/vertx-lang-scala/tree/master/vertx-lang-scala-stack\"}),\"here\"),\" ).\"),mdx(Alert,{info:!0,title:\"Future and Promise both need a ExecutionContext\",mdxType:\"Alert\"},mdx(\"p\",null,\"Mod\\xADules use the fol\\xADlow\\xADing naming-\\u200Bscheme: \",mdx(\"em\",{parentName:\"p\"},\"io.vertx:\",\"<\",\"name-\\u200Bof-vertx-module\",\">\",\"-\\u200Bscala_2.12:\",\"<\",\"vertx-\\u200Bmajor-version\",\">\"),\". The Scala ver\\xADsion of \",mdx(\"em\",{parentName:\"p\"},\"io.vertx:vert-\\u200Bweb:3.4.0\"),\" would be \",mdx(\"em\",{parentName:\"p\"},\"io.vertx:vertx-\\u200Bweb-scala_2.12:3.4.0\"),\".\")),mdx(\"p\",null,\"There is an sbt-\\u200Bbased \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/vert-x3/vertx-sbt-starter\"}),\"quickstart-\\u200Bproject\"),\" avail\\xADable that will be up\\xADdated for each Vert.x-\\u200Brelease.\"),mdx(\"p\",null,\"Please note: Al\\xADthough \",mdx(\"a\",e({parentName:\"p\"},{href:\"http://www.scala-sbt.org/\"}),\"sbt\"),\" is used in this quick\\xADstart it is by no means re\\xADquired. There are no spe\\xADcial plu\\xADg\\xADins in\\xADvolved so vertx-\\u200Blang-scala can eas\\xADily be used with \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.gradle.org/current/userguide/scala_plugin.html\"}),\"Gra\\xADdle\"),\" or \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/davidB/scala-maven-plugin\"}),\"Maven\"),\".\"),mdx(\"p\",null,\"I use sbt as it is the de\\xADfault build sys\\xADtem used for Scala projects.\"),mdx(\"h2\",e({},{id:\"quickstart\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#quickstart\"})),\"Quickstart\"),mdx(\"p\",null,\"Let\\u2019s get started by cloning the quick\\xADstart:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),\"git \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-built_in\"}),\"clone\"),` git@github.com:vert-x3/vertx-sbt-starter.git\n`)),mdx(\"p\",null,\"You just got the fol\\xADlow\\xADing things:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"An sbt project con\\xADtain\\xADing de\\xADpen\\xADden\\xADcies to Vert.x-\\u200Bcore and Vert.x-web\"),mdx(\"li\",{parentName:\"ul\"},\"The abil\\xADity to cre\\xADate a fat-\\u200Bjat via \",mdx(\"inlineCode\",{parentName:\"li\"},\"sbt assembly\")),mdx(\"li\",{parentName:\"ul\"},\"The abil\\xADity to cre\\xADate a docker con\\xADtainer via \",mdx(\"inlineCode\",{parentName:\"li\"},\"sbt docker\")),mdx(\"li\",{parentName:\"ul\"},\"A few ex\\xADam\\xADple ver\\xADti\\xADcles\"),mdx(\"li\",{parentName:\"ul\"},\"Unit test ex\\xADam\\xADples\"),mdx(\"li\",{parentName:\"ul\"},\"a pre-\\u200Bconfigured Scala-\\u200Bshell in\\xADside sbt\")),mdx(\"p\",null,\"We will now run the ap\\xADpli\\xADca\\xADtion to get some quick sat\\xADis\\xADfac\\xADtion. Use \",mdx(\"inlineCode\",{parentName:\"p\"},\"sbt assembly\"),\" to pro\\xADduce the fat-\\u200Bjar fol\\xADlowed by \",mdx(\"inlineCode\",{parentName:\"p\"},\"java -jar target/scala-2.12/vertx-scala-sbt-assembly-0.1-SNAPSHOT.jar\"),\". Now point your browser to \",mdx(\"a\",e({parentName:\"p\"},{href:\"http://localhost:8666/hello\"}),\"http://lo\\xADcal\\xADhost:8666/hello\"),\" for a clas\\xADsic wel\\xADcome mes\\xADsage.\"),mdx(\"h2\",e({},{id:\"the-details\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#the-details\"})),\"The details\"),mdx(\"p\",null,\"Open your IDE so we can take a look at what\\u2019s going on under the hood. We start with the \",mdx(\"em\",{parentName:\"p\"},\"HttpVer\\xADti\\xADcle\"),\".\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-scala\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"package\"),` io.vertx.scala.sbt\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),\" io.vertx.lang.scala.\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-type\"}),\"ScalaVerticle\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),\" io.vertx.scala.ext.web.\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-type\"}),\"Router\"),`\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),\" scala.concurrent.\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-type\"}),\"Future\"),`\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-class\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"class\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"HttpVerticle\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"extends\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"ScalaVerticle\"),\" \"),\"{ \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <1>\"),`\n\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"override\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"def\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"startFuture\")),\"(): \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-type\"}),\"Future\"),\"[\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-type\"}),\"Unit\"),\"] = { \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <2>\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"val\"),\" router = \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-type\"}),\"Router\"),\".router(vertx) \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <3>\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"val\"),` route = router\n      .get(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/hello\"'),`)\n        .handler(_.response().end(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"world\"'),`))\n\n    vertx `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"//<4>\"),`\n      .createHttpServer()\n      .requestHandler(router.accept)\n      .listenFuture(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"8666\"),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"0.0.0.0\"'),\")  \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <5>\"),`\n        .map(_ => ()) `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <6>\"),`\n  }\n}\n`)),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},mdx(\"em\",{parentName:\"li\"},\"ScalaVer\\xADti\\xADcle\"),\" is the base class for all Scala-\\u200BVerticles. It pro\\xADvides all re\\xADquired meth\\xADods to in\\xADte\\xADgrate with the Vert.x-\\u200Bruntime.\"),mdx(\"li\",{parentName:\"ol\"},\"There are two ways to start a Ver\\xADti\\xADcle. Over\\xADrid\\xADing \",mdx(\"em\",{parentName:\"li\"},\"start\\xADFu\\xADture\"),\", like in this ex\\xADam\\xADple, tells Vert.x to only con\\xADsider the Ver\\xADti\\xADcle fully started after the re\\xADturned \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\",\"[Unit]\"),\" has been suc\\xADcess\\xADfully com\\xADpleted. Al\\xADter\\xADna\\xADtively one can over\\xADride \",mdx(\"em\",{parentName:\"li\"},\"start\"),\" and by that sig\\xADnal to Vert.x the in\\xADstant avail\\xADabil\\xADity of the Ver\\xADti\\xADcle.\"),mdx(\"li\",{parentName:\"ol\"},\"This block cre\\xADates a \",mdx(\"em\",{parentName:\"li\"},\"Router\"),\" for in\\xADcom\\xADing HTTP-\\u200Brequests. It reg\\xADis\\xADters a han\\xADdler to an\\xADswer with \\u201Cworld\\u201D if a re\\xADquest to the URL \\u201C/hello\\u201D ar\\xADrives. The class is com\\xADing from the \",mdx(Link,{href:\"/docs/vertx-web/scala/\",passHref:!0,mdxType:\"Link\"},mdx(\"a\",e({parentName:\"li\"},{href:\"\"}),\"Vert.x-\\u200Bweb-module\")),\".\"),mdx(\"li\",{parentName:\"ol\"},\"Every Ver\\xADti\\xADcle has ac\\xADcess to the Vert.x-\\u200Binstance. Here we use it to cre\\xADate a web\\xADserver and reg\\xADis\\xADter our router to han\\xADdle in\\xADcom\\xADing re\\xADquests.\"),mdx(\"li\",{parentName:\"ol\"},\"We fi\\xADnally reached the rea\\xADson why I use \",mdx(\"em\",{parentName:\"li\"},\"start\\xADFu\\xADture\"),\" in the first place. All op\\xADer\\xADa\\xADtions in Vert.x are asyn\\xADchro\\xADnous. So start\\xADing the web\\xADserver most def\\xADi\\xADnitely means it takes some more time until it bound to the given port (8666 in this case). That\\u2019s why \",mdx(\"em\",{parentName:\"li\"},\"lis\\xADten\\xADFu\\xADture\"),\" is used, which re\\xADturns a \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\"),\" which in turn con\\xADtains the ac\\xADtual in\\xADstance of the web\\xADserver that just got started. So our Ver\\xADti\\xADcle will be ready to re\\xADceive re\\xADquests \",mdx(\"em\",{parentName:\"li\"},\"after\"),\" the re\\xADturned \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\"),\" has been com\\xADpleted.\"),mdx(\"li\",{parentName:\"ol\"},\"In most cases we can re\\xADturn the \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\"),\" di\\xADrectly. In this case the \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\"),\" re\\xADturned by \",mdx(\"em\",{parentName:\"li\"},\"lis\\xADten\\xADFu\\xADture\"),\" has the wrong type. We get a \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\",\"[HttpServer]\"),\" but we need a \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\",\"[Unit]\"),\" as you can see in the sig\\xADna\\xADture of \",mdx(\"em\",{parentName:\"li\"},\"start\\xADFu\\xADture\"),\". This call takes care of map\\xADping the given \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\",\"[HttpServer]\"),\" to the re\\xADquired re\\xADturn type.\")),mdx(\"h2\",e({},{id:\"testing\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#testing\"})),\"Testing\"),mdx(\"p\",null,\"I use \",mdx(\"a\",e({parentName:\"p\"},{href:\"http://www.scalatest.org/\"}),\"Sca\\xADlaT\\xADest\"),\" for all my test\\xADing needs. It comes with stel\\xADlar sup\\xADport for asyn\\xADchro\\xADnous op\\xADer\\xADa\\xADtions and is a per\\xADfect fit for test\\xADing Vert.x-\\u200Bapplications.\"),mdx(\"p\",null,\"The fol\\xADlow\\xADing \",mdx(\"em\",{parentName:\"p\"},\"HttpVer\\xADti\\xADcle\\xADSpec\"),\" shows how to test an HTTP-\\u200BAPI using only Vert.x-\\u200Bclasses. Per\\xADson\\xADally I pre\\xADfer \",mdx(\"a\",e({parentName:\"p\"},{href:\"http://rest-assured.io/\"}),\"REST-\\u200Bassured\"),\" with its rich DSL. For this post I wanted to stick with Vert.x-API, so here we go.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-scala\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"package\"),` io.vertx.scala.sbt\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),\" org.scalatest.\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-type\"}),\"Matchers\"),`\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"import\"),\" scala.concurrent.\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-type\"}),\"Promise\"),`\n\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-class\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"class\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"HttpVerticleSpec\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"extends\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"VerticleTesting\"),\"[\",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-type\"}),\"HttpVerticle\"),\"] \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-keyword\"}),\"with\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-title\"}),\"Matchers\"),\" \"),\"{ \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <1>\"),`\n\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"HttpVerticle\"'),\" should \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),`\"bind to 8666 and answer with 'world'\"`),\" in { \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <2>\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"val\"),\" promise = \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-type\"}),\"Promise\"),\"[\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-type\"}),\"String\"),\"] \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <3>\"),`\n\n    vertx.createHttpClient()  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <4>\"),`\n      .getNow(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-number\"}),\"8666\"),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"127.0.0.1\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"/hello\"'),`,\n        r => {\n          r.exceptionHandler(promise.failure)\n          r.bodyHandler(b => promise.success(b.toString))\n        })\n\n    promise.future.map(res => res should equal(`,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"world\"'),\")) \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <5>\"),`\n  }\n\n}\n`)),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},mdx(\"em\",{parentName:\"li\"},\"Ver\\xADti\\xADcleTest\\xADing\"),\" is a base class for your tests in\\xADcluded with the quickstart-\\u200Bproject. It\\u2019s a small helper that takes care of de\\xADploy\\xADing/un-\\u200Bdeploying the Ver\\xADti\\xADcle to be tested and man\\xADages a Vert.x-\\u200Binstance. It ad\\xADdi\\xADtion\\xADally ex\\xADtends \",mdx(\"a\",e({parentName:\"li\"},{href:\"http://www.scalatest.org/user_guide/async_testing\"}),\"AsyncFlat\\xADSpec\"),\" so we can use Fu\\xADtures as test-\\u200Breturn-types.\"),mdx(\"li\",{parentName:\"ol\"},\"Isn\\u2019t it nice and read\\xADable?\"),mdx(\"li\",{parentName:\"ol\"},\"The promise is re\\xADquired as the whole test will run async\"),mdx(\"li\",{parentName:\"ol\"},\"We use the vertx-\\u200Binstance pro\\xADvided by \",mdx(\"em\",{parentName:\"li\"},\"Ver\\xADti\\xADcleTest\\xADing\"),\" to cre\\xADate a Netty-\\u200Bbased Http\\xADClient. We in\\xADstruct the client to call the spec\\xADi\\xADfied URL and to suc\\xADceed the \",mdx(\"em\",{parentName:\"li\"},\"Promise\"),\" with the re\\xADturned body.\"),mdx(\"li\",{parentName:\"ol\"},\"This cre\\xADates the ac\\xADtual as\\xADser\\xADtion. After get\\xADting the \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\"),\" from the \",mdx(\"em\",{parentName:\"li\"},\"Promise\"),\" an as\\xADser\\xADtion is cre\\xADated: \",mdx(\"em\",{parentName:\"li\"},\"The Re\\xADsult should be equal to the String \\u201Cworld\\u201D\"),\". Sca\\xADlaT\\xADest takes care of eval\\xADu\\xADat\\xADing the re\\xADturned \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\"),\".\")),mdx(\"p\",null,\"That\\u2019s all you need to get started!\"),mdx(\"h2\",e({},{id:\"futures-in-vertx-lang-scala\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#futures-in-vertx-lang-scala\"})),\"Futures in vertx-lang-scala\"),mdx(\"p\",null,\"Now for a more in depth topic I think is worth men\\xADtion\\xADing. vertx-\\u200Blang-scala treats async op\\xADer\\xADa\\xADtions the Scala-\\u200Bway which is a lit\\xADtle dif\\xADfer\\xADent from what you might be used from Vert.x. For async op\\xADer\\xADa\\xADtions like sub\\xADscrib\\xADing to the event\\xADbus or de\\xADploy\\xADing a Ver\\xADti\\xADcle you would call a method like this:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-scala\"}),\"vertx.deployVerticle(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"com.foo.OtherVerticle\"'),`, res -> {\n  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"if\"),` (res.succeeded()) {\n    startFuture.complete();\n  } `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"else\"),` {\n    startFuture.fail(res.cause());\n  }\n});\n`)),mdx(\"p\",null,\"The \",mdx(\"em\",{parentName:\"p\"},\"de\\xADployVer\\xADti\\xADcle\"),\" method takes the Verticle-\\u200Bname and a \",mdx(\"em\",{parentName:\"p\"},\"Han\\xADdler\",\"[Asyn\\xADcRe\\xADsult]\"),\" as its ar\\xADgu\\xADments. The \",mdx(\"em\",{parentName:\"p\"},\"Han\\xADdler\",\"[Asyn\\xADcRe\\xADsult]\"),\" is called after Vert.x tried de\\xADploy\\xADing the Ver\\xADti\\xADcle. This style can also be used for Scala (which might ease the tran\\xADsi\\xADtion when com\\xADing from the Java-\\u200Bworld) but their is a way more \",mdx(\"em\",{parentName:\"p\"},\"scalaish\"),\" way of doing this.\"),mdx(\"p\",null,\"For every method tak\\xADing a \",mdx(\"em\",{parentName:\"p\"},\"Han\\xADdler\",\"[Asyn\\xADcRe\\xADsult]\"),\" as its ar\\xADgu\\xADment I cre\\xADate an al\\xADter\\xADna\\xADtive method using \",mdx(\"a\",e({parentName:\"p\"},{href:\"http://docs.scala-lang.org/overviews/core/futures.html\"}),\"Scala-\\u200BFutures\"),\".\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-scala\"}),\"vertx.deployVerticleFuture(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'\"com.foo.OtherVerticle\"'),\") \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <1>\"),`\n  .onComplete{  `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <2>\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"case\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-type\"}),\"Success\"),\"(s) => println(\",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-string\"}),'s\"Verticle id is: ',mdx(\"span\",e({parentName:\"span\"},{className:\"hljs-subst\"}),\"$s\"),'\"'),\") \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-comment\"}),\"// <3>\"),`\n    `,mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-keyword\"}),\"case\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"hljs-type\"}),\"Failure\"),`(t) => t.printStackTrace()\n  }\n`)),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"A method pro\\xADvid\\xADing a \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\"),\" based al\\xADter\\xADna\\xADtive gets \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\"),\" ap\\xADpended to its name and re\\xADturns a \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\"),\" in\\xADstead of tak\\xADing a \",mdx(\"em\",{parentName:\"li\"},\"Han\\xADdler\"),\" as its ar\\xADgu\\xADment.\"),mdx(\"li\",{parentName:\"ol\"},\"We are now free to use \",mdx(\"em\",{parentName:\"li\"},\"Fu\\xADture\"),\" the way we want. In this case on\\xADCom\\xADplete is used to react on the com\\xADple\\xADtion.\"),mdx(\"li\",{parentName:\"ol\"},\"Pat\\xADtern match\\xADing on the re\\xADsult \",mdx(\"em\",{parentName:\"li\"},\"<\",\"3\"))),mdx(\"p\",null,\"I strongly rec\\xADom\\xADmend using this ap\\xADproach over using \",mdx(\"em\",{parentName:\"p\"},\"Han\\xADdlers\"),\" as you won\\u2019t run into Callback-\\u200Bhell and you get all the good\\xADies Scala pro\\xADvides for async op\\xADer\\xADa\\xADtions.\"),mdx(Alert,{info:!0,title:\"Future and Promise both need a ExecutionContext\",mdxType:\"Alert\"},mdx(\"p\",null,\"The \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/vert-x3/vertx-lang-scala/blob/master/vertx-lang-scala/src/main/scala/io/vertx/lang/scala/VertxExecutionContext.scala\"}),\"Vertx\\xADEx\\xADe\\xADcu\\xADtion\\xADCon\\xADtext\"),\" is made im\\xADplic\\xADitly avail\\xADable in\\xADside the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/vert-x3/vertx-lang-scala/blob/master/vertx-lang-scala/src/main/scala/io/vertx/lang/scala/ScalaVerticle.scala\"}),\"ScalaVer\\xADti\\xADcle\"),\". It makes sure all  op\\xADer\\xADa\\xADtions are ex\\xADe\\xADcuted on the cor\\xADrect Event Loop. If you are using Vert.x with\\xADout Ver\\xADti\\xADcles you have to pro\\xADvide it on your own.\")),mdx(\"h2\",e({},{id:\"using-the-console\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#using-the-console\"})),\"Using the console\"),mdx(\"p\",null,\"A great fea\\xADture of sbt is the em\\xADbed\\xADded, con\\xADfig\\xADurable Scala-\\u200Bconsole. The con\\xADsole avail\\xADable in the quickstart-\\u200Bproject is pre-\\u200Bconfigured to pro\\xADvide a fresh Vert.x-\\u200Binstance and all re\\xADquired im\\xADports so you can start play\\xADing around with Vert.x in an in\\xADstant.\"),mdx(\"p\",null,\"Ex\\xADe\\xADcute the fol\\xADlow\\xADing com\\xADmands in the project-\\u200Bfolder to de\\xADploy the \",mdx(\"em\",{parentName:\"p\"},\"HttpVer\\xADti\\xADcle\"),\":\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"hljs language-bash\"}),`sbt\n> console\nscala> vertx.deployVerticle(nameForVerticle[HttpVerticle])\nscala> vertx.deploymentIDs\n`)),mdx(\"p\",null,\"After  ex\\xADe\\xADcut\\xADing this se\\xADquence you can now point your browser \",mdx(\"a\",e({parentName:\"p\"},{href:\"http://localhost:8666/hello\"}),\"http://lo\\xADcal\\xADhost:8666/hello\"),\" to see our mes\\xADsage. The last com\\xADmand is\\xADsued shows the Ids under which Ver\\xADti\\xADcles have been de\\xADployed.\"),mdx(\"p\",null,\"To get rid of the de\\xADploy\\xADment you can now type \",mdx(\"inlineCode\",{parentName:\"p\"},\"vertx.undeploy(vertx.deploymentIDs.head)\"),\".\"),mdx(\"h2\",e({},{id:\"thats-it\"}),mdx(\"a\",e({parentName:\"h2\"},{\"aria-hidden\":!0,tabIndex:-1,className:\"heading-anchor\",href:\"#thats-it\"})),\"That\\u2019s it!\"),mdx(\"p\",null,`This was a very quick in\\xADtro\\xADduc\\xADtion to our new Scala-\\u200Bstack. I hope to have given you a lit\\xADtle taste of the Scala good\\xADness now avail\\xADable with Vert.x. I rec\\xADom\\xADmend dig\\xADging a lit\\xADtle more through the quick\\xADstart to get a feel\\xADing for what\\u2019s there.\nIn my next blog post I will ex\\xADplain some of the de\\xADci\\xADsions I made and the ob\\xADsta\\xADcles I faced with the dif\\xADfer\\xADences be\\xADtween Java and Scala /Hint: They are way big\\xADger than I was aware of).`),mdx(\"p\",null,\"Enjoy!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"prevPost":{"meta":{"title":"Dynamic Routing in Serverless Microservice with Vert.x Event Bus","category":"guides","authors":[{"name":"Rowell Belen","github_id":"bytekast"}],"summary":"The Serverless Framework has become the de facto toolkit for building and deploying serverless functions or applications."},"date":"2017-04-14","slug":"dynamic-routing-in-serverless-microservice-with-vert-x-event-bus"},"nextPost":{"meta":{"title":"Data-driven Apps made easy with Vert.x 3.4.0 and headless CMS Gentics Mesh","category":"guides","authors":[{"name":"Johannes Schüth","github_id":"jotschi"}],"summary":"I would like to share why Vert.x is not only a robust foundation for the headless Content Management System Gentics Mesh but also how it can be used to build a template-based web server."},"date":"2017-03-13","slug":"data-driven-apps-made-easy-with-vert-x-3-4-0-and-headless-cms-gentics-mesh"},"relatedPosts":[{"meta":{"title":"Unit and Integration Tests","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let’s refresh our mind about what we developed so far in the introduction to vert.x series. We forgot an important task. We didn’t test the API."},"date":"2015-08-03","slug":"unit-and-integration-tests"},{"meta":{"title":"My first Vert.x 3 Application","category":"guides","authors":[{"name":"Clement Escoffier","github_id":"cescoffier"}],"summary":"Let's say, you heard someone saying that Vert.x is awesome. Ok great, but you may want to try it by yourself. Well, the next natural question is “where do I start ?”"},"date":"2015-07-14","slug":"my-first-vert-x-3-application"},{"meta":{"title":"Eclipse Vert.x for Scala next steps","category":"news","authors":[{"name":"Jochen Mader","github_id":"codepitbull"}],"summary":"This blog post gives an overview of the current plans for the vertx-lang-scala module, in particular with respect to the upcoming Vert.x 4."},"date":"2019-08-30","slug":"eclipse-vert-x-for-scala-next-steps"}]},"__N_SSG":true}